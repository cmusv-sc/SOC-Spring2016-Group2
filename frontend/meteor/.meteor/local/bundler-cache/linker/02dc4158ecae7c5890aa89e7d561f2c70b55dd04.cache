[{"type":"js","data":"(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar Template = Package.templating.Template;\nvar Blaze = Package.blaze.Blaze;\nvar UI = Package.blaze.UI;\nvar Handlebars = Package.blaze.Handlebars;\nvar _ = Package.underscore._;\nvar Tracker = Package.tracker.Tracker;\nvar Deps = Package.tracker.Deps;\nvar Iron = Package['iron:core'].Iron;\nvar Spacebars = Package.spacebars.Spacebars;\nvar HTML = Package.htmljs.HTML;\n\n/* Package-scope variables */\nvar findFirstLayout, Layout, DEFAULT_REGION;\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/iron_layout/version_conflict_errors.js                                                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar errors = [];                                                                                                       // 1\n                                                                                                                       // 2\nif (Package['cmather:iron-layout']) {                                                                                  // 3\n  errors.push(\"\\n\\n\\\n    The cmather:iron-{x} packages were migrated to the new package system with the wrong name, and you have duplicate copies.\\n\\\n    You can see which cmather:iron-{x} packages have been installed by using this command:\\n\\n\\\n    > meteor list\\n\\n\\\n    Can you remove any installed cmather:iron-{x} packages like this:\\\n    \\n\\n\\\n    > meteor remove cmather:iron-core\\n\\\n    > meteor remove cmather:iron-router\\n\\\n    > meteor remove cmather:iron-dynamic-template\\n\\\n    > meteor remove cmather:iron-dynamic-layout\\n\\\n    \\n\\\n    The new packages are named iron:{x}. For example:\\n\\n\\\n    > meteor add iron:router\\n\\n\\\n    Sorry for the hassle, but thank you!\\\n    \\n\\n\\\n  \");                                                                                                                  // 19\n}                                                                                                                      // 20\n                                                                                                                       // 21\n// If the user still has blaze-layout throw  an error. Let's get rid of that                                           // 22\n// package so it's not lingering around with all its nastiness.                                                        // 23\nif (Package['cmather:blaze-layout']) {                                                                                 // 24\n  errors.push(                                                                                                         // 25\n    \"The blaze-layout package has been replaced by iron-layout. Please remove the package like this:\\n> meteor remove cmather:blaze-layout\\n\"\n  );                                                                                                                   // 27\n}                                                                                                                      // 28\n                                                                                                                       // 29\nif (errors.length > 0) {                                                                                               // 30\n  throw new Error(\"Sorry! Looks like there's a few errors related to iron:layout\\n\\n\" + errors.join(\"\\n\\n\"));          // 31\n}                                                                                                                      // 32\n                                                                                                                       // 33\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/iron_layout/template.default_layout.js                                                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"__IronDefaultLayout__\");                                                                         // 2\nTemplate[\"__IronDefaultLayout__\"] = new Template(\"Template.__IronDefaultLayout__\", (function() {                       // 3\n  var view = this;                                                                                                     // 4\n  return Spacebars.include(view.lookupTemplate(\"yield\"));                                                              // 5\n}));                                                                                                                   // 6\n                                                                                                                       // 7\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/iron_layout/layout.js                                                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n/*****************************************************************************/                                        // 1\n/* Imports */                                                                                                          // 2\n/*****************************************************************************/                                        // 3\nvar DynamicTemplate = Iron.DynamicTemplate;                                                                            // 4\nvar inherits = Iron.utils.inherits;                                                                                    // 5\n                                                                                                                       // 6\n/*****************************************************************************/                                        // 7\n/* Helpers */                                                                                                          // 8\n/*****************************************************************************/                                        // 9\n/**                                                                                                                    // 10\n * Find the first Layout in the rendered parent hierarchy.                                                             // 11\n */                                                                                                                    // 12\nfindFirstLayout = function (view) {                                                                                    // 13\n  while (view) {                                                                                                       // 14\n    if (view.name === 'Iron.Layout')                                                                                   // 15\n      return view.__dynamicTemplate__;                                                                                 // 16\n    else                                                                                                               // 17\n      view = view.parentView;                                                                                          // 18\n  }                                                                                                                    // 19\n                                                                                                                       // 20\n  return null;                                                                                                         // 21\n};                                                                                                                     // 22\n                                                                                                                       // 23\n/*****************************************************************************/                                        // 24\n/* Layout */                                                                                                           // 25\n/*****************************************************************************/                                        // 26\n                                                                                                                       // 27\n/**                                                                                                                    // 28\n * Dynamically render templates into regions.                                                                          // 29\n *                                                                                                                     // 30\n * Layout inherits from Iron.DynamicTemplate and provides the ability to create                                        // 31\n * regions that a user can render templates or content blocks into. The layout                                         // 32\n * and each region is an instance of DynamicTemplate so the template and data                                          // 33\n * contexts are completely dynamic and programmable in javascript.                                                     // 34\n */                                                                                                                    // 35\nLayout = function (options) {                                                                                          // 36\n  var self = this;                                                                                                     // 37\n                                                                                                                       // 38\n  Layout.__super__.constructor.apply(this, arguments);                                                                 // 39\n                                                                                                                       // 40\n  options = options || {};                                                                                             // 41\n  this.name = 'Iron.Layout';                                                                                           // 42\n  this._regions = {};                                                                                                  // 43\n  this._regionHooks = {};                                                                                              // 44\n  this.defaultTemplate('__IronDefaultLayout__');                                                                       // 45\n                                                                                                                       // 46\n  // if there's block content then render that                                                                         // 47\n  // to the main region                                                                                                // 48\n  if (options.content)                                                                                                 // 49\n    this.render(options.content);                                                                                      // 50\n};                                                                                                                     // 51\n                                                                                                                       // 52\n/**                                                                                                                    // 53\n * The default region for a layout where the main content will go.                                                     // 54\n */                                                                                                                    // 55\nDEFAULT_REGION = Layout.DEFAULT_REGION = 'main';                                                                       // 56\n                                                                                                                       // 57\n/**                                                                                                                    // 58\n * Inherits from Iron.DynamicTemplate which gives us the ability to set the                                            // 59\n * template and data context dynamically.                                                                              // 60\n */                                                                                                                    // 61\ninherits(Layout, Iron.DynamicTemplate);                                                                                // 62\n                                                                                                                       // 63\n/**                                                                                                                    // 64\n * Return the DynamicTemplate instance for a given region. If the region doesn't                                       // 65\n * exist it is created.                                                                                                // 66\n *                                                                                                                     // 67\n * The regions object looks like this:                                                                                 // 68\n *                                                                                                                     // 69\n *  {                                                                                                                  // 70\n *    \"main\": DynamicTemplate,                                                                                         // 71\n *    \"footer\": DynamicTemplate,                                                                                       // 72\n *    .                                                                                                                // 73\n *    .                                                                                                                // 74\n *    .                                                                                                                // 75\n *  }                                                                                                                  // 76\n */                                                                                                                    // 77\nLayout.prototype.region = function (name, options) {                                                                   // 78\n  return this._ensureRegion(name, options);                                                                            // 79\n};                                                                                                                     // 80\n                                                                                                                       // 81\n/**                                                                                                                    // 82\n * Destroy all child regions and reset the regions map.                                                                // 83\n */                                                                                                                    // 84\nLayout.prototype.destroyRegions = function () {                                                                        // 85\n  _.each(this._regions, function (dynamicTemplate) {                                                                   // 86\n    dynamicTemplate.destroy();                                                                                         // 87\n  });                                                                                                                  // 88\n                                                                                                                       // 89\n  this._regions = {};                                                                                                  // 90\n};                                                                                                                     // 91\n                                                                                                                       // 92\n/**                                                                                                                    // 93\n * Set the template for a region.                                                                                      // 94\n */                                                                                                                    // 95\nLayout.prototype.render = function (template, options) {                                                               // 96\n  // having options is usually good                                                                                    // 97\n  options = options || {};                                                                                             // 98\n                                                                                                                       // 99\n  // let the user specify the region to render the template into                                                       // 100\n  var region = options.to || options.region || DEFAULT_REGION;                                                         // 101\n                                                                                                                       // 102\n  // get the DynamicTemplate for this region                                                                           // 103\n  var dynamicTemplate = this.region(region);                                                                           // 104\n                                                                                                                       // 105\n  // if we're in a rendering transaction, track that we've rendered this                                               // 106\n  // particular region                                                                                                 // 107\n  this._trackRenderedRegion(region);                                                                                   // 108\n                                                                                                                       // 109\n  // set the template value for the dynamic template                                                                   // 110\n  dynamicTemplate.template(template);                                                                                  // 111\n                                                                                                                       // 112\n  // set the data for the region. If options.data is not defined, this will                                            // 113\n  // clear the data, which is what we want                                                                             // 114\n  dynamicTemplate.data(options.data);                                                                                  // 115\n};                                                                                                                     // 116\n                                                                                                                       // 117\n/**                                                                                                                    // 118\n * Returns true if the given region is defined and false otherwise.                                                    // 119\n */                                                                                                                    // 120\nLayout.prototype.has = function (region) {                                                                             // 121\n  region = region || Layout.DEFAULT_REGION;                                                                            // 122\n  return !!this._regions[region];                                                                                      // 123\n};                                                                                                                     // 124\n                                                                                                                       // 125\n/**                                                                                                                    // 126\n * Returns an array of region keys.                                                                                    // 127\n */                                                                                                                    // 128\nLayout.prototype.regionKeys = function () {                                                                            // 129\n  return _.keys(this._regions);                                                                                        // 130\n};                                                                                                                     // 131\n                                                                                                                       // 132\n/**                                                                                                                    // 133\n * Clear a given region or the \"main\" region by default.                                                               // 134\n */                                                                                                                    // 135\nLayout.prototype.clear = function (region) {                                                                           // 136\n  region = region || Layout.DEFAULT_REGION;                                                                            // 137\n                                                                                                                       // 138\n  // we don't want to create a region if it didn't exist before                                                        // 139\n  if (this.has(region))                                                                                                // 140\n    this.region(region).template(null);                                                                                // 141\n                                                                                                                       // 142\n  // chain it up                                                                                                       // 143\n  return this;                                                                                                         // 144\n};                                                                                                                     // 145\n                                                                                                                       // 146\n/**                                                                                                                    // 147\n * Clear all regions.                                                                                                  // 148\n */                                                                                                                    // 149\nLayout.prototype.clearAll = function () {                                                                              // 150\n  _.each(this._regions, function (dynamicTemplate) {                                                                   // 151\n    dynamicTemplate.template(null);                                                                                    // 152\n  });                                                                                                                  // 153\n                                                                                                                       // 154\n  // chain it up                                                                                                       // 155\n  return this;                                                                                                         // 156\n};                                                                                                                     // 157\n                                                                                                                       // 158\n/**                                                                                                                    // 159\n * Start tracking rendered regions.                                                                                    // 160\n */                                                                                                                    // 161\nLayout.prototype.beginRendering = function (onComplete) {                                                              // 162\n  var self = this;                                                                                                     // 163\n  if (this._finishRenderingTransaction)                                                                                // 164\n    this._finishRenderingTransaction();                                                                                // 165\n                                                                                                                       // 166\n  this._finishRenderingTransaction = _.once(function () {                                                              // 167\n    var regions = self._endRendering({flush: false});                                                                  // 168\n    onComplete && onComplete(regions);                                                                                 // 169\n  });                                                                                                                  // 170\n                                                                                                                       // 171\n  Deps.afterFlush(this._finishRenderingTransaction);                                                                   // 172\n                                                                                                                       // 173\n  if (this._renderedRegions)                                                                                           // 174\n    throw new Error(\"You called beginRendering again before calling endRendering\");                                    // 175\n  this._renderedRegions = {};                                                                                          // 176\n};                                                                                                                     // 177\n                                                                                                                       // 178\n/**                                                                                                                    // 179\n * Track a rendered region if we're in a transaction.                                                                  // 180\n */                                                                                                                    // 181\nLayout.prototype._trackRenderedRegion = function (region) {                                                            // 182\n  if (!this._renderedRegions)                                                                                          // 183\n    return;                                                                                                            // 184\n  this._renderedRegions[region] = true;                                                                                // 185\n};                                                                                                                     // 186\n                                                                                                                       // 187\n/**                                                                                                                    // 188\n * Stop a rendering transaction and retrieve the rendered regions. This                                                // 189\n * shouldn't be called directly. Instead, pass an onComplete callback to the                                           // 190\n * beginRendering method.                                                                                              // 191\n */                                                                                                                    // 192\nLayout.prototype._endRendering = function (opts) {                                                                     // 193\n  // we flush here to ensure all of the {{#contentFor}} inclusions have had a                                          // 194\n  // chance to render from our templates, otherwise we'll never know about                                             // 195\n  // them.                                                                                                             // 196\n  opts = opts || {};                                                                                                   // 197\n  if (opts.flush !== false)                                                                                            // 198\n    Deps.flush();                                                                                                      // 199\n  var renderedRegions = this._renderedRegions || {};                                                                   // 200\n  this._renderedRegions = null;                                                                                        // 201\n  return _.keys(renderedRegions);                                                                                      // 202\n};                                                                                                                     // 203\n                                                                                                                       // 204\n/**                                                                                                                    // 205\n * View lifecycle hooks for regions.                                                                                   // 206\n */                                                                                                                    // 207\n_.each(                                                                                                                // 208\n  [                                                                                                                    // 209\n    'onRegionCreated',                                                                                                 // 210\n    'onRegionRendered',                                                                                                // 211\n    'onRegionDestroyed'                                                                                                // 212\n  ],                                                                                                                   // 213\n  function (hook) {                                                                                                    // 214\n    Layout.prototype[hook] = function (cb) {                                                                           // 215\n      var hooks = this._regionHooks[hook] = this._regionHooks[hook] || [];                                             // 216\n      hooks.push(cb);                                                                                                  // 217\n      return this;                                                                                                     // 218\n    }                                                                                                                  // 219\n  }                                                                                                                    // 220\n);                                                                                                                     // 221\n                                                                                                                       // 222\n/**                                                                                                                    // 223\n * Returns the DynamicTemplate for a given region or creates it if it doesn't                                          // 224\n * exists yet.                                                                                                         // 225\n */                                                                                                                    // 226\nLayout.prototype._ensureRegion = function (name, options) {                                                            // 227\n return this._regions[name] = this._regions[name] || this._createDynamicTemplate(name, options);                       // 228\n};                                                                                                                     // 229\n                                                                                                                       // 230\n/**                                                                                                                    // 231\n * Create a new DynamicTemplate instance.                                                                              // 232\n */                                                                                                                    // 233\nLayout.prototype._createDynamicTemplate = function (name, options) {                                                   // 234\n  var self = this;                                                                                                     // 235\n  var tmpl = new Iron.DynamicTemplate(options);                                                                        // 236\n  var capitalize = Iron.utils.capitalize;                                                                              // 237\n  tmpl._region = name;                                                                                                 // 238\n                                                                                                                       // 239\n  _.each(['viewCreated', 'viewReady', 'viewDestroyed'], function (hook) {                                              // 240\n    hook = capitalize(hook);                                                                                           // 241\n    tmpl['on' + hook](function (dynamicTemplate) {                                                                     // 242\n      // \"this\" is the view instance                                                                                   // 243\n      var view = this;                                                                                                 // 244\n      var regionHook = ({                                                                                              // 245\n        viewCreated: \"regionCreated\",                                                                                  // 246\n        viewReady: \"regionRendered\",                                                                                   // 247\n        viewDestroyed: \"regionDestroyed\"                                                                               // 248\n      })[hook];                                                                                                        // 249\n      self._runRegionHooks('on' + regionHook, view, dynamicTemplate);                                                  // 250\n    });                                                                                                                // 251\n  });                                                                                                                  // 252\n                                                                                                                       // 253\n  return tmpl;                                                                                                         // 254\n};                                                                                                                     // 255\n                                                                                                                       // 256\nLayout.prototype._runRegionHooks = function (name, regionView, regionDynamicTemplate) {                                // 257\n  var layout = this;                                                                                                   // 258\n  var hooks = this._regionHooks[name] || [];                                                                           // 259\n  var hook;                                                                                                            // 260\n                                                                                                                       // 261\n  for (var i = 0; i < hooks.length; i++) {                                                                             // 262\n    hook = hooks[i];                                                                                                   // 263\n    // keep the \"thisArg\" pointing to the view, but make the first parameter to                                        // 264\n    // the callback teh dynamic template instance.                                                                     // 265\n    hook.call(regionView, regionDynamicTemplate.region, regionDynamicTemplate, this);                                  // 266\n  }                                                                                                                    // 267\n};                                                                                                                     // 268\n                                                                                                                       // 269\n/*****************************************************************************/                                        // 270\n/* UI Helpers */                                                                                                       // 271\n/*****************************************************************************/                                        // 272\nif (typeof Template !== 'undefined') {                                                                                 // 273\n  /**                                                                                                                  // 274\n   * Create a region in the closest layout ancestor.                                                                   // 275\n   *                                                                                                                   // 276\n   * Examples:                                                                                                         // 277\n   *    <aside>                                                                                                        // 278\n   *      {{> yield \"aside\"}}                                                                                          // 279\n   *    </aside>                                                                                                       // 280\n   *                                                                                                                   // 281\n   *    <article>                                                                                                      // 282\n   *      {{> yield}}                                                                                                  // 283\n   *    </article>                                                                                                     // 284\n   *                                                                                                                   // 285\n   *    <footer>                                                                                                       // 286\n   *      {{> yield \"footer\"}}                                                                                         // 287\n   *    </footer>                                                                                                      // 288\n   */                                                                                                                  // 289\n  UI.registerHelper('yield', new Template('yield', function () {                                                       // 290\n    var layout = findFirstLayout(this);                                                                                // 291\n                                                                                                                       // 292\n    if (!layout)                                                                                                       // 293\n      throw new Error(\"No Iron.Layout found so you can't use yield!\");                                                 // 294\n                                                                                                                       // 295\n    // Example options: {{> yield region=\"footer\"}} or {{> yield \"footer\"}}                                            // 296\n    var options = DynamicTemplate.getInclusionArguments(this);                                                         // 297\n    var region;                                                                                                        // 298\n    var dynamicTemplate;                                                                                               // 299\n                                                                                                                       // 300\n    if (_.isString(options)) {                                                                                         // 301\n      region = options;                                                                                                // 302\n    } else if (_.isObject(options)) {                                                                                  // 303\n      region = options.region;                                                                                         // 304\n    }                                                                                                                  // 305\n                                                                                                                       // 306\n    // if there's no region specified we'll assume you meant the main region                                           // 307\n    region = region || DEFAULT_REGION;                                                                                 // 308\n                                                                                                                       // 309\n    // get or create the region                                                                                        // 310\n    dynamicTemplate = layout.region(region);                                                                           // 311\n                                                                                                                       // 312\n    // if the dynamicTemplate had already been inserted, let's                                                         // 313\n    // destroy it before creating a new one.                                                                           // 314\n    if (dynamicTemplate.isCreated)                                                                                     // 315\n      dynamicTemplate.destroy();                                                                                       // 316\n                                                                                                                       // 317\n    // now return a newly created view                                                                                 // 318\n    return dynamicTemplate.create();                                                                                   // 319\n  }));                                                                                                                 // 320\n                                                                                                                       // 321\n  /**                                                                                                                  // 322\n   * Render a template into a region in the closest layout ancestor from within                                        // 323\n   * your template markup.                                                                                             // 324\n   *                                                                                                                   // 325\n   * Examples:                                                                                                         // 326\n   *                                                                                                                   // 327\n   *  {{#contentFor \"footer\"}}                                                                                         // 328\n   *    Footer stuff                                                                                                   // 329\n   *  {{/contentFor}}                                                                                                  // 330\n   *                                                                                                                   // 331\n   *  {{> contentFor region=\"footer\" template=\"SomeTemplate\" data=someData}}                                           // 332\n   *                                                                                                                   // 333\n   * Note: The helper is a UI.Component object instead of a function so that                                           // 334\n   * Meteor UI does not create a Deps.Dependency.                                                                      // 335\n   *                                                                                                                   // 336\n   * XXX what happens if the parent that calls contentFor gets destroyed?                                              // 337\n   * XXX the layout.region should be reset to be empty?                                                                // 338\n   * XXX but how do we control order of setting the region? what if it gets destroyed but then something else sets it?\n   *                                                                                                                   // 340\n   */                                                                                                                  // 341\n  UI.registerHelper('contentFor', new Template('contentFor', function () {                                             // 342\n    var layout = findFirstLayout(this);                                                                                // 343\n                                                                                                                       // 344\n    if (!layout)                                                                                                       // 345\n      throw new Error(\"No Iron.Layout found so you can't use contentFor!\");                                            // 346\n                                                                                                                       // 347\n    var options = DynamicTemplate.getInclusionArguments(this) || {}                                                    // 348\n    var content = this.templateContentBlock;                                                                           // 349\n    var template = options.template;                                                                                   // 350\n    var data = options.data;                                                                                           // 351\n    var region;                                                                                                        // 352\n                                                                                                                       // 353\n    if (_.isString(options))                                                                                           // 354\n      region = options;                                                                                                // 355\n    else if (_.isObject(options))                                                                                      // 356\n      region = options.region;                                                                                         // 357\n    else                                                                                                               // 358\n      throw new Error(\"Which region is this contentFor block supposed to be for?\");                                    // 359\n                                                                                                                       // 360\n    // set the region to a provided template or the content directly.                                                  // 361\n    layout.region(region).template(template || content);                                                               // 362\n                                                                                                                       // 363\n    // tell the layout to track this as a rendered region if we're in a                                                // 364\n    // rendering transaction.                                                                                          // 365\n    layout._trackRenderedRegion(region);                                                                               // 366\n                                                                                                                       // 367\n    // if we have some data then set the data context                                                                  // 368\n    if (data)                                                                                                          // 369\n      layout.region(region).data(data);                                                                                // 370\n                                                                                                                       // 371\n    // just render nothing into this area of the page since the dynamic template                                       // 372\n    // will do the actual rendering into the right region.                                                             // 373\n    return null;                                                                                                       // 374\n  }));                                                                                                                 // 375\n                                                                                                                       // 376\n  /**                                                                                                                  // 377\n   * Check to see if a given region is currently rendered to.                                                          // 378\n   *                                                                                                                   // 379\n   * Example:                                                                                                          // 380\n   *    {{#if hasRegion 'aside'}}                                                                                      // 381\n   *      <aside>                                                                                                      // 382\n   *        {{> yield \"aside\"}}                                                                                        // 383\n   *      </aside>                                                                                                     // 384\n   *    {{/if}}                                                                                                        // 385\n   */                                                                                                                  // 386\n  UI.registerHelper('hasRegion', function (region) {                                                                   // 387\n    var layout = findFirstLayout(Blaze.getView());                                                                     // 388\n                                                                                                                       // 389\n    if (!layout)                                                                                                       // 390\n      throw new Error(\"No Iron.Layout found so you can't use hasRegion!\");                                             // 391\n                                                                                                                       // 392\n    if (!_.isString(region))                                                                                           // 393\n      throw new Error(\"You need to provide an region argument to hasRegion\");                                          // 394\n                                                                                                                       // 395\n    return !! layout.region(region).template();                                                                        // 396\n  });                                                                                                                  // 397\n                                                                                                                       // 398\n  /**                                                                                                                  // 399\n   * Let people use Layout directly from their templates!                                                              // 400\n   *                                                                                                                   // 401\n   * Example:                                                                                                          // 402\n   *  {{#Layout template=\"MyTemplate\"}}                                                                                // 403\n   *    Main content goes here                                                                                         // 404\n   *                                                                                                                   // 405\n   *    {{#contentFor \"footer\"}}                                                                                       // 406\n   *      footer goes here                                                                                             // 407\n   *    {{/contentFor}}                                                                                                // 408\n   *  {{/Layout}}                                                                                                      // 409\n   */                                                                                                                  // 410\n  UI.registerHelper('Layout', new Template('layout', function () {                                                     // 411\n    var args = Iron.DynamicTemplate.args(this);                                                                        // 412\n                                                                                                                       // 413\n    var layout = new Layout({                                                                                          // 414\n      template: function () { return args('template'); },                                                              // 415\n      data: function () { return args('data'); },                                                                      // 416\n      content: this.templateContentBlock                                                                               // 417\n    });                                                                                                                // 418\n                                                                                                                       // 419\n    return layout.create();                                                                                            // 420\n  }));                                                                                                                 // 421\n}                                                                                                                      // 422\n/*****************************************************************************/                                        // 423\n/* Namespacing */                                                                                                      // 424\n/*****************************************************************************/                                        // 425\nIron.Layout = Layout;                                                                                                  // 426\n                                                                                                                       // 427\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\nPackage['iron:layout'] = {};\n\n})();\n","servePath":"/packages/iron_layout.js"}]