[{"type":"js","data":"(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar Template = Package.templating.Template;\nvar Session = Package.session.Session;\nvar Blaze = Package.blaze.Blaze;\nvar UI = Package.blaze.UI;\nvar Handlebars = Package.blaze.Handlebars;\nvar ReactiveVar = Package['reactive-var'].ReactiveVar;\nvar Spacebars = Package.spacebars.Spacebars;\nvar HTML = Package.htmljs.HTML;\n\n/* Package-scope variables */\nvar MeteorCamera, desiredHeight, desiredWidth;\n\n(function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                              //\n// packages/mdg_camera/template.photo.js                                                                        //\n//                                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                //\n                                                                                                                // 1\nTemplate.__checkName(\"camera\");                                                                                 // 2\nTemplate[\"camera\"] = new Template(\"Template.camera\", (function() {                                              // 3\n  var view = this;                                                                                              // 4\n  return [ HTML.Raw('<div class=\"camera-overlay\">\\n    \\n  </div>\\n\\n  '), HTML.DIV({                           // 5\n    \"class\": function() {                                                                                       // 6\n      return [ \"camera-popup \", Blaze.If(function() {                                                           // 7\n        return Spacebars.call(view.lookup(\"permissionDeniedError\"));                                            // 8\n      }, function() {                                                                                           // 9\n        return \"camera-popup-wide\";                                                                             // 10\n      }) ];                                                                                                     // 11\n    }                                                                                                           // 12\n  }, \"\\n    \", Blaze.If(function() {                                                                            // 13\n    return Spacebars.call(view.lookup(\"error\"));                                                                // 14\n  }, function() {                                                                                               // 15\n    return [ \"\\n      \", Blaze.If(function() {                                                                  // 16\n      return Spacebars.call(view.lookup(\"permissionDeniedError\"));                                              // 17\n    }, function() {                                                                                             // 18\n      return [ \"\\n        \", Spacebars.include(view.lookupTemplate(\"permissionDenied\")), \"\\n      \" ];          // 19\n    }, function() {                                                                                             // 20\n      return [ \"\\n        \", Blaze.If(function() {                                                              // 21\n        return Spacebars.call(view.lookup(\"browserNotSupportedError\"));                                         // 22\n      }, function() {                                                                                           // 23\n        return [ \"\\n          \", Blaze._TemplateWith(function() {                                               // 24\n          return {                                                                                              // 25\n            message: Spacebars.call(\"Sorry, this browser is currently not supported for camera functionality.\")\n          };                                                                                                    // 27\n        }, function() {                                                                                         // 28\n          return Spacebars.include(view.lookupTemplate(\"genericError\"));                                        // 29\n        }), \"\\n        \" ];                                                                                     // 30\n      }, function() {                                                                                           // 31\n        return [ \"\\n          \", Blaze._TemplateWith(function() {                                               // 32\n          return {                                                                                              // 33\n            message: Spacebars.call(\"There was an error accessing the camera.\")                                 // 34\n          };                                                                                                    // 35\n        }, function() {                                                                                         // 36\n          return Spacebars.include(view.lookupTemplate(\"genericError\"));                                        // 37\n        }), \"\\n        \" ];                                                                                     // 38\n      }), \"\\n      \" ];                                                                                         // 39\n    }), \"\\n    \" ];                                                                                             // 40\n  }, function() {                                                                                               // 41\n    return [ \"\\n      \", Blaze.If(function() {                                                                  // 42\n      return Spacebars.call(view.lookup(\"photo\"));                                                              // 43\n    }, function() {                                                                                             // 44\n      return [ \"\\n        \", HTML.DIV({                                                                         // 45\n        \"class\": \"center\"                                                                                       // 46\n      }, \"\\n          \", HTML.IMG({                                                                             // 47\n        src: function() {                                                                                       // 48\n          return Spacebars.mustache(view.lookup(\"photo\"));                                                      // 49\n        },                                                                                                      // 50\n        \"class\": \"photo-preview\"                                                                                // 51\n      }), \"\\n          \", HTML.DIV(\"\\n            \", HTML.BUTTON({                                              // 52\n        \"class\": \"button use-photo\"                                                                             // 53\n      }, \"Use Photo\"), \"\\n            \", HTML.BUTTON({                                                          // 54\n        \"class\": \"button new-photo\"                                                                             // 55\n      }, \"Take New Photo\"), \"\\n          \"), \"\\n        \"), \"\\n      \" ];                                       // 56\n    }, function() {                                                                                             // 57\n      return [ \"\\n        \", Spacebars.include(view.lookupTemplate(\"viewfinder\")), \"\\n      \" ];                // 58\n    }), \"\\n    \" ];                                                                                             // 59\n  }), \"\\n  \") ];                                                                                                // 60\n}));                                                                                                            // 61\n                                                                                                                // 62\nTemplate.__checkName(\"viewfinder\");                                                                             // 63\nTemplate[\"viewfinder\"] = new Template(\"Template.viewfinder\", (function() {                                      // 64\n  var view = this;                                                                                              // 65\n  return [ HTML.DIV({                                                                                           // 66\n    \"class\": \"viewfinder\"                                                                                       // 67\n  }, \"\\n    \", HTML.VIDEO({                                                                                     // 68\n    id: \"video\",                                                                                                // 69\n    \"class\": function() {                                                                                       // 70\n      return Blaze.If(function() {                                                                              // 71\n        return Spacebars.call(view.lookup(\"waitingForPermission\"));                                             // 72\n      }, function() {                                                                                           // 73\n        return \"hidden\";                                                                                        // 74\n      });                                                                                                       // 75\n    }                                                                                                           // 76\n  }, \"\\n      \"), \"\\n    \\n    \", HTML.DIV(\"\\n      \", Blaze.If(function() {                                    // 77\n    return Spacebars.call(view.lookup(\"waitingForPermission\"));                                                 // 78\n  }, function() {                                                                                               // 79\n    return [ \"\\n        \", HTML.P(\"Waiting for camera permissions...\"), \"\\n      \" ];                           // 80\n  }, function() {                                                                                               // 81\n    return [ \"\\n        \", HTML.BUTTON({                                                                        // 82\n      \"class\": \"button shutter\"                                                                                 // 83\n    }, \"Take Photo\"), \"\\n      \" ];                                                                             // 84\n  }), \"\\n      \", HTML.Raw('<button class=\"button cancel\">Cancel</button>'), \"\\n    \"), \"\\n  \"), HTML.Raw('\\n\\n  <canvas id=\"canvas\" style=\"visibility: hidden\"></canvas>') ];\n}));                                                                                                            // 86\n                                                                                                                // 87\nTemplate.__checkName(\"genericError\");                                                                           // 88\nTemplate[\"genericError\"] = new Template(\"Template.genericError\", (function() {                                  // 89\n  var view = this;                                                                                              // 90\n  return HTML.DIV({                                                                                             // 91\n    \"class\": \"generic-error\"                                                                                    // 92\n  }, \"\\n    \", HTML.P(Blaze.View(\"lookup:message\", function() {                                                 // 93\n    return Spacebars.mustache(view.lookup(\"message\"));                                                          // 94\n  })), HTML.Raw('\\n    <button class=\"button cancel\">Close Popup</button>\\n  '));                               // 95\n}));                                                                                                            // 96\n                                                                                                                // 97\nTemplate.__checkName(\"permissionDenied\");                                                                       // 98\nTemplate[\"permissionDenied\"] = new Template(\"Template.permissionDenied\", (function() {                          // 99\n  var view = this;                                                                                              // 100\n  return HTML.Raw('<div class=\"permission-denied-error\">\\n    <h2>Camera Permissions Denied</h2>\\n\\n    <p>\\n      You have denied this app permission to use your camera.\\n      If you would like to allow permissions, follow the directions for your\\n      browser below.\\n    </p>\\n\\n    <dl class=\"permissions-howto\">\\n      <dt>Google Chrome</dt>\\n        <dd>Go to Settings > \"Show advanced settings...\" >\\n          \"Content settings...\" > Media heading > \"Manage exceptions...\",\\n          then find this website in the list and allow video capture.</dd>\\n      <dt>Mozilla Firefox</dt>\\n        <dd>Reload the page and try again.</dd>\\n      <dt>Opera</dt>\\n        <dd>Go to Preferences > Websites > Media heading >\\n          \"Manage exceptions...\", then find this website in the list and\\n          allow video capture.</dd>\\n    </dl>\\n\\n    <button class=\"button cancel\">Close Popup</button>\\n  </div>');\n}));                                                                                                            // 102\n                                                                                                                // 103\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                              //\n// packages/mdg_camera/photo.js                                                                                 //\n//                                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                //\nMeteorCamera = {};                                                                                              // 1\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                              //\n// packages/mdg_camera/photo-browser.js                                                                         //\n//                                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                //\nvar stream;                                                                                                     // 1\nvar closeAndCallback;                                                                                           // 2\n                                                                                                                // 3\nvar photo = new ReactiveVar(null);                                                                              // 4\nvar error = new ReactiveVar(null);                                                                              // 5\nvar waitingForPermission = new ReactiveVar(null);                                                               // 6\n                                                                                                                // 7\nvar canvasWidth = 0;                                                                                            // 8\nvar canvasHeight = 0;                                                                                           // 9\n                                                                                                                // 10\nvar quality = 80;                                                                                               // 11\n                                                                                                                // 12\nTemplate.viewfinder.rendered = function() {                                                                     // 13\n  var template = this;                                                                                          // 14\n                                                                                                                // 15\n  waitingForPermission.set(true);                                                                               // 16\n                                                                                                                // 17\n  var video = template.find(\"video\");                                                                           // 18\n                                                                                                                // 19\n  // stream webcam video to the <video> element                                                                 // 20\n  var success = function(newStream) {                                                                           // 21\n    stream = newStream;                                                                                         // 22\n                                                                                                                // 23\n    if (navigator.mozGetUserMedia) {                                                                            // 24\n      video.mozSrcObject = stream;                                                                              // 25\n    } else {                                                                                                    // 26\n      var vendorURL = window.URL || window.webkitURL;                                                           // 27\n      video.src = vendorURL.createObjectURL(stream);                                                            // 28\n    }                                                                                                           // 29\n    video.play();                                                                                               // 30\n                                                                                                                // 31\n    waitingForPermission.set(false);                                                                            // 32\n  };                                                                                                            // 33\n                                                                                                                // 34\n  // user declined or there was some other error                                                                // 35\n  var failure = function(err) {                                                                                 // 36\n    error.set(err);                                                                                             // 37\n  };                                                                                                            // 38\n                                                                                                                // 39\n  // tons of different browser prefixes                                                                         // 40\n  navigator.getUserMedia = (                                                                                    // 41\n    navigator.getUserMedia ||                                                                                   // 42\n    navigator.webkitGetUserMedia ||                                                                             // 43\n    navigator.mozGetUserMedia ||                                                                                // 44\n    navigator.msGetUserMedia                                                                                    // 45\n  );                                                                                                            // 46\n                                                                                                                // 47\n  if (! navigator.getUserMedia) {                                                                               // 48\n    // no browser support, sorry                                                                                // 49\n    failure(\"BROWSER_NOT_SUPPORTED\");                                                                           // 50\n    return;                                                                                                     // 51\n  }                                                                                                             // 52\n                                                                                                                // 53\n  // initiate request for webcam                                                                                // 54\n  navigator.getUserMedia({                                                                                      // 55\n      video: true,                                                                                              // 56\n      audio: false                                                                                              // 57\n  }, success, failure);                                                                                         // 58\n                                                                                                                // 59\n  // resize viewfinder to a reasonable size, not necessarily photo size                                         // 60\n  var viewfinderWidth = 320;                                                                                    // 61\n  var viewfinderHeight = 240;                                                                                   // 62\n  var resized = false;                                                                                          // 63\n  video.addEventListener('canplay', function() {                                                                // 64\n    if (! resized) {                                                                                            // 65\n      viewfinderHeight = video.videoHeight / (video.videoWidth / viewfinderWidth);                              // 66\n      video.setAttribute('width', viewfinderWidth);                                                             // 67\n      video.setAttribute('height', viewfinderHeight);                                                           // 68\n      resized = true;                                                                                           // 69\n    }                                                                                                           // 70\n  }, false);                                                                                                    // 71\n};                                                                                                              // 72\n                                                                                                                // 73\n// is the current error a permission denied error?                                                              // 74\nvar permissionDeniedError = function () {                                                                       // 75\n  return error.get() && (                                                                                       // 76\n    error.get().name === \"PermissionDeniedError\" || // Chrome and Opera                                         // 77\n    error.get() === \"PERMISSION_DENIED\" // Firefox                                                              // 78\n  );                                                                                                            // 79\n};                                                                                                              // 80\n                                                                                                                // 81\n// is the current error a browser not supported error?                                                          // 82\nvar browserNotSupportedError = function () {                                                                    // 83\n  return error.get() && error.get() === \"BROWSER_NOT_SUPPORTED\";                                                // 84\n};                                                                                                              // 85\n                                                                                                                // 86\nvar stopStream = function(st) {                                                                                 // 87\n  if(!st) {                                                                                                     // 88\n    return;                                                                                                     // 89\n  }                                                                                                             // 90\n                                                                                                                // 91\n  if(st.stop) {                                                                                                 // 92\n    st.stop();                                                                                                  // 93\n    return;                                                                                                     // 94\n  }                                                                                                             // 95\n                                                                                                                // 96\n  if(st.getTracks) {                                                                                            // 97\n    var tracks = st.getTracks();                                                                                // 98\n    for(var i = 0; i < tracks.length; i++) {                                                                    // 99\n      var track = tracks[i];                                                                                    // 100\n      if(track && track.stop) {                                                                                 // 101\n        track.stop();                                                                                           // 102\n      }                                                                                                         // 103\n    }                                                                                                           // 104\n  }                                                                                                             // 105\n};                                                                                                              // 106\n                                                                                                                // 107\n                                                                                                                // 108\nTemplate.camera.helpers({                                                                                       // 109\n  photo: function () {                                                                                          // 110\n    return photo.get();                                                                                         // 111\n  },                                                                                                            // 112\n  error: function () {                                                                                          // 113\n    return error.get();                                                                                         // 114\n  },                                                                                                            // 115\n  permissionDeniedError: permissionDeniedError,                                                                 // 116\n  browserNotSupportedError: browserNotSupportedError                                                            // 117\n});                                                                                                             // 118\n                                                                                                                // 119\nTemplate.camera.events({                                                                                        // 120\n  \"click .use-photo\": function () {                                                                             // 121\n    closeAndCallback(null, photo.get());                                                                        // 122\n  },                                                                                                            // 123\n  \"click .new-photo\": function () {                                                                             // 124\n    photo.set(null);                                                                                            // 125\n  },                                                                                                            // 126\n  \"click .cancel\": function () {                                                                                // 127\n    if (permissionDeniedError()) {                                                                              // 128\n      closeAndCallback(new Meteor.Error(\"permissionDenied\", \"Camera permissions were denied.\"));                // 129\n    } else if (browserNotSupportedError()) {                                                                    // 130\n      closeAndCallback(new Meteor.Error(\"browserNotSupported\", \"This browser isn't supported.\"));               // 131\n    } else if (error.get()) {                                                                                   // 132\n      closeAndCallback(new Meteor.Error(\"unknownError\", \"There was an error while accessing the camera.\"));     // 133\n    } else {                                                                                                    // 134\n      closeAndCallback(new Meteor.Error(\"cancel\", \"Photo taking was cancelled.\"));                              // 135\n    }                                                                                                           // 136\n                                                                                                                // 137\n    if (stream) {                                                                                               // 138\n      stopStream(stream);                                                                                       // 139\n    }                                                                                                           // 140\n  }                                                                                                             // 141\n});                                                                                                             // 142\n                                                                                                                // 143\nTemplate.viewfinder.events({                                                                                    // 144\n  'click .shutter': function (event, template) {                                                                // 145\n    var video = template.find(\"video\");                                                                         // 146\n    var canvas = template.find(\"canvas\");                                                                       // 147\n                                                                                                                // 148\n    canvas.width = canvasWidth;                                                                                 // 149\n    canvas.height = canvasHeight;                                                                               // 150\n    canvas.getContext('2d').drawImage(video, 0, 0, canvasWidth, canvasHeight);                                  // 151\n    var data = canvas.toDataURL('image/jpeg', quality);                                                         // 152\n    photo.set(data);                                                                                            // 153\n    stopStream(stream);                                                                                         // 154\n  }                                                                                                             // 155\n});                                                                                                             // 156\n                                                                                                                // 157\nTemplate.viewfinder.helpers({                                                                                   // 158\n  \"waitingForPermission\": function () {                                                                         // 159\n    return waitingForPermission.get();                                                                          // 160\n  }                                                                                                             // 161\n});                                                                                                             // 162\n                                                                                                                // 163\n/**                                                                                                             // 164\n * @summary Get a picture from the device's default camera.                                                     // 165\n * @param  {Object}   options  Options                                                                          // 166\n * @param {Number} options.height The minimum height of the image                                               // 167\n * @param {Number} options.width The minimum width of the image                                                 // 168\n * @param {Number} options.quality [description]                                                                // 169\n * @param  {Function} callback A callback that is called with two arguments:                                    // 170\n * 1. error, an object that contains error.message and possibly other properties                                // 171\n * depending on platform                                                                                        // 172\n * 2. data, a Data URI string with the image encoded in JPEG format, ready to                                   // 173\n * use as the `src` attribute on an `<img />` tag.                                                              // 174\n */                                                                                                             // 175\nMeteorCamera.getPicture = function (options, callback) {                                                        // 176\n  // if options are not passed                                                                                  // 177\n  if (! callback) {                                                                                             // 178\n    callback = options;                                                                                         // 179\n    options = {};                                                                                               // 180\n  }                                                                                                             // 181\n                                                                                                                // 182\n  desiredHeight = options.height || 640;                                                                        // 183\n  desiredWidth = options.width || 480;                                                                          // 184\n                                                                                                                // 185\n  // Canvas#toDataURL takes the quality as a 0-1 value, not a percentage                                        // 186\n  quality = (options.quality || 49) / 100;                                                                      // 187\n                                                                                                                // 188\n  if (desiredHeight * 4 / 3 > desiredWidth) {                                                                   // 189\n    canvasWidth = desiredHeight * 4 / 3;                                                                        // 190\n    canvasHeight = desiredHeight;                                                                               // 191\n  } else {                                                                                                      // 192\n    canvasHeight = desiredWidth * 3 / 4;                                                                        // 193\n    canvasWidth = desiredWidth;                                                                                 // 194\n  }                                                                                                             // 195\n                                                                                                                // 196\n  canvasWidth = Math.round(canvasWidth);                                                                        // 197\n  canvasHeight = Math.round(canvasHeight);                                                                      // 198\n                                                                                                                // 199\n  var view;                                                                                                     // 200\n                                                                                                                // 201\n  closeAndCallback = function () {                                                                              // 202\n    var originalArgs = arguments;                                                                               // 203\n    UI.remove(view);                                                                                            // 204\n    photo.set(null);                                                                                            // 205\n    callback.apply(null, originalArgs);                                                                         // 206\n  };                                                                                                            // 207\n                                                                                                                // 208\n  view = UI.renderWithData(Template.camera);                                                                    // 209\n  UI.insert(view, document.body);                                                                               // 210\n};                                                                                                              // 211\n                                                                                                                // 212\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\n(function (pkg, symbols) {\n  for (var s in symbols)\n    (s in pkg) || (pkg[s] = symbols[s]);\n})(Package['mdg:camera'] = {}, {\n  MeteorCamera: MeteorCamera\n});\n\n})();\n","servePath":"/packages/mdg_camera.js"}]