[{"type":"js","data":"(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar OAuth = Package.oauth.OAuth;\nvar Oauth = Package.oauth.Oauth;\nvar Template = Package.templating.Template;\nvar Random = Package.random.Random;\nvar ServiceConfiguration = Package['service-configuration'].ServiceConfiguration;\nvar Blaze = Package.blaze.Blaze;\nvar UI = Package.blaze.UI;\nvar Handlebars = Package.blaze.Handlebars;\nvar Spacebars = Package.spacebars.Spacebars;\nvar HTML = Package.htmljs.HTML;\n\n/* Package-scope variables */\nvar LinkedIn;\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////////////////////\n//                                                                                   //\n// packages/pauli_linkedin/template.linkedin_configure.js                            //\n//                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////\n                                                                                     //\n                                                                                     // 1\nTemplate.__checkName(\"configureLoginServiceDialogForLinkedin\");                      // 2\nTemplate[\"configureLoginServiceDialogForLinkedin\"] = new Template(\"Template.configureLoginServiceDialogForLinkedin\", (function() {\n  var view = this;                                                                   // 4\n  return HTML.Raw('<p>\\n    First, you\\'ll need to register your app on Linkedin. Follow these steps:\\n  </p>\\n  <ol>\\n    <li>\\n      Visit <a href=\"https://www.linkedin.com/secure/developer?newapp=\" target=\"_blank\">https://www.linkedin.com/secure/developer?newapp=</a>\\n    </li>\\n  </ol>');\n}));                                                                                 // 6\n                                                                                     // 7\n///////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////////////////////\n//                                                                                   //\n// packages/pauli_linkedin/linkedin_configure.js                                     //\n//                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////\n                                                                                     //\nTemplate.configureLoginServiceDialogForLinkedin.siteUrl = function () {              // 1\n  return Meteor.absoluteUrl();                                                       // 2\n};                                                                                   // 3\n                                                                                     // 4\nTemplate.configureLoginServiceDialogForLinkedin.fields = function () {               // 5\n  return [                                                                           // 6\n    {property: 'clientId', label: 'API Key'},                                        // 7\n    {property: 'secret', label: 'Secret Key'}                                        // 8\n  ];                                                                                 // 9\n};                                                                                   // 10\n                                                                                     // 11\n///////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////////////////////\n//                                                                                   //\n// packages/pauli_linkedin/linkedin_common.js                                        //\n//                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////\n                                                                                     //\nif (typeof LinkedIn === 'undefined') {                                               // 1\n  LinkedIn = {};                                                                     // 2\n}                                                                                    // 3\n                                                                                     // 4\n///////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////////////////////\n//                                                                                   //\n// packages/pauli_linkedin/linkedin_client.js                                        //\n//                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////\n                                                                                     //\n// Request LinkedIn credentials for the user                                         // 1\n// @param options {optional}                                                         // 2\n// @param credentialRequestCompleteCallback {Function} Callback function to call on  // 3\n//   completion. Takes one argument, credentialToken on success, or Error on         // 4\n//   error.                                                                          // 5\nLinkedIn.requestCredential = function (options, credentialRequestCompleteCallback) {\n  // support both (options, callback) and (callback).                                // 7\n  if (!credentialRequestCompleteCallback && typeof options === 'function') {         // 8\n    credentialRequestCompleteCallback = options;                                     // 9\n    options = {};                                                                    // 10\n  }                                                                                  // 11\n                                                                                     // 12\n  var config = ServiceConfiguration.configurations.findOne({service: 'linkedin'});   // 13\n  if (!config) {                                                                     // 14\n    credentialRequestCompleteCallback && credentialRequestCompleteCallback(new ServiceConfiguration.ConfigError(\"Service not configured\"));\n    return;                                                                          // 16\n  }                                                                                  // 17\n                                                                                     // 18\n  var credentialToken = Random.secret();                                             // 19\n  var loginStyle = OAuth._loginStyle('linkedin', config, options);                   // 20\n                                                                                     // 21\n  var scope = [];                                                                    // 22\n  if (options && options.requestPermissions) {                                       // 23\n      scope = options.requestPermissions.join('+');                                  // 24\n  }                                                                                  // 25\n                                                                                     // 26\n  var loginStyle = OAuth._loginStyle('linkedin', config, options);                   // 27\n                                                                                     // 28\n  var loginUrl =                                                                     // 29\n        'https://www.linkedin.com/uas/oauth2/authorization' +                        // 30\n        '?response_type=code' + '&client_id=' + config.clientId +                    // 31\n        '&redirect_uri=' + OAuth._redirectUri('linkedin', config) +                  // 32\n        '&scope=' + scope +                                                          // 33\n        '&state=' + OAuth._stateParam(loginStyle, credentialToken);                  // 34\n                                                                                     // 35\n  OAuth.launchLogin({                                                                // 36\n    loginService: \"linkedin\",                                                        // 37\n    loginStyle: loginStyle,                                                          // 38\n    loginUrl: loginUrl,                                                              // 39\n    credentialRequestCompleteCallback: credentialRequestCompleteCallback,            // 40\n    credentialToken: credentialToken                                                 // 41\n  });                                                                                // 42\n};                                                                                   // 43\n                                                                                     // 44\n///////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\n(function (pkg, symbols) {\n  for (var s in symbols)\n    (s in pkg) || (pkg[s] = symbols[s]);\n})(Package['pauli:linkedin'] = {}, {\n  LinkedIn: LinkedIn\n});\n\n})();\n","servePath":"/packages/pauli_linkedin.js"}]