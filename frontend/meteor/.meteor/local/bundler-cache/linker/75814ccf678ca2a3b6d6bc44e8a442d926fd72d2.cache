[{"type":"js","data":"(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\n\n/* Package-scope variables */\nvar module, exports, s;\n\n(function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// packages/underscorestring_underscore.string/packages/underscorestring_underscore.string.js                       //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\n(function () {                                                                                                      // 1\n                                                                                                                    // 2\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////      // 3\n//                                                                                                          //      // 4\n// packages/underscorestring:underscore.string/meteor-pre.js                                                //      // 5\n//                                                                                                          //      // 6\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////      // 7\n                                                                                                            //      // 8\n// Defining this will trick dist/underscore.string.js into putting its exports into module.exports          // 1    // 9\n// Credit to Tim Heckel for this trick - see https://github.com/TimHeckel/meteor-underscore-string          // 2    // 10\nmodule = {};                                                                                                // 3    // 11\n                                                                                                            // 4    // 12\n// This also needed, otherwise above doesn't work???                                                        // 5    // 13\nexports = {};                                                                                               // 6    // 14\n                                                                                                            // 7    // 15\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////      // 16\n                                                                                                                    // 17\n}).call(this);                                                                                                      // 18\n                                                                                                                    // 19\n                                                                                                                    // 20\n                                                                                                                    // 21\n                                                                                                                    // 22\n                                                                                                                    // 23\n                                                                                                                    // 24\n(function () {                                                                                                      // 25\n                                                                                                                    // 26\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////      // 27\n//                                                                                                          //      // 28\n// packages/underscorestring:underscore.string/dist/underscore.string.js                                    //      // 29\n//                                                                                                          //      // 30\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////      // 31\n                                                                                                            //      // 32\n!function(e){if(\"object\"==typeof exports)module.exports=e();else if(\"function\"==typeof define&&define.amd)define(e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.s=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error(\"Cannot find module '\"+o+\"'\")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\nvar trim = _dereq_('./trim');                                                                               // 2    // 34\nvar decap = _dereq_('./decapitalize');                                                                      // 3    // 35\n                                                                                                            // 4    // 36\nmodule.exports = function camelize(str, decapitalize) {                                                     // 5    // 37\n  str = trim(str).replace(/[-_\\s]+(.)?/g, function(match, c) {                                              // 6    // 38\n    return c ? c.toUpperCase() : \"\";                                                                        // 7    // 39\n  });                                                                                                       // 8    // 40\n                                                                                                            // 9    // 41\n  if (decapitalize === true) {                                                                              // 10   // 42\n    return decap(str);                                                                                      // 11   // 43\n  } else {                                                                                                  // 12   // 44\n    return str;                                                                                             // 13   // 45\n  }                                                                                                         // 14   // 46\n};                                                                                                          // 15   // 47\n                                                                                                            // 16   // 48\n},{\"./decapitalize\":9,\"./trim\":60}],2:[function(_dereq_,module,exports){                                    // 17   // 49\nvar makeString = _dereq_('./helper/makeString');                                                            // 18   // 50\n                                                                                                            // 19   // 51\nmodule.exports = function capitalize(str) {                                                                 // 20   // 52\n  str = makeString(str);                                                                                    // 21   // 53\n  return str.charAt(0).toUpperCase() + str.slice(1);                                                        // 22   // 54\n};                                                                                                          // 23   // 55\n                                                                                                            // 24   // 56\n},{\"./helper/makeString\":19}],3:[function(_dereq_,module,exports){                                          // 25   // 57\nvar makeString = _dereq_('./helper/makeString');                                                            // 26   // 58\n                                                                                                            // 27   // 59\nmodule.exports = function chars(str) {                                                                      // 28   // 60\n  return makeString(str).split('');                                                                         // 29   // 61\n};                                                                                                          // 30   // 62\n                                                                                                            // 31   // 63\n},{\"./helper/makeString\":19}],4:[function(_dereq_,module,exports){                                          // 32   // 64\nmodule.exports = function chop(str, step) {                                                                 // 33   // 65\n  if (str == null) return [];                                                                               // 34   // 66\n  str = String(str);                                                                                        // 35   // 67\n  step = ~~step;                                                                                            // 36   // 68\n  return step > 0 ? str.match(new RegExp('.{1,' + step + '}', 'g')) : [str];                                // 37   // 69\n};                                                                                                          // 38   // 70\n                                                                                                            // 39   // 71\n},{}],5:[function(_dereq_,module,exports){                                                                  // 40   // 72\nvar capitalize = _dereq_('./capitalize');                                                                   // 41   // 73\nvar camelize = _dereq_('./camelize');                                                                       // 42   // 74\nvar makeString = _dereq_('./helper/makeString');                                                            // 43   // 75\n                                                                                                            // 44   // 76\nmodule.exports = function classify(str) {                                                                   // 45   // 77\n  str = makeString(str);                                                                                    // 46   // 78\n  return capitalize(camelize(str.replace(/[\\W_]/g, ' ')).replace(/\\s/g, ''));                               // 47   // 79\n};                                                                                                          // 48   // 80\n                                                                                                            // 49   // 81\n},{\"./camelize\":1,\"./capitalize\":2,\"./helper/makeString\":19}],6:[function(_dereq_,module,exports){          // 50   // 82\nvar trim = _dereq_('./trim');                                                                               // 51   // 83\n                                                                                                            // 52   // 84\nmodule.exports = function clean(str) {                                                                      // 53   // 85\n  return trim(str).replace(/\\s+/g, ' ');                                                                    // 54   // 86\n};                                                                                                          // 55   // 87\n                                                                                                            // 56   // 88\n},{\"./trim\":60}],7:[function(_dereq_,module,exports){                                                       // 57   // 89\nvar makeString = _dereq_('./helper/makeString');                                                            // 58   // 90\n                                                                                                            // 59   // 91\nmodule.exports = function(str, substr) {                                                                    // 60   // 92\n  str = makeString(str);                                                                                    // 61   // 93\n  substr = makeString(substr);                                                                              // 62   // 94\n                                                                                                            // 63   // 95\n  if (str.length === 0 || substr.length === 0) return 0;                                                    // 64   // 96\n                                                                                                            // 65   // 97\n  var count = 0,                                                                                            // 66   // 98\n    pos = 0,                                                                                                // 67   // 99\n    length = substr.length;                                                                                 // 68   // 100\n                                                                                                            // 69   // 101\n  while (true) {                                                                                            // 70   // 102\n    pos = str.indexOf(substr, pos);                                                                         // 71   // 103\n    if (pos === -1) break;                                                                                  // 72   // 104\n    count++;                                                                                                // 73   // 105\n    pos += length;                                                                                          // 74   // 106\n  }                                                                                                         // 75   // 107\n                                                                                                            // 76   // 108\n  return count;                                                                                             // 77   // 109\n};                                                                                                          // 78   // 110\n                                                                                                            // 79   // 111\n},{\"./helper/makeString\":19}],8:[function(_dereq_,module,exports){                                          // 80   // 112\nvar trim = _dereq_('./trim');                                                                               // 81   // 113\n                                                                                                            // 82   // 114\nmodule.exports = function dasherize(str) {                                                                  // 83   // 115\n  return trim(str).replace(/([A-Z])/g, '-$1').replace(/[-_\\s]+/g, '-').toLowerCase();                       // 84   // 116\n};                                                                                                          // 85   // 117\n                                                                                                            // 86   // 118\n},{\"./trim\":60}],9:[function(_dereq_,module,exports){                                                       // 87   // 119\nvar makeString = _dereq_('./helper/makeString');                                                            // 88   // 120\n                                                                                                            // 89   // 121\nmodule.exports = function decapitalize(str) {                                                               // 90   // 122\n  str = makeString(str);                                                                                    // 91   // 123\n  return str.charAt(0).toLowerCase() + str.slice(1);                                                        // 92   // 124\n};                                                                                                          // 93   // 125\n                                                                                                            // 94   // 126\n},{\"./helper/makeString\":19}],10:[function(_dereq_,module,exports){                                         // 95   // 127\nvar makeString = _dereq_('./helper/makeString');                                                            // 96   // 128\n                                                                                                            // 97   // 129\nfunction getIndent(str) {                                                                                   // 98   // 130\n  var matches = str.match(/^[\\s\\\\t]*/gm);                                                                   // 99   // 131\n  var indent = matches[0].length;                                                                           // 100  // 132\n                                                                                                            // 101  // 133\n  for (var i = 1; i < matches.length; i++) {                                                                // 102  // 134\n    indent = Math.min(matches[i].length, indent);                                                           // 103  // 135\n  }                                                                                                         // 104  // 136\n                                                                                                            // 105  // 137\n  return indent;                                                                                            // 106  // 138\n}                                                                                                           // 107  // 139\n                                                                                                            // 108  // 140\nmodule.exports = function dedent(str, pattern) {                                                            // 109  // 141\n  str = makeString(str);                                                                                    // 110  // 142\n  var indent = getIndent(str);                                                                              // 111  // 143\n  var reg;                                                                                                  // 112  // 144\n                                                                                                            // 113  // 145\n  if (indent === 0) return str;                                                                             // 114  // 146\n                                                                                                            // 115  // 147\n  if (typeof pattern === 'string') {                                                                        // 116  // 148\n    reg = new RegExp('^' + pattern, 'gm');                                                                  // 117  // 149\n  } else {                                                                                                  // 118  // 150\n    reg = new RegExp('^[ \\\\t]{' + indent + '}', 'gm');                                                      // 119  // 151\n  }                                                                                                         // 120  // 152\n                                                                                                            // 121  // 153\n  return str.replace(reg, '');                                                                              // 122  // 154\n};                                                                                                          // 123  // 155\n                                                                                                            // 124  // 156\n},{\"./helper/makeString\":19}],11:[function(_dereq_,module,exports){                                         // 125  // 157\nvar makeString = _dereq_('./helper/makeString');                                                            // 126  // 158\nvar toPositive = _dereq_('./helper/toPositive');                                                            // 127  // 159\n                                                                                                            // 128  // 160\nmodule.exports = function endsWith(str, ends, position) {                                                   // 129  // 161\n  str = makeString(str);                                                                                    // 130  // 162\n  ends = '' + ends;                                                                                         // 131  // 163\n  if (typeof position == 'undefined') {                                                                     // 132  // 164\n    position = str.length - ends.length;                                                                    // 133  // 165\n  } else {                                                                                                  // 134  // 166\n    position = Math.min(toPositive(position), str.length) - ends.length;                                    // 135  // 167\n  }                                                                                                         // 136  // 168\n  return position >= 0 && str.indexOf(ends, position) === position;                                         // 137  // 169\n};                                                                                                          // 138  // 170\n                                                                                                            // 139  // 171\n},{\"./helper/makeString\":19,\"./helper/toPositive\":21}],12:[function(_dereq_,module,exports){                // 140  // 172\nvar makeString = _dereq_('./helper/makeString');                                                            // 141  // 173\nvar escapeChars = _dereq_('./helper/escapeChars');                                                          // 142  // 174\nvar reversedEscapeChars = {};                                                                               // 143  // 175\n                                                                                                            // 144  // 176\nfor(var key in escapeChars) reversedEscapeChars[escapeChars[key]] = key;                                    // 145  // 177\nreversedEscapeChars[\"'\"] = '#39';                                                                           // 146  // 178\n                                                                                                            // 147  // 179\nmodule.exports = function escapeHTML(str) {                                                                 // 148  // 180\n  return makeString(str).replace(/[&<>\"']/g, function(m) {                                                  // 149  // 181\n    return '&' + reversedEscapeChars[m] + ';';                                                              // 150  // 182\n  });                                                                                                       // 151  // 183\n};                                                                                                          // 152  // 184\n                                                                                                            // 153  // 185\n},{\"./helper/escapeChars\":17,\"./helper/makeString\":19}],13:[function(_dereq_,module,exports){               // 154  // 186\nmodule.exports = function() {                                                                               // 155  // 187\n  var result = {};                                                                                          // 156  // 188\n                                                                                                            // 157  // 189\n  for (var prop in this) {                                                                                  // 158  // 190\n    if (!this.hasOwnProperty(prop) || prop.match(/^(?:include|contains|reverse|join)$/)) continue;          // 159  // 191\n    result[prop] = this[prop];                                                                              // 160  // 192\n  }                                                                                                         // 161  // 193\n                                                                                                            // 162  // 194\n  return result;                                                                                            // 163  // 195\n};                                                                                                          // 164  // 196\n                                                                                                            // 165  // 197\n},{}],14:[function(_dereq_,module,exports){                                                                 // 166  // 198\n//  Underscore.string                                                                                       // 167  // 199\n//  (c) 2010 Esa-Matti Suuronen <esa-matti aet suuronen dot org>                                            // 168  // 200\n//  Underscore.string is freely distributable under the terms of the MIT license.                           // 169  // 201\n//  Documentation: https://github.com/epeli/underscore.string                                               // 170  // 202\n//  Some code is borrowed from MooTools and Alexandru Marasteanu.                                           // 171  // 203\n//  Version '3.0.3'                                                                                         // 172  // 204\n                                                                                                            // 173  // 205\n'use strict';                                                                                               // 174  // 206\n                                                                                                            // 175  // 207\nfunction s(value) {                                                                                         // 176  // 208\n  /* jshint validthis: true */                                                                              // 177  // 209\n  if (!(this instanceof s)) return new s(value);                                                            // 178  // 210\n  this._wrapped = value;                                                                                    // 179  // 211\n}                                                                                                           // 180  // 212\n                                                                                                            // 181  // 213\ns.VERSION = '3.0.3';                                                                                        // 182  // 214\n                                                                                                            // 183  // 215\ns.isBlank          = _dereq_('./isBlank');                                                                  // 184  // 216\ns.stripTags        = _dereq_('./stripTags');                                                                // 185  // 217\ns.capitalize       = _dereq_('./capitalize');                                                               // 186  // 218\ns.decapitalize     = _dereq_('./decapitalize');                                                             // 187  // 219\ns.chop             = _dereq_('./chop');                                                                     // 188  // 220\ns.trim             = _dereq_('./trim');                                                                     // 189  // 221\ns.clean            = _dereq_('./clean');                                                                    // 190  // 222\ns.count            = _dereq_('./count');                                                                    // 191  // 223\ns.chars            = _dereq_('./chars');                                                                    // 192  // 224\ns.swapCase         = _dereq_('./swapCase');                                                                 // 193  // 225\ns.escapeHTML       = _dereq_('./escapeHTML');                                                               // 194  // 226\ns.unescapeHTML     = _dereq_('./unescapeHTML');                                                             // 195  // 227\ns.splice           = _dereq_('./splice');                                                                   // 196  // 228\ns.insert           = _dereq_('./insert');                                                                   // 197  // 229\ns.replaceAll       = _dereq_('./replaceAll');                                                               // 198  // 230\ns.include          = _dereq_('./include');                                                                  // 199  // 231\ns.join             = _dereq_('./join');                                                                     // 200  // 232\ns.lines            = _dereq_('./lines');                                                                    // 201  // 233\ns.dedent           = _dereq_('./dedent');                                                                   // 202  // 234\ns.reverse          = _dereq_('./reverse');                                                                  // 203  // 235\ns.startsWith       = _dereq_('./startsWith');                                                               // 204  // 236\ns.endsWith         = _dereq_('./endsWith');                                                                 // 205  // 237\ns.pred             = _dereq_('./pred');                                                                     // 206  // 238\ns.succ             = _dereq_('./succ');                                                                     // 207  // 239\ns.titleize         = _dereq_('./titleize');                                                                 // 208  // 240\ns.camelize         = _dereq_('./camelize');                                                                 // 209  // 241\ns.underscored      = _dereq_('./underscored');                                                              // 210  // 242\ns.dasherize        = _dereq_('./dasherize');                                                                // 211  // 243\ns.classify         = _dereq_('./classify');                                                                 // 212  // 244\ns.humanize         = _dereq_('./humanize');                                                                 // 213  // 245\ns.ltrim            = _dereq_('./ltrim');                                                                    // 214  // 246\ns.rtrim            = _dereq_('./rtrim');                                                                    // 215  // 247\ns.truncate         = _dereq_('./truncate');                                                                 // 216  // 248\ns.prune            = _dereq_('./prune');                                                                    // 217  // 249\ns.words            = _dereq_('./words');                                                                    // 218  // 250\ns.pad              = _dereq_('./pad');                                                                      // 219  // 251\ns.lpad             = _dereq_('./lpad');                                                                     // 220  // 252\ns.rpad             = _dereq_('./rpad');                                                                     // 221  // 253\ns.lrpad            = _dereq_('./lrpad');                                                                    // 222  // 254\ns.sprintf          = _dereq_('./sprintf');                                                                  // 223  // 255\ns.vsprintf         = _dereq_('./vsprintf');                                                                 // 224  // 256\ns.toNumber         = _dereq_('./toNumber');                                                                 // 225  // 257\ns.numberFormat     = _dereq_('./numberFormat');                                                             // 226  // 258\ns.strRight         = _dereq_('./strRight');                                                                 // 227  // 259\ns.strRightBack     = _dereq_('./strRightBack');                                                             // 228  // 260\ns.strLeft          = _dereq_('./strLeft');                                                                  // 229  // 261\ns.strLeftBack      = _dereq_('./strLeftBack');                                                              // 230  // 262\ns.toSentence       = _dereq_('./toSentence');                                                               // 231  // 263\ns.toSentenceSerial = _dereq_('./toSentenceSerial');                                                         // 232  // 264\ns.slugify          = _dereq_('./slugify');                                                                  // 233  // 265\ns.surround         = _dereq_('./surround');                                                                 // 234  // 266\ns.quote            = _dereq_('./quote');                                                                    // 235  // 267\ns.unquote          = _dereq_('./unquote');                                                                  // 236  // 268\ns.repeat           = _dereq_('./repeat');                                                                   // 237  // 269\ns.naturalCmp       = _dereq_('./naturalCmp');                                                               // 238  // 270\ns.levenshtein      = _dereq_('./levenshtein');                                                              // 239  // 271\ns.toBoolean        = _dereq_('./toBoolean');                                                                // 240  // 272\ns.exports          = _dereq_('./exports');                                                                  // 241  // 273\ns.escapeRegExp     = _dereq_('./helper/escapeRegExp');                                                      // 242  // 274\n                                                                                                            // 243  // 275\n// Aliases                                                                                                  // 244  // 276\ns.strip     = s.trim;                                                                                       // 245  // 277\ns.lstrip    = s.ltrim;                                                                                      // 246  // 278\ns.rstrip    = s.rtrim;                                                                                      // 247  // 279\ns.center    = s.lrpad;                                                                                      // 248  // 280\ns.rjust     = s.lpad;                                                                                       // 249  // 281\ns.ljust     = s.rpad;                                                                                       // 250  // 282\ns.contains  = s.include;                                                                                    // 251  // 283\ns.q         = s.quote;                                                                                      // 252  // 284\ns.toBool    = s.toBoolean;                                                                                  // 253  // 285\ns.camelcase = s.camelize;                                                                                   // 254  // 286\n                                                                                                            // 255  // 287\n                                                                                                            // 256  // 288\n// Implement chaining                                                                                       // 257  // 289\ns.prototype = {                                                                                             // 258  // 290\n  value: function value() {                                                                                 // 259  // 291\n    return this._wrapped;                                                                                   // 260  // 292\n  }                                                                                                         // 261  // 293\n};                                                                                                          // 262  // 294\n                                                                                                            // 263  // 295\nfunction fn2method(key, fn) {                                                                               // 264  // 296\n    if (typeof fn !== \"function\") return;                                                                   // 265  // 297\n    s.prototype[key] = function() {                                                                         // 266  // 298\n      var args = [this._wrapped].concat(Array.prototype.slice.call(arguments));                             // 267  // 299\n      var res = fn.apply(null, args);                                                                       // 268  // 300\n      // if the result is non-string stop the chain and return the value                                    // 269  // 301\n      return typeof res === 'string' ? new s(res) : res;                                                    // 270  // 302\n    };                                                                                                      // 271  // 303\n}                                                                                                           // 272  // 304\n                                                                                                            // 273  // 305\n// Copy functions to instance methods for chaining                                                          // 274  // 306\nfor (var key in s) fn2method(key, s[key]);                                                                  // 275  // 307\n                                                                                                            // 276  // 308\nfn2method(\"tap\", function tap(string, fn) {                                                                 // 277  // 309\n  return fn(string);                                                                                        // 278  // 310\n});                                                                                                         // 279  // 311\n                                                                                                            // 280  // 312\nfunction prototype2method(methodName) {                                                                     // 281  // 313\n  fn2method(methodName, function(context) {                                                                 // 282  // 314\n    var args = Array.prototype.slice.call(arguments, 1);                                                    // 283  // 315\n    return String.prototype[methodName].apply(context, args);                                               // 284  // 316\n  });                                                                                                       // 285  // 317\n}                                                                                                           // 286  // 318\n                                                                                                            // 287  // 319\nvar prototypeMethods = [                                                                                    // 288  // 320\n  \"toUpperCase\",                                                                                            // 289  // 321\n  \"toLowerCase\",                                                                                            // 290  // 322\n  \"split\",                                                                                                  // 291  // 323\n  \"replace\",                                                                                                // 292  // 324\n  \"slice\",                                                                                                  // 293  // 325\n  \"substring\",                                                                                              // 294  // 326\n  \"substr\",                                                                                                 // 295  // 327\n  \"concat\"                                                                                                  // 296  // 328\n];                                                                                                          // 297  // 329\n                                                                                                            // 298  // 330\nfor (var key in prototypeMethods) prototype2method(prototypeMethods[key]);                                  // 299  // 331\n                                                                                                            // 300  // 332\n                                                                                                            // 301  // 333\nmodule.exports = s;                                                                                         // 302  // 334\n                                                                                                            // 303  // 335\n},{\"./camelize\":1,\"./capitalize\":2,\"./chars\":3,\"./chop\":4,\"./classify\":5,\"./clean\":6,\"./count\":7,\"./dasherize\":8,\"./decapitalize\":9,\"./dedent\":10,\"./endsWith\":11,\"./escapeHTML\":12,\"./exports\":13,\"./helper/escapeRegExp\":18,\"./humanize\":22,\"./include\":23,\"./insert\":24,\"./isBlank\":25,\"./join\":26,\"./levenshtein\":27,\"./lines\":28,\"./lpad\":29,\"./lrpad\":30,\"./ltrim\":31,\"./naturalCmp\":32,\"./numberFormat\":33,\"./pad\":34,\"./pred\":35,\"./prune\":36,\"./quote\":37,\"./repeat\":38,\"./replaceAll\":39,\"./reverse\":40,\"./rpad\":41,\"./rtrim\":42,\"./slugify\":43,\"./splice\":44,\"./sprintf\":45,\"./startsWith\":46,\"./strLeft\":47,\"./strLeftBack\":48,\"./strRight\":49,\"./strRightBack\":50,\"./stripTags\":51,\"./succ\":52,\"./surround\":53,\"./swapCase\":54,\"./titleize\":55,\"./toBoolean\":56,\"./toNumber\":57,\"./toSentence\":58,\"./toSentenceSerial\":59,\"./trim\":60,\"./truncate\":61,\"./underscored\":62,\"./unescapeHTML\":63,\"./unquote\":64,\"./vsprintf\":65,\"./words\":66}],15:[function(_dereq_,module,exports){\nvar makeString = _dereq_('./makeString');                                                                   // 305  // 337\n                                                                                                            // 306  // 338\nmodule.exports = function adjacent(str, direction) {                                                        // 307  // 339\n  str = makeString(str);                                                                                    // 308  // 340\n  if (str.length === 0) {                                                                                   // 309  // 341\n    return '';                                                                                              // 310  // 342\n  }                                                                                                         // 311  // 343\n  return str.slice(0, -1) + String.fromCharCode(str.charCodeAt(str.length - 1) + direction);                // 312  // 344\n};                                                                                                          // 313  // 345\n                                                                                                            // 314  // 346\n},{\"./makeString\":19}],16:[function(_dereq_,module,exports){                                                // 315  // 347\nvar escapeRegExp = _dereq_('./escapeRegExp');                                                               // 316  // 348\n                                                                                                            // 317  // 349\nmodule.exports = function defaultToWhiteSpace(characters) {                                                 // 318  // 350\n  if (characters == null)                                                                                   // 319  // 351\n    return '\\\\s';                                                                                           // 320  // 352\n  else if (characters.source)                                                                               // 321  // 353\n    return characters.source;                                                                               // 322  // 354\n  else                                                                                                      // 323  // 355\n    return '[' + escapeRegExp(characters) + ']';                                                            // 324  // 356\n};                                                                                                          // 325  // 357\n                                                                                                            // 326  // 358\n},{\"./escapeRegExp\":18}],17:[function(_dereq_,module,exports){                                              // 327  // 359\nvar escapeChars = {                                                                                         // 328  // 360\n  lt: '<',                                                                                                  // 329  // 361\n  gt: '>',                                                                                                  // 330  // 362\n  quot: '\"',                                                                                                // 331  // 363\n  amp: '&',                                                                                                 // 332  // 364\n  apos: \"'\"                                                                                                 // 333  // 365\n};                                                                                                          // 334  // 366\n                                                                                                            // 335  // 367\nmodule.exports = escapeChars;                                                                               // 336  // 368\n                                                                                                            // 337  // 369\n},{}],18:[function(_dereq_,module,exports){                                                                 // 338  // 370\nvar makeString = _dereq_('./makeString');                                                                   // 339  // 371\n                                                                                                            // 340  // 372\nmodule.exports = function escapeRegExp(str) {                                                               // 341  // 373\n  return makeString(str).replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1');                                     // 342  // 374\n};                                                                                                          // 343  // 375\n                                                                                                            // 344  // 376\n},{\"./makeString\":19}],19:[function(_dereq_,module,exports){                                                // 345  // 377\n/**                                                                                                         // 346  // 378\n * Ensure some object is a coerced to a string                                                              // 347  // 379\n **/                                                                                                        // 348  // 380\nmodule.exports = function makeString(object) {                                                              // 349  // 381\n  if (object == null) return '';                                                                            // 350  // 382\n  return '' + object;                                                                                       // 351  // 383\n};                                                                                                          // 352  // 384\n                                                                                                            // 353  // 385\n},{}],20:[function(_dereq_,module,exports){                                                                 // 354  // 386\nmodule.exports = function strRepeat(str, qty){                                                              // 355  // 387\n  if (qty < 1) return '';                                                                                   // 356  // 388\n  var result = '';                                                                                          // 357  // 389\n  while (qty > 0) {                                                                                         // 358  // 390\n    if (qty & 1) result += str;                                                                             // 359  // 391\n    qty >>= 1, str += str;                                                                                  // 360  // 392\n  }                                                                                                         // 361  // 393\n  return result;                                                                                            // 362  // 394\n};                                                                                                          // 363  // 395\n                                                                                                            // 364  // 396\n},{}],21:[function(_dereq_,module,exports){                                                                 // 365  // 397\nmodule.exports = function toPositive(number) {                                                              // 366  // 398\n  return number < 0 ? 0 : (+number || 0);                                                                   // 367  // 399\n};                                                                                                          // 368  // 400\n                                                                                                            // 369  // 401\n},{}],22:[function(_dereq_,module,exports){                                                                 // 370  // 402\nvar capitalize = _dereq_('./capitalize');                                                                   // 371  // 403\nvar underscored = _dereq_('./underscored');                                                                 // 372  // 404\nvar trim = _dereq_('./trim');                                                                               // 373  // 405\n                                                                                                            // 374  // 406\nmodule.exports = function humanize(str) {                                                                   // 375  // 407\n  return capitalize(trim(underscored(str).replace(/_id$/, '').replace(/_/g, ' ')));                         // 376  // 408\n};                                                                                                          // 377  // 409\n                                                                                                            // 378  // 410\n},{\"./capitalize\":2,\"./trim\":60,\"./underscored\":62}],23:[function(_dereq_,module,exports){                  // 379  // 411\nvar makeString = _dereq_('./helper/makeString');                                                            // 380  // 412\n                                                                                                            // 381  // 413\nmodule.exports = function include(str, needle) {                                                            // 382  // 414\n  if (needle === '') return true;                                                                           // 383  // 415\n  return makeString(str).indexOf(needle) !== -1;                                                            // 384  // 416\n};                                                                                                          // 385  // 417\n                                                                                                            // 386  // 418\n},{\"./helper/makeString\":19}],24:[function(_dereq_,module,exports){                                         // 387  // 419\nvar splice = _dereq_('./splice');                                                                           // 388  // 420\n                                                                                                            // 389  // 421\nmodule.exports = function insert(str, i, substr) {                                                          // 390  // 422\n  return splice(str, i, 0, substr);                                                                         // 391  // 423\n};                                                                                                          // 392  // 424\n                                                                                                            // 393  // 425\n},{\"./splice\":44}],25:[function(_dereq_,module,exports){                                                    // 394  // 426\nvar makeString = _dereq_('./helper/makeString');                                                            // 395  // 427\n                                                                                                            // 396  // 428\nmodule.exports = function isBlank(str) {                                                                    // 397  // 429\n  return (/^\\s*$/).test(makeString(str));                                                                   // 398  // 430\n};                                                                                                          // 399  // 431\n                                                                                                            // 400  // 432\n},{\"./helper/makeString\":19}],26:[function(_dereq_,module,exports){                                         // 401  // 433\nvar makeString = _dereq_('./helper/makeString');                                                            // 402  // 434\nvar slice = [].slice;                                                                                       // 403  // 435\n                                                                                                            // 404  // 436\nmodule.exports = function join() {                                                                          // 405  // 437\n  var args = slice.call(arguments),                                                                         // 406  // 438\n    separator = args.shift();                                                                               // 407  // 439\n                                                                                                            // 408  // 440\n  return args.join(makeString(separator));                                                                  // 409  // 441\n};                                                                                                          // 410  // 442\n                                                                                                            // 411  // 443\n},{\"./helper/makeString\":19}],27:[function(_dereq_,module,exports){                                         // 412  // 444\nvar makeString = _dereq_('./helper/makeString');                                                            // 413  // 445\n                                                                                                            // 414  // 446\nmodule.exports = function levenshtein(str1, str2) {                                                         // 415  // 447\n  str1 = makeString(str1);                                                                                  // 416  // 448\n  str2 = makeString(str2);                                                                                  // 417  // 449\n                                                                                                            // 418  // 450\n  var current = [],                                                                                         // 419  // 451\n    prev, value;                                                                                            // 420  // 452\n                                                                                                            // 421  // 453\n  for (var i = 0; i <= str2.length; i++)                                                                    // 422  // 454\n    for (var j = 0; j <= str1.length; j++) {                                                                // 423  // 455\n      if (i && j)                                                                                           // 424  // 456\n        if (str1.charAt(j - 1) === str2.charAt(i - 1))                                                      // 425  // 457\n          value = prev;                                                                                     // 426  // 458\n        else                                                                                                // 427  // 459\n          value = Math.min(current[j], current[j - 1], prev) + 1;                                           // 428  // 460\n        else                                                                                                // 429  // 461\n          value = i + j;                                                                                    // 430  // 462\n                                                                                                            // 431  // 463\n      prev = current[j];                                                                                    // 432  // 464\n      current[j] = value;                                                                                   // 433  // 465\n    }                                                                                                       // 434  // 466\n                                                                                                            // 435  // 467\n  return current.pop();                                                                                     // 436  // 468\n};                                                                                                          // 437  // 469\n                                                                                                            // 438  // 470\n},{\"./helper/makeString\":19}],28:[function(_dereq_,module,exports){                                         // 439  // 471\nmodule.exports = function lines(str) {                                                                      // 440  // 472\n  if (str == null) return [];                                                                               // 441  // 473\n  return String(str).split(/\\r?\\n/);                                                                        // 442  // 474\n};                                                                                                          // 443  // 475\n                                                                                                            // 444  // 476\n},{}],29:[function(_dereq_,module,exports){                                                                 // 445  // 477\nvar pad = _dereq_('./pad');                                                                                 // 446  // 478\n                                                                                                            // 447  // 479\nmodule.exports = function lpad(str, length, padStr) {                                                       // 448  // 480\n  return pad(str, length, padStr);                                                                          // 449  // 481\n};                                                                                                          // 450  // 482\n                                                                                                            // 451  // 483\n},{\"./pad\":34}],30:[function(_dereq_,module,exports){                                                       // 452  // 484\nvar pad = _dereq_('./pad');                                                                                 // 453  // 485\n                                                                                                            // 454  // 486\nmodule.exports = function lrpad(str, length, padStr) {                                                      // 455  // 487\n  return pad(str, length, padStr, 'both');                                                                  // 456  // 488\n};                                                                                                          // 457  // 489\n                                                                                                            // 458  // 490\n},{\"./pad\":34}],31:[function(_dereq_,module,exports){                                                       // 459  // 491\nvar makeString = _dereq_('./helper/makeString');                                                            // 460  // 492\nvar defaultToWhiteSpace = _dereq_('./helper/defaultToWhiteSpace');                                          // 461  // 493\nvar nativeTrimLeft = String.prototype.trimLeft;                                                             // 462  // 494\n                                                                                                            // 463  // 495\nmodule.exports = function ltrim(str, characters) {                                                          // 464  // 496\n  str = makeString(str);                                                                                    // 465  // 497\n  if (!characters && nativeTrimLeft) return nativeTrimLeft.call(str);                                       // 466  // 498\n  characters = defaultToWhiteSpace(characters);                                                             // 467  // 499\n  return str.replace(new RegExp('^' + characters + '+'), '');                                               // 468  // 500\n};                                                                                                          // 469  // 501\n                                                                                                            // 470  // 502\n},{\"./helper/defaultToWhiteSpace\":16,\"./helper/makeString\":19}],32:[function(_dereq_,module,exports){       // 471  // 503\nmodule.exports = function naturalCmp(str1, str2) {                                                          // 472  // 504\n  if (str1 == str2) return 0;                                                                               // 473  // 505\n  if (!str1) return -1;                                                                                     // 474  // 506\n  if (!str2) return 1;                                                                                      // 475  // 507\n                                                                                                            // 476  // 508\n  var cmpRegex = /(\\.\\d+)|(\\d+)|(\\D+)/g,                                                                    // 477  // 509\n    tokens1 = String(str1).match(cmpRegex),                                                                 // 478  // 510\n    tokens2 = String(str2).match(cmpRegex),                                                                 // 479  // 511\n    count = Math.min(tokens1.length, tokens2.length);                                                       // 480  // 512\n                                                                                                            // 481  // 513\n  for (var i = 0; i < count; i++) {                                                                         // 482  // 514\n    var a = tokens1[i],                                                                                     // 483  // 515\n      b = tokens2[i];                                                                                       // 484  // 516\n                                                                                                            // 485  // 517\n    if (a !== b) {                                                                                          // 486  // 518\n      var num1 = +a;                                                                                        // 487  // 519\n      var num2 = +b;                                                                                        // 488  // 520\n      if (num1 === num1 && num2 === num2) {                                                                 // 489  // 521\n        return num1 > num2 ? 1 : -1;                                                                        // 490  // 522\n      }                                                                                                     // 491  // 523\n      return a < b ? -1 : 1;                                                                                // 492  // 524\n    }                                                                                                       // 493  // 525\n  }                                                                                                         // 494  // 526\n                                                                                                            // 495  // 527\n  if (tokens1.length != tokens2.length)                                                                     // 496  // 528\n    return tokens1.length - tokens2.length;                                                                 // 497  // 529\n                                                                                                            // 498  // 530\n  return str1 < str2 ? -1 : 1;                                                                              // 499  // 531\n};                                                                                                          // 500  // 532\n                                                                                                            // 501  // 533\n},{}],33:[function(_dereq_,module,exports){                                                                 // 502  // 534\nmodule.exports = function numberFormat(number, dec, dsep, tsep) {                                           // 503  // 535\n  if (isNaN(number) || number == null) return '';                                                           // 504  // 536\n                                                                                                            // 505  // 537\n  number = number.toFixed(~~dec);                                                                           // 506  // 538\n  tsep = typeof tsep == 'string' ? tsep : ',';                                                              // 507  // 539\n                                                                                                            // 508  // 540\n  var parts = number.split('.'),                                                                            // 509  // 541\n    fnums = parts[0],                                                                                       // 510  // 542\n    decimals = parts[1] ? (dsep || '.') + parts[1] : '';                                                    // 511  // 543\n                                                                                                            // 512  // 544\n  return fnums.replace(/(\\d)(?=(?:\\d{3})+$)/g, '$1' + tsep) + decimals;                                     // 513  // 545\n};                                                                                                          // 514  // 546\n                                                                                                            // 515  // 547\n},{}],34:[function(_dereq_,module,exports){                                                                 // 516  // 548\nvar makeString = _dereq_('./helper/makeString');                                                            // 517  // 549\nvar strRepeat = _dereq_('./helper/strRepeat');                                                              // 518  // 550\n                                                                                                            // 519  // 551\nmodule.exports = function pad(str, length, padStr, type) {                                                  // 520  // 552\n  str = makeString(str);                                                                                    // 521  // 553\n  length = ~~length;                                                                                        // 522  // 554\n                                                                                                            // 523  // 555\n  var padlen = 0;                                                                                           // 524  // 556\n                                                                                                            // 525  // 557\n  if (!padStr)                                                                                              // 526  // 558\n    padStr = ' ';                                                                                           // 527  // 559\n  else if (padStr.length > 1)                                                                               // 528  // 560\n    padStr = padStr.charAt(0);                                                                              // 529  // 561\n                                                                                                            // 530  // 562\n  switch (type) {                                                                                           // 531  // 563\n    case 'right':                                                                                           // 532  // 564\n      padlen = length - str.length;                                                                         // 533  // 565\n      return str + strRepeat(padStr, padlen);                                                               // 534  // 566\n    case 'both':                                                                                            // 535  // 567\n      padlen = length - str.length;                                                                         // 536  // 568\n      return strRepeat(padStr, Math.ceil(padlen / 2)) + str + strRepeat(padStr, Math.floor(padlen / 2));    // 537  // 569\n    default: // 'left'                                                                                      // 538  // 570\n      padlen = length - str.length;                                                                         // 539  // 571\n      return strRepeat(padStr, padlen) + str;                                                               // 540  // 572\n  }                                                                                                         // 541  // 573\n};                                                                                                          // 542  // 574\n                                                                                                            // 543  // 575\n},{\"./helper/makeString\":19,\"./helper/strRepeat\":20}],35:[function(_dereq_,module,exports){                 // 544  // 576\nvar adjacent = _dereq_('./helper/adjacent');                                                                // 545  // 577\n                                                                                                            // 546  // 578\nmodule.exports = function succ(str) {                                                                       // 547  // 579\n  return adjacent(str, -1);                                                                                 // 548  // 580\n};                                                                                                          // 549  // 581\n                                                                                                            // 550  // 582\n},{\"./helper/adjacent\":15}],36:[function(_dereq_,module,exports){                                           // 551  // 583\n/**                                                                                                         // 552  // 584\n * _s.prune: a more elegant version of truncate                                                             // 553  // 585\n * prune extra chars, never leaving a half-chopped word.                                                    // 554  // 586\n * @author github.com/rwz                                                                                   // 555  // 587\n */                                                                                                         // 556  // 588\nvar makeString = _dereq_('./helper/makeString');                                                            // 557  // 589\nvar rtrim = _dereq_('./rtrim');                                                                             // 558  // 590\n                                                                                                            // 559  // 591\nmodule.exports = function prune(str, length, pruneStr) {                                                    // 560  // 592\n  str = makeString(str);                                                                                    // 561  // 593\n  length = ~~length;                                                                                        // 562  // 594\n  pruneStr = pruneStr != null ? String(pruneStr) : '...';                                                   // 563  // 595\n                                                                                                            // 564  // 596\n  if (str.length <= length) return str;                                                                     // 565  // 597\n                                                                                                            // 566  // 598\n  var tmpl = function(c) {                                                                                  // 567  // 599\n    return c.toUpperCase() !== c.toLowerCase() ? 'A' : ' ';                                                 // 568  // 600\n  },                                                                                                        // 569  // 601\n    template = str.slice(0, length + 1).replace(/.(?=\\W*\\w*$)/g, tmpl); // 'Hello, world' -> 'HellAA AAAAA' // 570  // 602\n                                                                                                            // 571  // 603\n  if (template.slice(template.length - 2).match(/\\w\\w/))                                                    // 572  // 604\n    template = template.replace(/\\s*\\S+$/, '');                                                             // 573  // 605\n  else                                                                                                      // 574  // 606\n    template = rtrim(template.slice(0, template.length - 1));                                               // 575  // 607\n                                                                                                            // 576  // 608\n  return (template + pruneStr).length > str.length ? str : str.slice(0, template.length) + pruneStr;        // 577  // 609\n};                                                                                                          // 578  // 610\n                                                                                                            // 579  // 611\n},{\"./helper/makeString\":19,\"./rtrim\":42}],37:[function(_dereq_,module,exports){                            // 580  // 612\nvar surround = _dereq_('./surround');                                                                       // 581  // 613\n                                                                                                            // 582  // 614\nmodule.exports = function quote(str, quoteChar) {                                                           // 583  // 615\n  return surround(str, quoteChar || '\"');                                                                   // 584  // 616\n};                                                                                                          // 585  // 617\n                                                                                                            // 586  // 618\n},{\"./surround\":53}],38:[function(_dereq_,module,exports){                                                  // 587  // 619\nvar makeString = _dereq_('./helper/makeString');                                                            // 588  // 620\nvar strRepeat = _dereq_('./helper/strRepeat');                                                              // 589  // 621\n                                                                                                            // 590  // 622\nmodule.exports = function repeat(str, qty, separator) {                                                     // 591  // 623\n  str = makeString(str);                                                                                    // 592  // 624\n                                                                                                            // 593  // 625\n  qty = ~~qty;                                                                                              // 594  // 626\n                                                                                                            // 595  // 627\n  // using faster implementation if separator is not needed;                                                // 596  // 628\n  if (separator == null) return strRepeat(str, qty);                                                        // 597  // 629\n                                                                                                            // 598  // 630\n  // this one is about 300x slower in Google Chrome                                                         // 599  // 631\n  for (var repeat = []; qty > 0; repeat[--qty] = str) {}                                                    // 600  // 632\n  return repeat.join(separator);                                                                            // 601  // 633\n};                                                                                                          // 602  // 634\n                                                                                                            // 603  // 635\n},{\"./helper/makeString\":19,\"./helper/strRepeat\":20}],39:[function(_dereq_,module,exports){                 // 604  // 636\nvar makeString = _dereq_('./helper/makeString');                                                            // 605  // 637\n                                                                                                            // 606  // 638\nmodule.exports = function replaceAll(str, find, replace, ignorecase) {                                      // 607  // 639\n  var flags = (ignorecase === true)?'gi':'g';                                                               // 608  // 640\n  var reg = new RegExp(find, flags);                                                                        // 609  // 641\n                                                                                                            // 610  // 642\n  return makeString(str).replace(reg, replace);                                                             // 611  // 643\n};                                                                                                          // 612  // 644\n                                                                                                            // 613  // 645\n},{\"./helper/makeString\":19}],40:[function(_dereq_,module,exports){                                         // 614  // 646\nvar chars = _dereq_('./chars');                                                                             // 615  // 647\n                                                                                                            // 616  // 648\nmodule.exports = function reverse(str) {                                                                    // 617  // 649\n  return chars(str).reverse().join('');                                                                     // 618  // 650\n};                                                                                                          // 619  // 651\n                                                                                                            // 620  // 652\n},{\"./chars\":3}],41:[function(_dereq_,module,exports){                                                      // 621  // 653\nvar pad = _dereq_('./pad');                                                                                 // 622  // 654\n                                                                                                            // 623  // 655\nmodule.exports = function rpad(str, length, padStr) {                                                       // 624  // 656\n  return pad(str, length, padStr, 'right');                                                                 // 625  // 657\n};                                                                                                          // 626  // 658\n                                                                                                            // 627  // 659\n},{\"./pad\":34}],42:[function(_dereq_,module,exports){                                                       // 628  // 660\nvar makeString = _dereq_('./helper/makeString');                                                            // 629  // 661\nvar defaultToWhiteSpace = _dereq_('./helper/defaultToWhiteSpace');                                          // 630  // 662\nvar nativeTrimRight = String.prototype.trimRight;                                                           // 631  // 663\n                                                                                                            // 632  // 664\nmodule.exports = function rtrim(str, characters) {                                                          // 633  // 665\n  str = makeString(str);                                                                                    // 634  // 666\n  if (!characters && nativeTrimRight) return nativeTrimRight.call(str);                                     // 635  // 667\n  characters = defaultToWhiteSpace(characters);                                                             // 636  // 668\n  return str.replace(new RegExp(characters + '+$'), '');                                                    // 637  // 669\n};                                                                                                          // 638  // 670\n                                                                                                            // 639  // 671\n},{\"./helper/defaultToWhiteSpace\":16,\"./helper/makeString\":19}],43:[function(_dereq_,module,exports){       // 640  // 672\nvar makeString = _dereq_('./helper/makeString');                                                            // 641  // 673\nvar defaultToWhiteSpace = _dereq_('./helper/defaultToWhiteSpace');                                          // 642  // 674\nvar trim = _dereq_('./trim');                                                                               // 643  // 675\nvar dasherize = _dereq_('./dasherize');                                                                     // 644  // 676\n                                                                                                            // 645  // 677\nmodule.exports = function slugify(str) {                                                                    // 646  // 678\n  var from  = \"ąàáäâãåæăćčĉęèéëêĝĥìíïîĵłľńňòóöőôõðøśșšŝťțŭùúüűûñÿýçżźž\",                                    // 647  // 679\n      to    = \"aaaaaaaaaccceeeeeghiiiijllnnoooooooossssttuuuuuunyyczzz\",                                    // 648  // 680\n      regex = new RegExp(defaultToWhiteSpace(from), 'g');                                                   // 649  // 681\n                                                                                                            // 650  // 682\n  str = makeString(str).toLowerCase().replace(regex, function(c){                                           // 651  // 683\n    var index = from.indexOf(c);                                                                            // 652  // 684\n    return to.charAt(index) || '-';                                                                         // 653  // 685\n  });                                                                                                       // 654  // 686\n                                                                                                            // 655  // 687\n  return trim(dasherize(str.replace(/[^\\w\\s-]/g, '-')), '-');                                               // 656  // 688\n};                                                                                                          // 657  // 689\n                                                                                                            // 658  // 690\n},{\"./dasherize\":8,\"./helper/defaultToWhiteSpace\":16,\"./helper/makeString\":19,\"./trim\":60}],44:[function(_dereq_,module,exports){\nvar chars = _dereq_('./chars');                                                                             // 660  // 692\n                                                                                                            // 661  // 693\nmodule.exports = function splice(str, i, howmany, substr) {                                                 // 662  // 694\n  var arr = chars(str);                                                                                     // 663  // 695\n  arr.splice(~~i, ~~howmany, substr);                                                                       // 664  // 696\n  return arr.join('');                                                                                      // 665  // 697\n};                                                                                                          // 666  // 698\n                                                                                                            // 667  // 699\n},{\"./chars\":3}],45:[function(_dereq_,module,exports){                                                      // 668  // 700\n// sprintf() for JavaScript 0.7-beta1                                                                       // 669  // 701\n// http://www.diveintojavascript.com/projects/javascript-sprintf                                            // 670  // 702\n//                                                                                                          // 671  // 703\n// Copyright (c) Alexandru Marasteanu <alexaholic [at) gmail (dot] com>                                     // 672  // 704\n// All rights reserved.                                                                                     // 673  // 705\nvar strRepeat = _dereq_('./helper/strRepeat');                                                              // 674  // 706\nvar toString = Object.prototype.toString;                                                                   // 675  // 707\nvar sprintf = (function() {                                                                                 // 676  // 708\n  function get_type(variable) {                                                                             // 677  // 709\n    return toString.call(variable).slice(8, -1).toLowerCase();                                              // 678  // 710\n  }                                                                                                         // 679  // 711\n                                                                                                            // 680  // 712\n  var str_repeat = strRepeat;                                                                               // 681  // 713\n                                                                                                            // 682  // 714\n  var str_format = function() {                                                                             // 683  // 715\n    if (!str_format.cache.hasOwnProperty(arguments[0])) {                                                   // 684  // 716\n      str_format.cache[arguments[0]] = str_format.parse(arguments[0]);                                      // 685  // 717\n    }                                                                                                       // 686  // 718\n    return str_format.format.call(null, str_format.cache[arguments[0]], arguments);                         // 687  // 719\n  };                                                                                                        // 688  // 720\n                                                                                                            // 689  // 721\n  str_format.format = function(parse_tree, argv) {                                                          // 690  // 722\n    var cursor = 1, tree_length = parse_tree.length, node_type = '', arg, output = [], i, k, match, pad, pad_character, pad_length;\n    for (i = 0; i < tree_length; i++) {                                                                     // 692  // 724\n      node_type = get_type(parse_tree[i]);                                                                  // 693  // 725\n      if (node_type === 'string') {                                                                         // 694  // 726\n        output.push(parse_tree[i]);                                                                         // 695  // 727\n      }                                                                                                     // 696  // 728\n      else if (node_type === 'array') {                                                                     // 697  // 729\n        match = parse_tree[i]; // convenience purposes only                                                 // 698  // 730\n        if (match[2]) { // keyword argument                                                                 // 699  // 731\n          arg = argv[cursor];                                                                               // 700  // 732\n          for (k = 0; k < match[2].length; k++) {                                                           // 701  // 733\n            if (!arg.hasOwnProperty(match[2][k])) {                                                         // 702  // 734\n              throw new Error(sprintf('[_.sprintf] property \"%s\" does not exist', match[2][k]));            // 703  // 735\n            }                                                                                               // 704  // 736\n            arg = arg[match[2][k]];                                                                         // 705  // 737\n          }                                                                                                 // 706  // 738\n        } else if (match[1]) { // positional argument (explicit)                                            // 707  // 739\n          arg = argv[match[1]];                                                                             // 708  // 740\n        }                                                                                                   // 709  // 741\n        else { // positional argument (implicit)                                                            // 710  // 742\n          arg = argv[cursor++];                                                                             // 711  // 743\n        }                                                                                                   // 712  // 744\n                                                                                                            // 713  // 745\n        if (/[^s]/.test(match[8]) && (get_type(arg) != 'number')) {                                         // 714  // 746\n          throw new Error(sprintf('[_.sprintf] expecting number but found %s', get_type(arg)));             // 715  // 747\n        }                                                                                                   // 716  // 748\n        switch (match[8]) {                                                                                 // 717  // 749\n          case 'b': arg = arg.toString(2); break;                                                           // 718  // 750\n          case 'c': arg = String.fromCharCode(arg); break;                                                  // 719  // 751\n          case 'd': arg = parseInt(arg, 10); break;                                                         // 720  // 752\n          case 'e': arg = match[7] ? arg.toExponential(match[7]) : arg.toExponential(); break;              // 721  // 753\n          case 'f': arg = match[7] ? parseFloat(arg).toFixed(match[7]) : parseFloat(arg); break;            // 722  // 754\n          case 'o': arg = arg.toString(8); break;                                                           // 723  // 755\n          case 's': arg = ((arg = String(arg)) && match[7] ? arg.substring(0, match[7]) : arg); break;      // 724  // 756\n          case 'u': arg = Math.abs(arg); break;                                                             // 725  // 757\n          case 'x': arg = arg.toString(16); break;                                                          // 726  // 758\n          case 'X': arg = arg.toString(16).toUpperCase(); break;                                            // 727  // 759\n        }                                                                                                   // 728  // 760\n        arg = (/[def]/.test(match[8]) && match[3] && arg >= 0 ? '+'+ arg : arg);                            // 729  // 761\n        pad_character = match[4] ? match[4] == '0' ? '0' : match[4].charAt(1) : ' ';                        // 730  // 762\n        pad_length = match[6] - String(arg).length;                                                         // 731  // 763\n        pad = match[6] ? str_repeat(pad_character, pad_length) : '';                                        // 732  // 764\n        output.push(match[5] ? arg + pad : pad + arg);                                                      // 733  // 765\n      }                                                                                                     // 734  // 766\n    }                                                                                                       // 735  // 767\n    return output.join('');                                                                                 // 736  // 768\n  };                                                                                                        // 737  // 769\n                                                                                                            // 738  // 770\n  str_format.cache = {};                                                                                    // 739  // 771\n                                                                                                            // 740  // 772\n  str_format.parse = function(fmt) {                                                                        // 741  // 773\n    var _fmt = fmt, match = [], parse_tree = [], arg_names = 0;                                             // 742  // 774\n    while (_fmt) {                                                                                          // 743  // 775\n      if ((match = /^[^\\x25]+/.exec(_fmt)) !== null) {                                                      // 744  // 776\n        parse_tree.push(match[0]);                                                                          // 745  // 777\n      }                                                                                                     // 746  // 778\n      else if ((match = /^\\x25{2}/.exec(_fmt)) !== null) {                                                  // 747  // 779\n        parse_tree.push('%');                                                                               // 748  // 780\n      }                                                                                                     // 749  // 781\n      else if ((match = /^\\x25(?:([1-9]\\d*)\\$|\\(([^\\)]+)\\))?(\\+)?(0|'[^$])?(-)?(\\d+)?(?:\\.(\\d+))?([b-fosuxX])/.exec(_fmt)) !== null) {\n        if (match[2]) {                                                                                     // 751  // 783\n          arg_names |= 1;                                                                                   // 752  // 784\n          var field_list = [], replacement_field = match[2], field_match = [];                              // 753  // 785\n          if ((field_match = /^([a-z_][a-z_\\d]*)/i.exec(replacement_field)) !== null) {                     // 754  // 786\n            field_list.push(field_match[1]);                                                                // 755  // 787\n            while ((replacement_field = replacement_field.substring(field_match[0].length)) !== '') {       // 756  // 788\n              if ((field_match = /^\\.([a-z_][a-z_\\d]*)/i.exec(replacement_field)) !== null) {               // 757  // 789\n                field_list.push(field_match[1]);                                                            // 758  // 790\n              }                                                                                             // 759  // 791\n              else if ((field_match = /^\\[(\\d+)\\]/.exec(replacement_field)) !== null) {                     // 760  // 792\n                field_list.push(field_match[1]);                                                            // 761  // 793\n              }                                                                                             // 762  // 794\n              else {                                                                                        // 763  // 795\n                throw new Error('[_.sprintf] huh?');                                                        // 764  // 796\n              }                                                                                             // 765  // 797\n            }                                                                                               // 766  // 798\n          }                                                                                                 // 767  // 799\n          else {                                                                                            // 768  // 800\n            throw new Error('[_.sprintf] huh?');                                                            // 769  // 801\n          }                                                                                                 // 770  // 802\n          match[2] = field_list;                                                                            // 771  // 803\n        }                                                                                                   // 772  // 804\n        else {                                                                                              // 773  // 805\n          arg_names |= 2;                                                                                   // 774  // 806\n        }                                                                                                   // 775  // 807\n        if (arg_names === 3) {                                                                              // 776  // 808\n          throw new Error('[_.sprintf] mixing positional and named placeholders is not (yet) supported');   // 777  // 809\n        }                                                                                                   // 778  // 810\n        parse_tree.push(match);                                                                             // 779  // 811\n      }                                                                                                     // 780  // 812\n      else {                                                                                                // 781  // 813\n        throw new Error('[_.sprintf] huh?');                                                                // 782  // 814\n      }                                                                                                     // 783  // 815\n      _fmt = _fmt.substring(match[0].length);                                                               // 784  // 816\n    }                                                                                                       // 785  // 817\n    return parse_tree;                                                                                      // 786  // 818\n  };                                                                                                        // 787  // 819\n                                                                                                            // 788  // 820\n  return str_format;                                                                                        // 789  // 821\n})();                                                                                                       // 790  // 822\n                                                                                                            // 791  // 823\nmodule.exports = sprintf;                                                                                   // 792  // 824\n                                                                                                            // 793  // 825\n},{\"./helper/strRepeat\":20}],46:[function(_dereq_,module,exports){                                          // 794  // 826\nvar makeString = _dereq_('./helper/makeString');                                                            // 795  // 827\nvar toPositive = _dereq_('./helper/toPositive');                                                            // 796  // 828\n                                                                                                            // 797  // 829\nmodule.exports = function startsWith(str, starts, position) {                                               // 798  // 830\n  str = makeString(str);                                                                                    // 799  // 831\n  starts = '' + starts;                                                                                     // 800  // 832\n  position = position == null ? 0 : Math.min(toPositive(position), str.length);                             // 801  // 833\n  return str.lastIndexOf(starts, position) === position;                                                    // 802  // 834\n};                                                                                                          // 803  // 835\n                                                                                                            // 804  // 836\n},{\"./helper/makeString\":19,\"./helper/toPositive\":21}],47:[function(_dereq_,module,exports){                // 805  // 837\nvar makeString = _dereq_('./helper/makeString');                                                            // 806  // 838\n                                                                                                            // 807  // 839\nmodule.exports = function strLeft(str, sep) {                                                               // 808  // 840\n  str = makeString(str);                                                                                    // 809  // 841\n  sep = makeString(sep);                                                                                    // 810  // 842\n  var pos = !sep ? -1 : str.indexOf(sep);                                                                   // 811  // 843\n  return~ pos ? str.slice(0, pos) : str;                                                                    // 812  // 844\n};                                                                                                          // 813  // 845\n                                                                                                            // 814  // 846\n},{\"./helper/makeString\":19}],48:[function(_dereq_,module,exports){                                         // 815  // 847\nvar makeString = _dereq_('./helper/makeString');                                                            // 816  // 848\n                                                                                                            // 817  // 849\nmodule.exports = function strLeftBack(str, sep) {                                                           // 818  // 850\n  str = makeString(str);                                                                                    // 819  // 851\n  sep = makeString(sep);                                                                                    // 820  // 852\n  var pos = str.lastIndexOf(sep);                                                                           // 821  // 853\n  return~ pos ? str.slice(0, pos) : str;                                                                    // 822  // 854\n};                                                                                                          // 823  // 855\n                                                                                                            // 824  // 856\n},{\"./helper/makeString\":19}],49:[function(_dereq_,module,exports){                                         // 825  // 857\nvar makeString = _dereq_('./helper/makeString');                                                            // 826  // 858\n                                                                                                            // 827  // 859\nmodule.exports = function strRight(str, sep) {                                                              // 828  // 860\n  str = makeString(str);                                                                                    // 829  // 861\n  sep = makeString(sep);                                                                                    // 830  // 862\n  var pos = !sep ? -1 : str.indexOf(sep);                                                                   // 831  // 863\n  return~ pos ? str.slice(pos + sep.length, str.length) : str;                                              // 832  // 864\n};                                                                                                          // 833  // 865\n                                                                                                            // 834  // 866\n},{\"./helper/makeString\":19}],50:[function(_dereq_,module,exports){                                         // 835  // 867\nvar makeString = _dereq_('./helper/makeString');                                                            // 836  // 868\n                                                                                                            // 837  // 869\nmodule.exports = function strRightBack(str, sep) {                                                          // 838  // 870\n  str = makeString(str);                                                                                    // 839  // 871\n  sep = makeString(sep);                                                                                    // 840  // 872\n  var pos = !sep ? -1 : str.lastIndexOf(sep);                                                               // 841  // 873\n  return~ pos ? str.slice(pos + sep.length, str.length) : str;                                              // 842  // 874\n};                                                                                                          // 843  // 875\n                                                                                                            // 844  // 876\n},{\"./helper/makeString\":19}],51:[function(_dereq_,module,exports){                                         // 845  // 877\nvar makeString = _dereq_('./helper/makeString');                                                            // 846  // 878\n                                                                                                            // 847  // 879\nmodule.exports = function stripTags(str) {                                                                  // 848  // 880\n  return makeString(str).replace(/<\\/?[^>]+>/g, '');                                                        // 849  // 881\n};                                                                                                          // 850  // 882\n                                                                                                            // 851  // 883\n},{\"./helper/makeString\":19}],52:[function(_dereq_,module,exports){                                         // 852  // 884\nvar adjacent = _dereq_('./helper/adjacent');                                                                // 853  // 885\n                                                                                                            // 854  // 886\nmodule.exports = function succ(str) {                                                                       // 855  // 887\n  return adjacent(str, 1);                                                                                  // 856  // 888\n};                                                                                                          // 857  // 889\n                                                                                                            // 858  // 890\n},{\"./helper/adjacent\":15}],53:[function(_dereq_,module,exports){                                           // 859  // 891\nmodule.exports = function surround(str, wrapper) {                                                          // 860  // 892\n  return [wrapper, str, wrapper].join('');                                                                  // 861  // 893\n};                                                                                                          // 862  // 894\n                                                                                                            // 863  // 895\n},{}],54:[function(_dereq_,module,exports){                                                                 // 864  // 896\nvar makeString = _dereq_('./helper/makeString');                                                            // 865  // 897\n                                                                                                            // 866  // 898\nmodule.exports = function swapCase(str) {                                                                   // 867  // 899\n  return makeString(str).replace(/\\S/g, function(c) {                                                       // 868  // 900\n    return c === c.toUpperCase() ? c.toLowerCase() : c.toUpperCase();                                       // 869  // 901\n  });                                                                                                       // 870  // 902\n};                                                                                                          // 871  // 903\n                                                                                                            // 872  // 904\n},{\"./helper/makeString\":19}],55:[function(_dereq_,module,exports){                                         // 873  // 905\nvar makeString = _dereq_('./helper/makeString');                                                            // 874  // 906\n                                                                                                            // 875  // 907\nmodule.exports = function titleize(str) {                                                                   // 876  // 908\n  return makeString(str).toLowerCase().replace(/(?:^|\\s|-)\\S/g, function(c) {                               // 877  // 909\n    return c.toUpperCase();                                                                                 // 878  // 910\n  });                                                                                                       // 879  // 911\n};                                                                                                          // 880  // 912\n                                                                                                            // 881  // 913\n},{\"./helper/makeString\":19}],56:[function(_dereq_,module,exports){                                         // 882  // 914\nvar trim = _dereq_('./trim');                                                                               // 883  // 915\n                                                                                                            // 884  // 916\nfunction boolMatch(s, matchers) {                                                                           // 885  // 917\n  var i, matcher, down = s.toLowerCase();                                                                   // 886  // 918\n  matchers = [].concat(matchers);                                                                           // 887  // 919\n  for (i = 0; i < matchers.length; i += 1) {                                                                // 888  // 920\n    matcher = matchers[i];                                                                                  // 889  // 921\n    if (!matcher) continue;                                                                                 // 890  // 922\n    if (matcher.test && matcher.test(s)) return true;                                                       // 891  // 923\n    if (matcher.toLowerCase() === down) return true;                                                        // 892  // 924\n  }                                                                                                         // 893  // 925\n}                                                                                                           // 894  // 926\n                                                                                                            // 895  // 927\nmodule.exports = function toBoolean(str, trueValues, falseValues) {                                         // 896  // 928\n  if (typeof str === \"number\") str = \"\" + str;                                                              // 897  // 929\n  if (typeof str !== \"string\") return !!str;                                                                // 898  // 930\n  str = trim(str);                                                                                          // 899  // 931\n  if (boolMatch(str, trueValues || [\"true\", \"1\"])) return true;                                             // 900  // 932\n  if (boolMatch(str, falseValues || [\"false\", \"0\"])) return false;                                          // 901  // 933\n};                                                                                                          // 902  // 934\n                                                                                                            // 903  // 935\n},{\"./trim\":60}],57:[function(_dereq_,module,exports){                                                      // 904  // 936\nvar trim = _dereq_('./trim');                                                                               // 905  // 937\nvar parseNumber = function(source) {                                                                        // 906  // 938\n  return source * 1 || 0;                                                                                   // 907  // 939\n};                                                                                                          // 908  // 940\n                                                                                                            // 909  // 941\nmodule.exports = function toNumber(num, precision) {                                                        // 910  // 942\n  if (num == null) return 0;                                                                                // 911  // 943\n  var factor = Math.pow(10, isFinite(precision) ? precision : 0);                                           // 912  // 944\n  return Math.round(num * factor) / factor;                                                                 // 913  // 945\n};                                                                                                          // 914  // 946\n                                                                                                            // 915  // 947\n},{\"./trim\":60}],58:[function(_dereq_,module,exports){                                                      // 916  // 948\nvar rtrim = _dereq_('./rtrim');                                                                             // 917  // 949\n                                                                                                            // 918  // 950\nmodule.exports = function toSentence(array, separator, lastSeparator, serial) {                             // 919  // 951\n  separator = separator || ', ';                                                                            // 920  // 952\n  lastSeparator = lastSeparator || ' and ';                                                                 // 921  // 953\n  var a = array.slice(),                                                                                    // 922  // 954\n    lastMember = a.pop();                                                                                   // 923  // 955\n                                                                                                            // 924  // 956\n  if (array.length > 2 && serial) lastSeparator = rtrim(separator) + lastSeparator;                         // 925  // 957\n                                                                                                            // 926  // 958\n  return a.length ? a.join(separator) + lastSeparator + lastMember : lastMember;                            // 927  // 959\n};                                                                                                          // 928  // 960\n                                                                                                            // 929  // 961\n},{\"./rtrim\":42}],59:[function(_dereq_,module,exports){                                                     // 930  // 962\nvar toSentence = _dereq_('./toSentence');                                                                   // 931  // 963\n                                                                                                            // 932  // 964\nmodule.exports = function toSentenceSerial(array, sep, lastSep) {                                           // 933  // 965\n  return toSentence(array, sep, lastSep, true);                                                             // 934  // 966\n};                                                                                                          // 935  // 967\n                                                                                                            // 936  // 968\n},{\"./toSentence\":58}],60:[function(_dereq_,module,exports){                                                // 937  // 969\nvar makeString = _dereq_('./helper/makeString');                                                            // 938  // 970\nvar defaultToWhiteSpace = _dereq_('./helper/defaultToWhiteSpace');                                          // 939  // 971\nvar nativeTrim = String.prototype.trim;                                                                     // 940  // 972\n                                                                                                            // 941  // 973\nmodule.exports = function trim(str, characters) {                                                           // 942  // 974\n  str = makeString(str);                                                                                    // 943  // 975\n  if (!characters && nativeTrim) return nativeTrim.call(str);                                               // 944  // 976\n  characters = defaultToWhiteSpace(characters);                                                             // 945  // 977\n  return str.replace(new RegExp('^' + characters + '+|' + characters + '+$', 'g'), '');                     // 946  // 978\n};                                                                                                          // 947  // 979\n                                                                                                            // 948  // 980\n},{\"./helper/defaultToWhiteSpace\":16,\"./helper/makeString\":19}],61:[function(_dereq_,module,exports){       // 949  // 981\nvar makeString = _dereq_('./helper/makeString');                                                            // 950  // 982\n                                                                                                            // 951  // 983\nmodule.exports = function truncate(str, length, truncateStr) {                                              // 952  // 984\n  str = makeString(str);                                                                                    // 953  // 985\n  truncateStr = truncateStr || '...';                                                                       // 954  // 986\n  length = ~~length;                                                                                        // 955  // 987\n  return str.length > length ? str.slice(0, length) + truncateStr : str;                                    // 956  // 988\n};                                                                                                          // 957  // 989\n                                                                                                            // 958  // 990\n},{\"./helper/makeString\":19}],62:[function(_dereq_,module,exports){                                         // 959  // 991\nvar trim = _dereq_('./trim');                                                                               // 960  // 992\n                                                                                                            // 961  // 993\nmodule.exports = function underscored(str) {                                                                // 962  // 994\n  return trim(str).replace(/([a-z\\d])([A-Z]+)/g, '$1_$2').replace(/[-\\s]+/g, '_').toLowerCase();            // 963  // 995\n};                                                                                                          // 964  // 996\n                                                                                                            // 965  // 997\n},{\"./trim\":60}],63:[function(_dereq_,module,exports){                                                      // 966  // 998\nvar makeString = _dereq_('./helper/makeString');                                                            // 967  // 999\nvar escapeChars = _dereq_('./helper/escapeChars');                                                          // 968  // 1000\n                                                                                                            // 969  // 1001\nmodule.exports = function unescapeHTML(str) {                                                               // 970  // 1002\n  return makeString(str).replace(/\\&([^;]+);/g, function(entity, entityCode) {                              // 971  // 1003\n    var match;                                                                                              // 972  // 1004\n                                                                                                            // 973  // 1005\n    if (entityCode in escapeChars) {                                                                        // 974  // 1006\n      return escapeChars[entityCode];                                                                       // 975  // 1007\n    } else if (match = entityCode.match(/^#x([\\da-fA-F]+)$/)) {                                             // 976  // 1008\n      return String.fromCharCode(parseInt(match[1], 16));                                                   // 977  // 1009\n    } else if (match = entityCode.match(/^#(\\d+)$/)) {                                                      // 978  // 1010\n      return String.fromCharCode(~~match[1]);                                                               // 979  // 1011\n    } else {                                                                                                // 980  // 1012\n      return entity;                                                                                        // 981  // 1013\n    }                                                                                                       // 982  // 1014\n  });                                                                                                       // 983  // 1015\n};                                                                                                          // 984  // 1016\n                                                                                                            // 985  // 1017\n},{\"./helper/escapeChars\":17,\"./helper/makeString\":19}],64:[function(_dereq_,module,exports){               // 986  // 1018\nmodule.exports = function unquote(str, quoteChar) {                                                         // 987  // 1019\n  quoteChar = quoteChar || '\"';                                                                             // 988  // 1020\n  if (str[0] === quoteChar && str[str.length - 1] === quoteChar)                                            // 989  // 1021\n    return str.slice(1, str.length - 1);                                                                    // 990  // 1022\n  else return str;                                                                                          // 991  // 1023\n};                                                                                                          // 992  // 1024\n                                                                                                            // 993  // 1025\n},{}],65:[function(_dereq_,module,exports){                                                                 // 994  // 1026\nvar sprintf = _dereq_('./sprintf');                                                                         // 995  // 1027\n                                                                                                            // 996  // 1028\nmodule.exports = function vsprintf(fmt, argv) {                                                             // 997  // 1029\n  argv.unshift(fmt);                                                                                        // 998  // 1030\n  return sprintf.apply(null, argv);                                                                         // 999  // 1031\n};                                                                                                          // 1000\n                                                                                                            // 1001\n},{\"./sprintf\":45}],66:[function(_dereq_,module,exports){                                                   // 1002\nvar isBlank = _dereq_('./isBlank');                                                                         // 1003\nvar trim = _dereq_('./trim');                                                                               // 1004\n                                                                                                            // 1005\nmodule.exports = function words(str, delimiter) {                                                           // 1006\n  if (isBlank(str)) return [];                                                                              // 1007\n  return trim(str, delimiter).split(delimiter || /\\s+/);                                                    // 1008\n};                                                                                                          // 1009\n                                                                                                            // 1010\n},{\"./isBlank\":25,\"./trim\":60}]},{},[14])                                                                   // 1011\n(14)                                                                                                        // 1012\n});                                                                                                         // 1013\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////      // 1046\n                                                                                                                    // 1047\n}).call(this);                                                                                                      // 1048\n                                                                                                                    // 1049\n                                                                                                                    // 1050\n                                                                                                                    // 1051\n                                                                                                                    // 1052\n                                                                                                                    // 1053\n                                                                                                                    // 1054\n(function () {                                                                                                      // 1055\n                                                                                                                    // 1056\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////      // 1057\n//                                                                                                          //      // 1058\n// packages/underscorestring:underscore.string/meteor-post.js                                               //      // 1059\n//                                                                                                          //      // 1060\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////      // 1061\n                                                                                                            //      // 1062\n// s will be picked up by Meteor and exported                                                               // 1    // 1063\ns = module.exports;                                                                                         // 2    // 1064\n                                                                                                            // 3    // 1065\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////      // 1066\n                                                                                                                    // 1067\n}).call(this);                                                                                                      // 1068\n                                                                                                                    // 1069\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\n(function (pkg, symbols) {\n  for (var s in symbols)\n    (s in pkg) || (pkg[s] = symbols[s]);\n})(Package['underscorestring:underscore.string'] = {}, {\n  s: s\n});\n\n})();\n","servePath":"/packages/underscorestring_underscore.string.js"}]