[{"type":"js","data":"(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar Accounts = Package['accounts-base'].Accounts;\nvar Github = Package.github.Github;\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                     //\n// packages/accounts-github/github.js                                                                  //\n//                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                       //\nAccounts.oauth.registerService('github');\n\nif (Meteor.isClient) {\n  Meteor.loginWithGithub = function(options, callback) {\n    // support a callback without options\n    if (! callback && typeof options === \"function\") {\n      callback = options;\n      options = null;\n    }\n\n    var credentialRequestCompleteCallback = Accounts.oauth.credentialRequestCompleteHandler(callback);\n    Github.requestCredential(options, credentialRequestCompleteCallback);\n  };\n} else {\n  Accounts.addAutopublishFields({\n    // not sure whether the github api can be used from the browser,\n    // thus not sure if we should be sending access tokens; but we do it\n    // for all other oauth2 providers, and it may come in handy.\n    forLoggedInUser: ['services.github'],\n    forOtherUsers: ['services.github.username']\n  });\n}\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\nPackage['accounts-github'] = {};\n\n})();\n","servePath":"/packages/accounts-github.js"}]