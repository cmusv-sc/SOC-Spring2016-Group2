[{"type":"js","data":"(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar Template = Package.templating.Template;\nvar _ = Package.underscore._;\nvar Blaze = Package.blaze.Blaze;\nvar UI = Package.blaze.UI;\nvar Handlebars = Package.blaze.Handlebars;\nvar Spacebars = Package.spacebars.Spacebars;\nvar HTML = Package.htmljs.HTML;\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/dbarrett_dropzonejs/packages/dbarrett_dropzonejs.js                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n(function () {                                                                                                         // 1\n                                                                                                                       // 2\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// packages/dbarrett:dropzonejs/lib/3.10.2/dropzone.js                                                              //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\n;(function(){                                                                                                       // 1\n                                                                                                                    // 2\n/**                                                                                                                 // 3\n * Require the module at `name`.                                                                                    // 4\n *                                                                                                                  // 5\n * @param {String} name                                                                                             // 6\n * @return {Object} exports                                                                                         // 7\n * @api public                                                                                                      // 8\n */                                                                                                                 // 9\n                                                                                                                    // 10\nfunction require(name) {                                                                                            // 11\n  var module = require.modules[name];                                                                               // 12\n  if (!module) throw new Error('failed to require \"' + name + '\"');                                                 // 13\n                                                                                                                    // 14\n  if (!('exports' in module) && typeof module.definition === 'function') {                                          // 15\n    module.client = module.component = true;                                                                        // 16\n    module.definition.call(this, module.exports = {}, module);                                                      // 17\n    delete module.definition;                                                                                       // 18\n  }                                                                                                                 // 19\n                                                                                                                    // 20\n  return module.exports;                                                                                            // 21\n}                                                                                                                   // 22\n                                                                                                                    // 23\n/**                                                                                                                 // 24\n * Registered modules.                                                                                              // 25\n */                                                                                                                 // 26\n                                                                                                                    // 27\nrequire.modules = {};                                                                                               // 28\n                                                                                                                    // 29\n/**                                                                                                                 // 30\n * Register module at `name` with callback `definition`.                                                            // 31\n *                                                                                                                  // 32\n * @param {String} name                                                                                             // 33\n * @param {Function} definition                                                                                     // 34\n * @api private                                                                                                     // 35\n */                                                                                                                 // 36\n                                                                                                                    // 37\nrequire.register = function (name, definition) {                                                                    // 38\n  require.modules[name] = {                                                                                         // 39\n    definition: definition                                                                                          // 40\n  };                                                                                                                // 41\n};                                                                                                                  // 42\n                                                                                                                    // 43\n/**                                                                                                                 // 44\n * Define a module's exports immediately with `exports`.                                                            // 45\n *                                                                                                                  // 46\n * @param {String} name                                                                                             // 47\n * @param {Generic} exports                                                                                         // 48\n * @api private                                                                                                     // 49\n */                                                                                                                 // 50\n                                                                                                                    // 51\nrequire.define = function (name, exports) {                                                                         // 52\n  require.modules[name] = {                                                                                         // 53\n    exports: exports                                                                                                // 54\n  };                                                                                                                // 55\n};                                                                                                                  // 56\nrequire.register(\"component~emitter@1.1.2\", function (exports, module) {                                            // 57\n                                                                                                                    // 58\n/**                                                                                                                 // 59\n * Expose `Emitter`.                                                                                                // 60\n */                                                                                                                 // 61\n                                                                                                                    // 62\nmodule.exports = Emitter;                                                                                           // 63\n                                                                                                                    // 64\n/**                                                                                                                 // 65\n * Initialize a new `Emitter`.                                                                                      // 66\n *                                                                                                                  // 67\n * @api public                                                                                                      // 68\n */                                                                                                                 // 69\n                                                                                                                    // 70\nfunction Emitter(obj) {                                                                                             // 71\n  if (obj) return mixin(obj);                                                                                       // 72\n};                                                                                                                  // 73\n                                                                                                                    // 74\n/**                                                                                                                 // 75\n * Mixin the emitter properties.                                                                                    // 76\n *                                                                                                                  // 77\n * @param {Object} obj                                                                                              // 78\n * @return {Object}                                                                                                 // 79\n * @api private                                                                                                     // 80\n */                                                                                                                 // 81\n                                                                                                                    // 82\nfunction mixin(obj) {                                                                                               // 83\n  for (var key in Emitter.prototype) {                                                                              // 84\n    obj[key] = Emitter.prototype[key];                                                                              // 85\n  }                                                                                                                 // 86\n  return obj;                                                                                                       // 87\n}                                                                                                                   // 88\n                                                                                                                    // 89\n/**                                                                                                                 // 90\n * Listen on the given `event` with `fn`.                                                                           // 91\n *                                                                                                                  // 92\n * @param {String} event                                                                                            // 93\n * @param {Function} fn                                                                                             // 94\n * @return {Emitter}                                                                                                // 95\n * @api public                                                                                                      // 96\n */                                                                                                                 // 97\n                                                                                                                    // 98\nEmitter.prototype.on =                                                                                              // 99\nEmitter.prototype.addEventListener = function(event, fn){                                                           // 100\n  this._callbacks = this._callbacks || {};                                                                          // 101\n  (this._callbacks[event] = this._callbacks[event] || [])                                                           // 102\n    .push(fn);                                                                                                      // 103\n  return this;                                                                                                      // 104\n};                                                                                                                  // 105\n                                                                                                                    // 106\n/**                                                                                                                 // 107\n * Adds an `event` listener that will be invoked a single                                                           // 108\n * time then automatically removed.                                                                                 // 109\n *                                                                                                                  // 110\n * @param {String} event                                                                                            // 111\n * @param {Function} fn                                                                                             // 112\n * @return {Emitter}                                                                                                // 113\n * @api public                                                                                                      // 114\n */                                                                                                                 // 115\n                                                                                                                    // 116\nEmitter.prototype.once = function(event, fn){                                                                       // 117\n  var self = this;                                                                                                  // 118\n  this._callbacks = this._callbacks || {};                                                                          // 119\n                                                                                                                    // 120\n  function on() {                                                                                                   // 121\n    self.off(event, on);                                                                                            // 122\n    fn.apply(this, arguments);                                                                                      // 123\n  }                                                                                                                 // 124\n                                                                                                                    // 125\n  on.fn = fn;                                                                                                       // 126\n  this.on(event, on);                                                                                               // 127\n  return this;                                                                                                      // 128\n};                                                                                                                  // 129\n                                                                                                                    // 130\n/**                                                                                                                 // 131\n * Remove the given callback for `event` or all                                                                     // 132\n * registered callbacks.                                                                                            // 133\n *                                                                                                                  // 134\n * @param {String} event                                                                                            // 135\n * @param {Function} fn                                                                                             // 136\n * @return {Emitter}                                                                                                // 137\n * @api public                                                                                                      // 138\n */                                                                                                                 // 139\n                                                                                                                    // 140\nEmitter.prototype.off =                                                                                             // 141\nEmitter.prototype.removeListener =                                                                                  // 142\nEmitter.prototype.removeAllListeners =                                                                              // 143\nEmitter.prototype.removeEventListener = function(event, fn){                                                        // 144\n  this._callbacks = this._callbacks || {};                                                                          // 145\n                                                                                                                    // 146\n  // all                                                                                                            // 147\n  if (0 == arguments.length) {                                                                                      // 148\n    this._callbacks = {};                                                                                           // 149\n    return this;                                                                                                    // 150\n  }                                                                                                                 // 151\n                                                                                                                    // 152\n  // specific event                                                                                                 // 153\n  var callbacks = this._callbacks[event];                                                                           // 154\n  if (!callbacks) return this;                                                                                      // 155\n                                                                                                                    // 156\n  // remove all handlers                                                                                            // 157\n  if (1 == arguments.length) {                                                                                      // 158\n    delete this._callbacks[event];                                                                                  // 159\n    return this;                                                                                                    // 160\n  }                                                                                                                 // 161\n                                                                                                                    // 162\n  // remove specific handler                                                                                        // 163\n  var cb;                                                                                                           // 164\n  for (var i = 0; i < callbacks.length; i++) {                                                                      // 165\n    cb = callbacks[i];                                                                                              // 166\n    if (cb === fn || cb.fn === fn) {                                                                                // 167\n      callbacks.splice(i, 1);                                                                                       // 168\n      break;                                                                                                        // 169\n    }                                                                                                               // 170\n  }                                                                                                                 // 171\n  return this;                                                                                                      // 172\n};                                                                                                                  // 173\n                                                                                                                    // 174\n/**                                                                                                                 // 175\n * Emit `event` with the given args.                                                                                // 176\n *                                                                                                                  // 177\n * @param {String} event                                                                                            // 178\n * @param {Mixed} ...                                                                                               // 179\n * @return {Emitter}                                                                                                // 180\n */                                                                                                                 // 181\n                                                                                                                    // 182\nEmitter.prototype.emit = function(event){                                                                           // 183\n  this._callbacks = this._callbacks || {};                                                                          // 184\n  var args = [].slice.call(arguments, 1)                                                                            // 185\n    , callbacks = this._callbacks[event];                                                                           // 186\n                                                                                                                    // 187\n  if (callbacks) {                                                                                                  // 188\n    callbacks = callbacks.slice(0);                                                                                 // 189\n    for (var i = 0, len = callbacks.length; i < len; ++i) {                                                         // 190\n      callbacks[i].apply(this, args);                                                                               // 191\n    }                                                                                                               // 192\n  }                                                                                                                 // 193\n                                                                                                                    // 194\n  return this;                                                                                                      // 195\n};                                                                                                                  // 196\n                                                                                                                    // 197\n/**                                                                                                                 // 198\n * Return array of callbacks for `event`.                                                                           // 199\n *                                                                                                                  // 200\n * @param {String} event                                                                                            // 201\n * @return {Array}                                                                                                  // 202\n * @api public                                                                                                      // 203\n */                                                                                                                 // 204\n                                                                                                                    // 205\nEmitter.prototype.listeners = function(event){                                                                      // 206\n  this._callbacks = this._callbacks || {};                                                                          // 207\n  return this._callbacks[event] || [];                                                                              // 208\n};                                                                                                                  // 209\n                                                                                                                    // 210\n/**                                                                                                                 // 211\n * Check if this emitter has `event` handlers.                                                                      // 212\n *                                                                                                                  // 213\n * @param {String} event                                                                                            // 214\n * @return {Boolean}                                                                                                // 215\n * @api public                                                                                                      // 216\n */                                                                                                                 // 217\n                                                                                                                    // 218\nEmitter.prototype.hasListeners = function(event){                                                                   // 219\n  return !! this.listeners(event).length;                                                                           // 220\n};                                                                                                                  // 221\n                                                                                                                    // 222\n});                                                                                                                 // 223\n                                                                                                                    // 224\nrequire.register(\"dropzone\", function (exports, module) {                                                           // 225\n                                                                                                                    // 226\n                                                                                                                    // 227\n/**                                                                                                                 // 228\n * Exposing dropzone                                                                                                // 229\n */                                                                                                                 // 230\nmodule.exports = require(\"dropzone/lib/dropzone.js\");                                                               // 231\n                                                                                                                    // 232\n});                                                                                                                 // 233\n                                                                                                                    // 234\nrequire.register(\"dropzone/lib/dropzone.js\", function (exports, module) {                                           // 235\n                                                                                                                    // 236\n/*                                                                                                                  // 237\n *                                                                                                                  // 238\n * More info at [www.dropzonejs.com](http://www.dropzonejs.com)                                                     // 239\n *                                                                                                                  // 240\n * Copyright (c) 2012, Matias Meno                                                                                  // 241\n *                                                                                                                  // 242\n * Permission is hereby granted, free of charge, to any person obtaining a copy                                     // 243\n * of this software and associated documentation files (the \"Software\"), to deal                                    // 244\n * in the Software without restriction, including without limitation the rights                                     // 245\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell                                        // 246\n * copies of the Software, and to permit persons to whom the Software is                                            // 247\n * furnished to do so, subject to the following conditions:                                                         // 248\n *                                                                                                                  // 249\n * The above copyright notice and this permission notice shall be included in                                       // 250\n * all copies or substantial portions of the Software.                                                              // 251\n *                                                                                                                  // 252\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR                                       // 253\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,                                         // 254\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE                                      // 255\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER                                           // 256\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,                                    // 257\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN                                        // 258\n * THE SOFTWARE.                                                                                                    // 259\n *                                                                                                                  // 260\n */                                                                                                                 // 261\n                                                                                                                    // 262\n(function() {                                                                                                       // 263\n  var Dropzone, Em, camelize, contentLoaded, detectVerticalSquash, drawImageIOSFix, noop, without,                  // 264\n    __hasProp = {}.hasOwnProperty,                                                                                  // 265\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    __slice = [].slice;                                                                                             // 267\n                                                                                                                    // 268\n  Em = typeof Emitter !== \"undefined\" && Emitter !== null ? Emitter : require(\"component~emitter@1.1.2\");           // 269\n                                                                                                                    // 270\n  noop = function() {};                                                                                             // 271\n                                                                                                                    // 272\n  Dropzone = (function(_super) {                                                                                    // 273\n    var extend;                                                                                                     // 274\n                                                                                                                    // 275\n    __extends(Dropzone, _super);                                                                                    // 276\n                                                                                                                    // 277\n                                                                                                                    // 278\n    /*                                                                                                              // 279\n    This is a list of all available events you can register on a dropzone object.                                   // 280\n                                                                                                                    // 281\n    You can register an event handler like this:                                                                    // 282\n                                                                                                                    // 283\n        dropzone.on(\"dragEnter\", function() { });                                                                   // 284\n     */                                                                                                             // 285\n                                                                                                                    // 286\n    Dropzone.prototype.events = [\"drop\", \"dragstart\", \"dragend\", \"dragenter\", \"dragover\", \"dragleave\", \"addedfile\", \"removedfile\", \"thumbnail\", \"error\", \"errormultiple\", \"processing\", \"processingmultiple\", \"uploadprogress\", \"totaluploadprogress\", \"sending\", \"sendingmultiple\", \"success\", \"successmultiple\", \"canceled\", \"canceledmultiple\", \"complete\", \"completemultiple\", \"reset\", \"maxfilesexceeded\", \"maxfilesreached\"];\n                                                                                                                    // 288\n    Dropzone.prototype.defaultOptions = {                                                                           // 289\n      url: null,                                                                                                    // 290\n      method: \"post\",                                                                                               // 291\n      withCredentials: false,                                                                                       // 292\n      parallelUploads: 2,                                                                                           // 293\n      uploadMultiple: false,                                                                                        // 294\n      maxFilesize: 256,                                                                                             // 295\n      paramName: \"file\",                                                                                            // 296\n      createImageThumbnails: true,                                                                                  // 297\n      maxThumbnailFilesize: 10,                                                                                     // 298\n      thumbnailWidth: 100,                                                                                          // 299\n      thumbnailHeight: 100,                                                                                         // 300\n      maxFiles: null,                                                                                               // 301\n      params: {},                                                                                                   // 302\n      clickable: true,                                                                                              // 303\n      ignoreHiddenFiles: true,                                                                                      // 304\n      acceptedFiles: null,                                                                                          // 305\n      acceptedMimeTypes: null,                                                                                      // 306\n      autoProcessQueue: true,                                                                                       // 307\n      autoQueue: true,                                                                                              // 308\n      addRemoveLinks: false,                                                                                        // 309\n      previewsContainer: null,                                                                                      // 310\n      dictDefaultMessage: \"Drop files here to upload\",                                                              // 311\n      dictFallbackMessage: \"Your browser does not support drag'n'drop file uploads.\",                               // 312\n      dictFallbackText: \"Please use the fallback form below to upload your files like in the olden days.\",          // 313\n      dictFileTooBig: \"File is too big ({{filesize}}MiB). Max filesize: {{maxFilesize}}MiB.\",                       // 314\n      dictInvalidFileType: \"You can't upload files of this type.\",                                                  // 315\n      dictResponseError: \"Server responded with {{statusCode}} code.\",                                              // 316\n      dictCancelUpload: \"Cancel upload\",                                                                            // 317\n      dictCancelUploadConfirmation: \"Are you sure you want to cancel this upload?\",                                 // 318\n      dictRemoveFile: \"Remove file\",                                                                                // 319\n      dictRemoveFileConfirmation: null,                                                                             // 320\n      dictMaxFilesExceeded: \"You can not upload any more files.\",                                                   // 321\n      accept: function(file, done) {                                                                                // 322\n        return done();                                                                                              // 323\n      },                                                                                                            // 324\n      init: function() {                                                                                            // 325\n        return noop;                                                                                                // 326\n      },                                                                                                            // 327\n      forceFallback: false,                                                                                         // 328\n      fallback: function() {                                                                                        // 329\n        var child, messageElement, span, _i, _len, _ref;                                                            // 330\n        this.element.className = \"\" + this.element.className + \" dz-browser-not-supported\";                         // 331\n        _ref = this.element.getElementsByTagName(\"div\");                                                            // 332\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {                                                         // 333\n          child = _ref[_i];                                                                                         // 334\n          if (/(^| )dz-message($| )/.test(child.className)) {                                                       // 335\n            messageElement = child;                                                                                 // 336\n            child.className = \"dz-message\";                                                                         // 337\n            continue;                                                                                               // 338\n          }                                                                                                         // 339\n        }                                                                                                           // 340\n        if (!messageElement) {                                                                                      // 341\n          messageElement = Dropzone.createElement(\"<div class=\\\"dz-message\\\"><span></span></div>\");                 // 342\n          this.element.appendChild(messageElement);                                                                 // 343\n        }                                                                                                           // 344\n        span = messageElement.getElementsByTagName(\"span\")[0];                                                      // 345\n        if (span) {                                                                                                 // 346\n          span.textContent = this.options.dictFallbackMessage;                                                      // 347\n        }                                                                                                           // 348\n        return this.element.appendChild(this.getFallbackForm());                                                    // 349\n      },                                                                                                            // 350\n      resize: function(file) {                                                                                      // 351\n        var info, srcRatio, trgRatio;                                                                               // 352\n        info = {                                                                                                    // 353\n          srcX: 0,                                                                                                  // 354\n          srcY: 0,                                                                                                  // 355\n          srcWidth: file.width,                                                                                     // 356\n          srcHeight: file.height                                                                                    // 357\n        };                                                                                                          // 358\n        srcRatio = file.width / file.height;                                                                        // 359\n        info.optWidth = this.options.thumbnailWidth;                                                                // 360\n        info.optHeight = this.options.thumbnailHeight;                                                              // 361\n        if ((info.optWidth == null) && (info.optHeight == null)) {                                                  // 362\n          info.optWidth = info.srcWidth;                                                                            // 363\n          info.optHeight = info.srcHeight;                                                                          // 364\n        } else if (info.optWidth == null) {                                                                         // 365\n          info.optWidth = srcRatio * info.optHeight;                                                                // 366\n        } else if (info.optHeight == null) {                                                                        // 367\n          info.optHeight = (1 / srcRatio) * info.optWidth;                                                          // 368\n        }                                                                                                           // 369\n        trgRatio = info.optWidth / info.optHeight;                                                                  // 370\n        if (file.height < info.optHeight || file.width < info.optWidth) {                                           // 371\n          info.trgHeight = info.srcHeight;                                                                          // 372\n          info.trgWidth = info.srcWidth;                                                                            // 373\n        } else {                                                                                                    // 374\n          if (srcRatio > trgRatio) {                                                                                // 375\n            info.srcHeight = file.height;                                                                           // 376\n            info.srcWidth = info.srcHeight * trgRatio;                                                              // 377\n          } else {                                                                                                  // 378\n            info.srcWidth = file.width;                                                                             // 379\n            info.srcHeight = info.srcWidth / trgRatio;                                                              // 380\n          }                                                                                                         // 381\n        }                                                                                                           // 382\n        info.srcX = (file.width - info.srcWidth) / 2;                                                               // 383\n        info.srcY = (file.height - info.srcHeight) / 2;                                                             // 384\n        return info;                                                                                                // 385\n      },                                                                                                            // 386\n                                                                                                                    // 387\n      /*                                                                                                            // 388\n      Those functions register themselves to the events on init and handle all                                      // 389\n      the user interface specific stuff. Overwriting them won't break the upload                                    // 390\n      but can break the way it's displayed.                                                                         // 391\n      You can overwrite them if you don't like the default behavior. If you just                                    // 392\n      want to add an additional event handler, register it on the dropzone object                                   // 393\n      and don't overwrite those options.                                                                            // 394\n       */                                                                                                           // 395\n      drop: function(e) {                                                                                           // 396\n        return this.element.classList.remove(\"dz-drag-hover\");                                                      // 397\n      },                                                                                                            // 398\n      dragstart: noop,                                                                                              // 399\n      dragend: function(e) {                                                                                        // 400\n        return this.element.classList.remove(\"dz-drag-hover\");                                                      // 401\n      },                                                                                                            // 402\n      dragenter: function(e) {                                                                                      // 403\n        return this.element.classList.add(\"dz-drag-hover\");                                                         // 404\n      },                                                                                                            // 405\n      dragover: function(e) {                                                                                       // 406\n        return this.element.classList.add(\"dz-drag-hover\");                                                         // 407\n      },                                                                                                            // 408\n      dragleave: function(e) {                                                                                      // 409\n        return this.element.classList.remove(\"dz-drag-hover\");                                                      // 410\n      },                                                                                                            // 411\n      paste: noop,                                                                                                  // 412\n      reset: function() {                                                                                           // 413\n        return this.element.classList.remove(\"dz-started\");                                                         // 414\n      },                                                                                                            // 415\n      addedfile: function(file) {                                                                                   // 416\n        var node, removeFileEvent, removeLink, _i, _j, _k, _len, _len1, _len2, _ref, _ref1, _ref2, _results;        // 417\n        if (this.element === this.previewsContainer) {                                                              // 418\n          this.element.classList.add(\"dz-started\");                                                                 // 419\n        }                                                                                                           // 420\n        if (this.previewsContainer) {                                                                               // 421\n          file.previewElement = Dropzone.createElement(this.options.previewTemplate.trim());                        // 422\n          file.previewTemplate = file.previewElement;                                                               // 423\n          this.previewsContainer.appendChild(file.previewElement);                                                  // 424\n          _ref = file.previewElement.querySelectorAll(\"[data-dz-name]\");                                            // 425\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {                                                       // 426\n            node = _ref[_i];                                                                                        // 427\n            node.textContent = file.name;                                                                           // 428\n          }                                                                                                         // 429\n          _ref1 = file.previewElement.querySelectorAll(\"[data-dz-size]\");                                           // 430\n          for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {                                                    // 431\n            node = _ref1[_j];                                                                                       // 432\n            node.innerHTML = this.filesize(file.size);                                                              // 433\n          }                                                                                                         // 434\n          if (this.options.addRemoveLinks) {                                                                        // 435\n            file._removeLink = Dropzone.createElement(\"<a class=\\\"dz-remove\\\" href=\\\"javascript:undefined;\\\" data-dz-remove>\" + this.options.dictRemoveFile + \"</a>\");\n            file.previewElement.appendChild(file._removeLink);                                                      // 437\n          }                                                                                                         // 438\n          removeFileEvent = (function(_this) {                                                                      // 439\n            return function(e) {                                                                                    // 440\n              e.preventDefault();                                                                                   // 441\n              e.stopPropagation();                                                                                  // 442\n              if (file.status === Dropzone.UPLOADING) {                                                             // 443\n                return Dropzone.confirm(_this.options.dictCancelUploadConfirmation, function() {                    // 444\n                  return _this.removeFile(file);                                                                    // 445\n                });                                                                                                 // 446\n              } else {                                                                                              // 447\n                if (_this.options.dictRemoveFileConfirmation) {                                                     // 448\n                  return Dropzone.confirm(_this.options.dictRemoveFileConfirmation, function() {                    // 449\n                    return _this.removeFile(file);                                                                  // 450\n                  });                                                                                               // 451\n                } else {                                                                                            // 452\n                  return _this.removeFile(file);                                                                    // 453\n                }                                                                                                   // 454\n              }                                                                                                     // 455\n            };                                                                                                      // 456\n          })(this);                                                                                                 // 457\n          _ref2 = file.previewElement.querySelectorAll(\"[data-dz-remove]\");                                         // 458\n          _results = [];                                                                                            // 459\n          for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {                                                    // 460\n            removeLink = _ref2[_k];                                                                                 // 461\n            _results.push(removeLink.addEventListener(\"click\", removeFileEvent));                                   // 462\n          }                                                                                                         // 463\n          return _results;                                                                                          // 464\n        }                                                                                                           // 465\n      },                                                                                                            // 466\n      removedfile: function(file) {                                                                                 // 467\n        var _ref;                                                                                                   // 468\n        if (file.previewElement) {                                                                                  // 469\n          if ((_ref = file.previewElement) != null) {                                                               // 470\n            _ref.parentNode.removeChild(file.previewElement);                                                       // 471\n          }                                                                                                         // 472\n        }                                                                                                           // 473\n        return this._updateMaxFilesReachedClass();                                                                  // 474\n      },                                                                                                            // 475\n      thumbnail: function(file, dataUrl) {                                                                          // 476\n        var thumbnailElement, _i, _len, _ref, _results;                                                             // 477\n        if (file.previewElement) {                                                                                  // 478\n          file.previewElement.classList.remove(\"dz-file-preview\");                                                  // 479\n          file.previewElement.classList.add(\"dz-image-preview\");                                                    // 480\n          _ref = file.previewElement.querySelectorAll(\"[data-dz-thumbnail]\");                                       // 481\n          _results = [];                                                                                            // 482\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {                                                       // 483\n            thumbnailElement = _ref[_i];                                                                            // 484\n            thumbnailElement.alt = file.name;                                                                       // 485\n            _results.push(thumbnailElement.src = dataUrl);                                                          // 486\n          }                                                                                                         // 487\n          return _results;                                                                                          // 488\n        }                                                                                                           // 489\n      },                                                                                                            // 490\n      error: function(file, message) {                                                                              // 491\n        var node, _i, _len, _ref, _results;                                                                         // 492\n        if (file.previewElement) {                                                                                  // 493\n          file.previewElement.classList.add(\"dz-error\");                                                            // 494\n          if (typeof message !== \"String\" && message.error) {                                                       // 495\n            message = message.error;                                                                                // 496\n          }                                                                                                         // 497\n          _ref = file.previewElement.querySelectorAll(\"[data-dz-errormessage]\");                                    // 498\n          _results = [];                                                                                            // 499\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {                                                       // 500\n            node = _ref[_i];                                                                                        // 501\n            _results.push(node.textContent = message);                                                              // 502\n          }                                                                                                         // 503\n          return _results;                                                                                          // 504\n        }                                                                                                           // 505\n      },                                                                                                            // 506\n      errormultiple: noop,                                                                                          // 507\n      processing: function(file) {                                                                                  // 508\n        if (file.previewElement) {                                                                                  // 509\n          file.previewElement.classList.add(\"dz-processing\");                                                       // 510\n          if (file._removeLink) {                                                                                   // 511\n            return file._removeLink.textContent = this.options.dictCancelUpload;                                    // 512\n          }                                                                                                         // 513\n        }                                                                                                           // 514\n      },                                                                                                            // 515\n      processingmultiple: noop,                                                                                     // 516\n      uploadprogress: function(file, progress, bytesSent) {                                                         // 517\n        var node, _i, _len, _ref, _results;                                                                         // 518\n        if (file.previewElement) {                                                                                  // 519\n          _ref = file.previewElement.querySelectorAll(\"[data-dz-uploadprogress]\");                                  // 520\n          _results = [];                                                                                            // 521\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {                                                       // 522\n            node = _ref[_i];                                                                                        // 523\n            _results.push(node.style.width = \"\" + progress + \"%\");                                                  // 524\n          }                                                                                                         // 525\n          return _results;                                                                                          // 526\n        }                                                                                                           // 527\n      },                                                                                                            // 528\n      totaluploadprogress: noop,                                                                                    // 529\n      sending: noop,                                                                                                // 530\n      sendingmultiple: noop,                                                                                        // 531\n      success: function(file) {                                                                                     // 532\n        if (file.previewElement) {                                                                                  // 533\n          return file.previewElement.classList.add(\"dz-success\");                                                   // 534\n        }                                                                                                           // 535\n      },                                                                                                            // 536\n      successmultiple: noop,                                                                                        // 537\n      canceled: function(file) {                                                                                    // 538\n        return this.emit(\"error\", file, \"Upload canceled.\");                                                        // 539\n      },                                                                                                            // 540\n      canceledmultiple: noop,                                                                                       // 541\n      complete: function(file) {                                                                                    // 542\n        if (file._removeLink) {                                                                                     // 543\n          return file._removeLink.textContent = this.options.dictRemoveFile;                                        // 544\n        }                                                                                                           // 545\n      },                                                                                                            // 546\n      completemultiple: noop,                                                                                       // 547\n      maxfilesexceeded: noop,                                                                                       // 548\n      maxfilesreached: noop,                                                                                        // 549\n      previewTemplate: \"<div class=\\\"dz-preview dz-file-preview\\\">\\n  <div class=\\\"dz-details\\\">\\n    <div class=\\\"dz-filename\\\"><span data-dz-name></span></div>\\n    <div class=\\\"dz-size\\\" data-dz-size></div>\\n    <img data-dz-thumbnail />\\n  </div>\\n  <div class=\\\"dz-progress\\\"><span class=\\\"dz-upload\\\" data-dz-uploadprogress></span></div>\\n  <div class=\\\"dz-success-mark\\\"><span>✔</span></div>\\n  <div class=\\\"dz-error-mark\\\"><span>✘</span></div>\\n  <div class=\\\"dz-error-message\\\"><span data-dz-errormessage></span></div>\\n</div>\"\n    };                                                                                                              // 551\n                                                                                                                    // 552\n    extend = function() {                                                                                           // 553\n      var key, object, objects, target, val, _i, _len;                                                              // 554\n      target = arguments[0], objects = 2 <= arguments.length ? __slice.call(arguments, 1) : [];                     // 555\n      for (_i = 0, _len = objects.length; _i < _len; _i++) {                                                        // 556\n        object = objects[_i];                                                                                       // 557\n        for (key in object) {                                                                                       // 558\n          val = object[key];                                                                                        // 559\n          target[key] = val;                                                                                        // 560\n        }                                                                                                           // 561\n      }                                                                                                             // 562\n      return target;                                                                                                // 563\n    };                                                                                                              // 564\n                                                                                                                    // 565\n    function Dropzone(element, options) {                                                                           // 566\n      var elementOptions, fallback, _ref;                                                                           // 567\n      this.element = element;                                                                                       // 568\n      this.version = Dropzone.version;                                                                              // 569\n      this.defaultOptions.previewTemplate = this.defaultOptions.previewTemplate.replace(/\\n*/g, \"\");                // 570\n      this.clickableElements = [];                                                                                  // 571\n      this.listeners = [];                                                                                          // 572\n      this.files = [];                                                                                              // 573\n      if (typeof this.element === \"string\") {                                                                       // 574\n        this.element = document.querySelector(this.element);                                                        // 575\n      }                                                                                                             // 576\n      if (!(this.element && (this.element.nodeType != null))) {                                                     // 577\n        throw new Error(\"Invalid dropzone element.\");                                                               // 578\n      }                                                                                                             // 579\n      if (this.element.dropzone) {                                                                                  // 580\n        throw new Error(\"Dropzone already attached.\");                                                              // 581\n      }                                                                                                             // 582\n      Dropzone.instances.push(this);                                                                                // 583\n      this.element.dropzone = this;                                                                                 // 584\n      elementOptions = (_ref = Dropzone.optionsForElement(this.element)) != null ? _ref : {};                       // 585\n      this.options = extend({}, this.defaultOptions, elementOptions, options != null ? options : {});               // 586\n      if (this.options.forceFallback || !Dropzone.isBrowserSupported()) {                                           // 587\n        return this.options.fallback.call(this);                                                                    // 588\n      }                                                                                                             // 589\n      if (this.options.url == null) {                                                                               // 590\n        this.options.url = this.element.getAttribute(\"action\");                                                     // 591\n      }                                                                                                             // 592\n      if (!this.options.url) {                                                                                      // 593\n        throw new Error(\"No URL provided.\");                                                                        // 594\n      }                                                                                                             // 595\n      if (this.options.acceptedFiles && this.options.acceptedMimeTypes) {                                           // 596\n        throw new Error(\"You can't provide both 'acceptedFiles' and 'acceptedMimeTypes'. 'acceptedMimeTypes' is deprecated.\");\n      }                                                                                                             // 598\n      if (this.options.acceptedMimeTypes) {                                                                         // 599\n        this.options.acceptedFiles = this.options.acceptedMimeTypes;                                                // 600\n        delete this.options.acceptedMimeTypes;                                                                      // 601\n      }                                                                                                             // 602\n      this.options.method = this.options.method.toUpperCase();                                                      // 603\n      if ((fallback = this.getExistingFallback()) && fallback.parentNode) {                                         // 604\n        fallback.parentNode.removeChild(fallback);                                                                  // 605\n      }                                                                                                             // 606\n      if (this.options.previewsContainer !== false) {                                                               // 607\n        if (this.options.previewsContainer) {                                                                       // 608\n          this.previewsContainer = Dropzone.getElement(this.options.previewsContainer, \"previewsContainer\");        // 609\n        } else {                                                                                                    // 610\n          this.previewsContainer = this.element;                                                                    // 611\n        }                                                                                                           // 612\n      }                                                                                                             // 613\n      if (this.options.clickable) {                                                                                 // 614\n        if (this.options.clickable === true) {                                                                      // 615\n          this.clickableElements = [this.element];                                                                  // 616\n        } else {                                                                                                    // 617\n          this.clickableElements = Dropzone.getElements(this.options.clickable, \"clickable\");                       // 618\n        }                                                                                                           // 619\n      }                                                                                                             // 620\n      this.init();                                                                                                  // 621\n    }                                                                                                               // 622\n                                                                                                                    // 623\n    Dropzone.prototype.getAcceptedFiles = function() {                                                              // 624\n      var file, _i, _len, _ref, _results;                                                                           // 625\n      _ref = this.files;                                                                                            // 626\n      _results = [];                                                                                                // 627\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {                                                           // 628\n        file = _ref[_i];                                                                                            // 629\n        if (file.accepted) {                                                                                        // 630\n          _results.push(file);                                                                                      // 631\n        }                                                                                                           // 632\n      }                                                                                                             // 633\n      return _results;                                                                                              // 634\n    };                                                                                                              // 635\n                                                                                                                    // 636\n    Dropzone.prototype.getRejectedFiles = function() {                                                              // 637\n      var file, _i, _len, _ref, _results;                                                                           // 638\n      _ref = this.files;                                                                                            // 639\n      _results = [];                                                                                                // 640\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {                                                           // 641\n        file = _ref[_i];                                                                                            // 642\n        if (!file.accepted) {                                                                                       // 643\n          _results.push(file);                                                                                      // 644\n        }                                                                                                           // 645\n      }                                                                                                             // 646\n      return _results;                                                                                              // 647\n    };                                                                                                              // 648\n                                                                                                                    // 649\n    Dropzone.prototype.getFilesWithStatus = function(status) {                                                      // 650\n      var file, _i, _len, _ref, _results;                                                                           // 651\n      _ref = this.files;                                                                                            // 652\n      _results = [];                                                                                                // 653\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {                                                           // 654\n        file = _ref[_i];                                                                                            // 655\n        if (file.status === status) {                                                                               // 656\n          _results.push(file);                                                                                      // 657\n        }                                                                                                           // 658\n      }                                                                                                             // 659\n      return _results;                                                                                              // 660\n    };                                                                                                              // 661\n                                                                                                                    // 662\n    Dropzone.prototype.getQueuedFiles = function() {                                                                // 663\n      return this.getFilesWithStatus(Dropzone.QUEUED);                                                              // 664\n    };                                                                                                              // 665\n                                                                                                                    // 666\n    Dropzone.prototype.getUploadingFiles = function() {                                                             // 667\n      return this.getFilesWithStatus(Dropzone.UPLOADING);                                                           // 668\n    };                                                                                                              // 669\n                                                                                                                    // 670\n    Dropzone.prototype.getActiveFiles = function() {                                                                // 671\n      var file, _i, _len, _ref, _results;                                                                           // 672\n      _ref = this.files;                                                                                            // 673\n      _results = [];                                                                                                // 674\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {                                                           // 675\n        file = _ref[_i];                                                                                            // 676\n        if (file.status === Dropzone.UPLOADING || file.status === Dropzone.QUEUED) {                                // 677\n          _results.push(file);                                                                                      // 678\n        }                                                                                                           // 679\n      }                                                                                                             // 680\n      return _results;                                                                                              // 681\n    };                                                                                                              // 682\n                                                                                                                    // 683\n    Dropzone.prototype.init = function() {                                                                          // 684\n      var eventName, noPropagation, setupHiddenFileInput, _i, _len, _ref, _ref1;                                    // 685\n      if (this.element.tagName === \"form\") {                                                                        // 686\n        this.element.setAttribute(\"enctype\", \"multipart/form-data\");                                                // 687\n      }                                                                                                             // 688\n      if (this.element.classList.contains(\"dropzone\") && !this.element.querySelector(\".dz-message\")) {              // 689\n        this.element.appendChild(Dropzone.createElement(\"<div class=\\\"dz-default dz-message\\\"><span>\" + this.options.dictDefaultMessage + \"</span></div>\"));\n      }                                                                                                             // 691\n      if (this.clickableElements.length) {                                                                          // 692\n        setupHiddenFileInput = (function(_this) {                                                                   // 693\n          return function() {                                                                                       // 694\n            if (_this.hiddenFileInput) {                                                                            // 695\n              document.body.removeChild(_this.hiddenFileInput);                                                     // 696\n            }                                                                                                       // 697\n            _this.hiddenFileInput = document.createElement(\"input\");                                                // 698\n            _this.hiddenFileInput.setAttribute(\"type\", \"file\");                                                     // 699\n            if ((_this.options.maxFiles == null) || _this.options.maxFiles > 1) {                                   // 700\n              _this.hiddenFileInput.setAttribute(\"multiple\", \"multiple\");                                           // 701\n            }                                                                                                       // 702\n            _this.hiddenFileInput.className = \"dz-hidden-input\";                                                    // 703\n            if (_this.options.acceptedFiles != null) {                                                              // 704\n              _this.hiddenFileInput.setAttribute(\"accept\", _this.options.acceptedFiles);                            // 705\n            }                                                                                                       // 706\n            _this.hiddenFileInput.style.visibility = \"hidden\";                                                      // 707\n            _this.hiddenFileInput.style.position = \"absolute\";                                                      // 708\n            _this.hiddenFileInput.style.top = \"0\";                                                                  // 709\n            _this.hiddenFileInput.style.left = \"0\";                                                                 // 710\n            _this.hiddenFileInput.style.height = \"0\";                                                               // 711\n            _this.hiddenFileInput.style.width = \"0\";                                                                // 712\n            document.body.appendChild(_this.hiddenFileInput);                                                       // 713\n            return _this.hiddenFileInput.addEventListener(\"change\", function() {                                    // 714\n              var file, files, _i, _len;                                                                            // 715\n              files = _this.hiddenFileInput.files;                                                                  // 716\n              if (files.length) {                                                                                   // 717\n                for (_i = 0, _len = files.length; _i < _len; _i++) {                                                // 718\n                  file = files[_i];                                                                                 // 719\n                  _this.addFile(file);                                                                              // 720\n                }                                                                                                   // 721\n              }                                                                                                     // 722\n              return setupHiddenFileInput();                                                                        // 723\n            });                                                                                                     // 724\n          };                                                                                                        // 725\n        })(this);                                                                                                   // 726\n        setupHiddenFileInput();                                                                                     // 727\n      }                                                                                                             // 728\n      this.URL = (_ref = window.URL) != null ? _ref : window.webkitURL;                                             // 729\n      _ref1 = this.events;                                                                                          // 730\n      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {                                                          // 731\n        eventName = _ref1[_i];                                                                                      // 732\n        this.on(eventName, this.options[eventName]);                                                                // 733\n      }                                                                                                             // 734\n      this.on(\"uploadprogress\", (function(_this) {                                                                  // 735\n        return function() {                                                                                         // 736\n          return _this.updateTotalUploadProgress();                                                                 // 737\n        };                                                                                                          // 738\n      })(this));                                                                                                    // 739\n      this.on(\"removedfile\", (function(_this) {                                                                     // 740\n        return function() {                                                                                         // 741\n          return _this.updateTotalUploadProgress();                                                                 // 742\n        };                                                                                                          // 743\n      })(this));                                                                                                    // 744\n      this.on(\"canceled\", (function(_this) {                                                                        // 745\n        return function(file) {                                                                                     // 746\n          return _this.emit(\"complete\", file);                                                                      // 747\n        };                                                                                                          // 748\n      })(this));                                                                                                    // 749\n      this.on(\"complete\", (function(_this) {                                                                        // 750\n        return function(file) {                                                                                     // 751\n          if (_this.getUploadingFiles().length === 0 && _this.getQueuedFiles().length === 0) {                      // 752\n            return setTimeout((function() {                                                                         // 753\n              return _this.emit(\"queuecomplete\");                                                                   // 754\n            }), 0);                                                                                                 // 755\n          }                                                                                                         // 756\n        };                                                                                                          // 757\n      })(this));                                                                                                    // 758\n      noPropagation = function(e) {                                                                                 // 759\n        e.stopPropagation();                                                                                        // 760\n        if (e.preventDefault) {                                                                                     // 761\n          return e.preventDefault();                                                                                // 762\n        } else {                                                                                                    // 763\n          return e.returnValue = false;                                                                             // 764\n        }                                                                                                           // 765\n      };                                                                                                            // 766\n      this.listeners = [                                                                                            // 767\n        {                                                                                                           // 768\n          element: this.element,                                                                                    // 769\n          events: {                                                                                                 // 770\n            \"dragstart\": (function(_this) {                                                                         // 771\n              return function(e) {                                                                                  // 772\n                return _this.emit(\"dragstart\", e);                                                                  // 773\n              };                                                                                                    // 774\n            })(this),                                                                                               // 775\n            \"dragenter\": (function(_this) {                                                                         // 776\n              return function(e) {                                                                                  // 777\n                noPropagation(e);                                                                                   // 778\n                return _this.emit(\"dragenter\", e);                                                                  // 779\n              };                                                                                                    // 780\n            })(this),                                                                                               // 781\n            \"dragover\": (function(_this) {                                                                          // 782\n              return function(e) {                                                                                  // 783\n                var efct;                                                                                           // 784\n                try {                                                                                               // 785\n                  efct = e.dataTransfer.effectAllowed;                                                              // 786\n                } catch (_error) {}                                                                                 // 787\n                e.dataTransfer.dropEffect = 'move' === efct || 'linkMove' === efct ? 'move' : 'copy';               // 788\n                noPropagation(e);                                                                                   // 789\n                return _this.emit(\"dragover\", e);                                                                   // 790\n              };                                                                                                    // 791\n            })(this),                                                                                               // 792\n            \"dragleave\": (function(_this) {                                                                         // 793\n              return function(e) {                                                                                  // 794\n                return _this.emit(\"dragleave\", e);                                                                  // 795\n              };                                                                                                    // 796\n            })(this),                                                                                               // 797\n            \"drop\": (function(_this) {                                                                              // 798\n              return function(e) {                                                                                  // 799\n                noPropagation(e);                                                                                   // 800\n                return _this.drop(e);                                                                               // 801\n              };                                                                                                    // 802\n            })(this),                                                                                               // 803\n            \"dragend\": (function(_this) {                                                                           // 804\n              return function(e) {                                                                                  // 805\n                return _this.emit(\"dragend\", e);                                                                    // 806\n              };                                                                                                    // 807\n            })(this)                                                                                                // 808\n          }                                                                                                         // 809\n        }                                                                                                           // 810\n      ];                                                                                                            // 811\n      this.clickableElements.forEach((function(_this) {                                                             // 812\n        return function(clickableElement) {                                                                         // 813\n          return _this.listeners.push({                                                                             // 814\n            element: clickableElement,                                                                              // 815\n            events: {                                                                                               // 816\n              \"click\": function(evt) {                                                                              // 817\n                if ((clickableElement !== _this.element) || (evt.target === _this.element || Dropzone.elementInside(evt.target, _this.element.querySelector(\".dz-message\")))) {\n                  return _this.hiddenFileInput.click();                                                             // 819\n                }                                                                                                   // 820\n              }                                                                                                     // 821\n            }                                                                                                       // 822\n          });                                                                                                       // 823\n        };                                                                                                          // 824\n      })(this));                                                                                                    // 825\n      this.enable();                                                                                                // 826\n      return this.options.init.call(this);                                                                          // 827\n    };                                                                                                              // 828\n                                                                                                                    // 829\n    Dropzone.prototype.destroy = function() {                                                                       // 830\n      var _ref;                                                                                                     // 831\n      this.disable();                                                                                               // 832\n      this.removeAllFiles(true);                                                                                    // 833\n      if ((_ref = this.hiddenFileInput) != null ? _ref.parentNode : void 0) {                                       // 834\n        this.hiddenFileInput.parentNode.removeChild(this.hiddenFileInput);                                          // 835\n        this.hiddenFileInput = null;                                                                                // 836\n      }                                                                                                             // 837\n      delete this.element.dropzone;                                                                                 // 838\n      return Dropzone.instances.splice(Dropzone.instances.indexOf(this), 1);                                        // 839\n    };                                                                                                              // 840\n                                                                                                                    // 841\n    Dropzone.prototype.updateTotalUploadProgress = function() {                                                     // 842\n      var activeFiles, file, totalBytes, totalBytesSent, totalUploadProgress, _i, _len, _ref;                       // 843\n      totalBytesSent = 0;                                                                                           // 844\n      totalBytes = 0;                                                                                               // 845\n      activeFiles = this.getActiveFiles();                                                                          // 846\n      if (activeFiles.length) {                                                                                     // 847\n        _ref = this.getActiveFiles();                                                                               // 848\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {                                                         // 849\n          file = _ref[_i];                                                                                          // 850\n          totalBytesSent += file.upload.bytesSent;                                                                  // 851\n          totalBytes += file.upload.total;                                                                          // 852\n        }                                                                                                           // 853\n        totalUploadProgress = 100 * totalBytesSent / totalBytes;                                                    // 854\n      } else {                                                                                                      // 855\n        totalUploadProgress = 100;                                                                                  // 856\n      }                                                                                                             // 857\n      return this.emit(\"totaluploadprogress\", totalUploadProgress, totalBytes, totalBytesSent);                     // 858\n    };                                                                                                              // 859\n                                                                                                                    // 860\n    Dropzone.prototype._getParamName = function(n) {                                                                // 861\n      if (typeof this.options.paramName === \"function\") {                                                           // 862\n        return this.options.paramName(n);                                                                           // 863\n      } else {                                                                                                      // 864\n        return \"\" + this.options.paramName + (this.options.uploadMultiple ? \"[\" + n + \"]\" : \"\");                    // 865\n      }                                                                                                             // 866\n    };                                                                                                              // 867\n                                                                                                                    // 868\n    Dropzone.prototype.getFallbackForm = function() {                                                               // 869\n      var existingFallback, fields, fieldsString, form;                                                             // 870\n      if (existingFallback = this.getExistingFallback()) {                                                          // 871\n        return existingFallback;                                                                                    // 872\n      }                                                                                                             // 873\n      fieldsString = \"<div class=\\\"dz-fallback\\\">\";                                                                 // 874\n      if (this.options.dictFallbackText) {                                                                          // 875\n        fieldsString += \"<p>\" + this.options.dictFallbackText + \"</p>\";                                             // 876\n      }                                                                                                             // 877\n      fieldsString += \"<input type=\\\"file\\\" name=\\\"\" + (this._getParamName(0)) + \"\\\" \" + (this.options.uploadMultiple ? 'multiple=\"multiple\"' : void 0) + \" /><input type=\\\"submit\\\" value=\\\"Upload!\\\"></div>\";\n      fields = Dropzone.createElement(fieldsString);                                                                // 879\n      if (this.element.tagName !== \"FORM\") {                                                                        // 880\n        form = Dropzone.createElement(\"<form action=\\\"\" + this.options.url + \"\\\" enctype=\\\"multipart/form-data\\\" method=\\\"\" + this.options.method + \"\\\"></form>\");\n        form.appendChild(fields);                                                                                   // 882\n      } else {                                                                                                      // 883\n        this.element.setAttribute(\"enctype\", \"multipart/form-data\");                                                // 884\n        this.element.setAttribute(\"method\", this.options.method);                                                   // 885\n      }                                                                                                             // 886\n      return form != null ? form : fields;                                                                          // 887\n    };                                                                                                              // 888\n                                                                                                                    // 889\n    Dropzone.prototype.getExistingFallback = function() {                                                           // 890\n      var fallback, getFallback, tagName, _i, _len, _ref;                                                           // 891\n      getFallback = function(elements) {                                                                            // 892\n        var el, _i, _len;                                                                                           // 893\n        for (_i = 0, _len = elements.length; _i < _len; _i++) {                                                     // 894\n          el = elements[_i];                                                                                        // 895\n          if (/(^| )fallback($| )/.test(el.className)) {                                                            // 896\n            return el;                                                                                              // 897\n          }                                                                                                         // 898\n        }                                                                                                           // 899\n      };                                                                                                            // 900\n      _ref = [\"div\", \"form\"];                                                                                       // 901\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {                                                           // 902\n        tagName = _ref[_i];                                                                                         // 903\n        if (fallback = getFallback(this.element.getElementsByTagName(tagName))) {                                   // 904\n          return fallback;                                                                                          // 905\n        }                                                                                                           // 906\n      }                                                                                                             // 907\n    };                                                                                                              // 908\n                                                                                                                    // 909\n    Dropzone.prototype.setupEventListeners = function() {                                                           // 910\n      var elementListeners, event, listener, _i, _len, _ref, _results;                                              // 911\n      _ref = this.listeners;                                                                                        // 912\n      _results = [];                                                                                                // 913\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {                                                           // 914\n        elementListeners = _ref[_i];                                                                                // 915\n        _results.push((function() {                                                                                 // 916\n          var _ref1, _results1;                                                                                     // 917\n          _ref1 = elementListeners.events;                                                                          // 918\n          _results1 = [];                                                                                           // 919\n          for (event in _ref1) {                                                                                    // 920\n            listener = _ref1[event];                                                                                // 921\n            _results1.push(elementListeners.element.addEventListener(event, listener, false));                      // 922\n          }                                                                                                         // 923\n          return _results1;                                                                                         // 924\n        })());                                                                                                      // 925\n      }                                                                                                             // 926\n      return _results;                                                                                              // 927\n    };                                                                                                              // 928\n                                                                                                                    // 929\n    Dropzone.prototype.removeEventListeners = function() {                                                          // 930\n      var elementListeners, event, listener, _i, _len, _ref, _results;                                              // 931\n      _ref = this.listeners;                                                                                        // 932\n      _results = [];                                                                                                // 933\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {                                                           // 934\n        elementListeners = _ref[_i];                                                                                // 935\n        _results.push((function() {                                                                                 // 936\n          var _ref1, _results1;                                                                                     // 937\n          _ref1 = elementListeners.events;                                                                          // 938\n          _results1 = [];                                                                                           // 939\n          for (event in _ref1) {                                                                                    // 940\n            listener = _ref1[event];                                                                                // 941\n            _results1.push(elementListeners.element.removeEventListener(event, listener, false));                   // 942\n          }                                                                                                         // 943\n          return _results1;                                                                                         // 944\n        })());                                                                                                      // 945\n      }                                                                                                             // 946\n      return _results;                                                                                              // 947\n    };                                                                                                              // 948\n                                                                                                                    // 949\n    Dropzone.prototype.disable = function() {                                                                       // 950\n      var file, _i, _len, _ref, _results;                                                                           // 951\n      this.clickableElements.forEach(function(element) {                                                            // 952\n        return element.classList.remove(\"dz-clickable\");                                                            // 953\n      });                                                                                                           // 954\n      this.removeEventListeners();                                                                                  // 955\n      _ref = this.files;                                                                                            // 956\n      _results = [];                                                                                                // 957\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {                                                           // 958\n        file = _ref[_i];                                                                                            // 959\n        _results.push(this.cancelUpload(file));                                                                     // 960\n      }                                                                                                             // 961\n      return _results;                                                                                              // 962\n    };                                                                                                              // 963\n                                                                                                                    // 964\n    Dropzone.prototype.enable = function() {                                                                        // 965\n      this.clickableElements.forEach(function(element) {                                                            // 966\n        return element.classList.add(\"dz-clickable\");                                                               // 967\n      });                                                                                                           // 968\n      return this.setupEventListeners();                                                                            // 969\n    };                                                                                                              // 970\n                                                                                                                    // 971\n    Dropzone.prototype.filesize = function(size) {                                                                  // 972\n      var string;                                                                                                   // 973\n      if (size >= 1024 * 1024 * 1024 * 1024 / 10) {                                                                 // 974\n        size = size / (1024 * 1024 * 1024 * 1024 / 10);                                                             // 975\n        string = \"TiB\";                                                                                             // 976\n      } else if (size >= 1024 * 1024 * 1024 / 10) {                                                                 // 977\n        size = size / (1024 * 1024 * 1024 / 10);                                                                    // 978\n        string = \"GiB\";                                                                                             // 979\n      } else if (size >= 1024 * 1024 / 10) {                                                                        // 980\n        size = size / (1024 * 1024 / 10);                                                                           // 981\n        string = \"MiB\";                                                                                             // 982\n      } else if (size >= 1024 / 10) {                                                                               // 983\n        size = size / (1024 / 10);                                                                                  // 984\n        string = \"KiB\";                                                                                             // 985\n      } else {                                                                                                      // 986\n        size = size * 10;                                                                                           // 987\n        string = \"b\";                                                                                               // 988\n      }                                                                                                             // 989\n      return \"<strong>\" + (Math.round(size) / 10) + \"</strong> \" + string;                                          // 990\n    };                                                                                                              // 991\n                                                                                                                    // 992\n    Dropzone.prototype._updateMaxFilesReachedClass = function() {                                                   // 993\n      if ((this.options.maxFiles != null) && this.getAcceptedFiles().length >= this.options.maxFiles) {             // 994\n        if (this.getAcceptedFiles().length === this.options.maxFiles) {                                             // 995\n          this.emit('maxfilesreached', this.files);                                                                 // 996\n        }                                                                                                           // 997\n        return this.element.classList.add(\"dz-max-files-reached\");                                                  // 998\n      } else {                                                                                                      // 999\n        return this.element.classList.remove(\"dz-max-files-reached\");                                               // 1000\n      }                                                                                                             // 1001\n    };                                                                                                              // 1002\n                                                                                                                    // 1003\n    Dropzone.prototype.drop = function(e) {                                                                         // 1004\n      var files, items;                                                                                             // 1005\n      if (!e.dataTransfer) {                                                                                        // 1006\n        return;                                                                                                     // 1007\n      }                                                                                                             // 1008\n      this.emit(\"drop\", e);                                                                                         // 1009\n      files = e.dataTransfer.files;                                                                                 // 1010\n      if (files.length) {                                                                                           // 1011\n        items = e.dataTransfer.items;                                                                               // 1012\n        if (items && items.length && (items[0].webkitGetAsEntry != null)) {                                         // 1013\n          this._addFilesFromItems(items);                                                                           // 1014\n        } else {                                                                                                    // 1015\n          this.handleFiles(files);                                                                                  // 1016\n        }                                                                                                           // 1017\n      }                                                                                                             // 1018\n    };                                                                                                              // 1019\n                                                                                                                    // 1020\n    Dropzone.prototype.paste = function(e) {                                                                        // 1021\n      var items, _ref;                                                                                              // 1022\n      if ((e != null ? (_ref = e.clipboardData) != null ? _ref.items : void 0 : void 0) == null) {                  // 1023\n        return;                                                                                                     // 1024\n      }                                                                                                             // 1025\n      this.emit(\"paste\", e);                                                                                        // 1026\n      items = e.clipboardData.items;                                                                                // 1027\n      if (items.length) {                                                                                           // 1028\n        return this._addFilesFromItems(items);                                                                      // 1029\n      }                                                                                                             // 1030\n    };                                                                                                              // 1031\n                                                                                                                    // 1032\n    Dropzone.prototype.handleFiles = function(files) {                                                              // 1033\n      var file, _i, _len, _results;                                                                                 // 1034\n      _results = [];                                                                                                // 1035\n      for (_i = 0, _len = files.length; _i < _len; _i++) {                                                          // 1036\n        file = files[_i];                                                                                           // 1037\n        _results.push(this.addFile(file));                                                                          // 1038\n      }                                                                                                             // 1039\n      return _results;                                                                                              // 1040\n    };                                                                                                              // 1041\n                                                                                                                    // 1042\n    Dropzone.prototype._addFilesFromItems = function(items) {                                                       // 1043\n      var entry, item, _i, _len, _results;                                                                          // 1044\n      _results = [];                                                                                                // 1045\n      for (_i = 0, _len = items.length; _i < _len; _i++) {                                                          // 1046\n        item = items[_i];                                                                                           // 1047\n        if ((item.webkitGetAsEntry != null) && (entry = item.webkitGetAsEntry())) {                                 // 1048\n          if (entry.isFile) {                                                                                       // 1049\n            _results.push(this.addFile(item.getAsFile()));                                                          // 1050\n          } else if (entry.isDirectory) {                                                                           // 1051\n            _results.push(this._addFilesFromDirectory(entry, entry.name));                                          // 1052\n          } else {                                                                                                  // 1053\n            _results.push(void 0);                                                                                  // 1054\n          }                                                                                                         // 1055\n        } else if (item.getAsFile != null) {                                                                        // 1056\n          if ((item.kind == null) || item.kind === \"file\") {                                                        // 1057\n            _results.push(this.addFile(item.getAsFile()));                                                          // 1058\n          } else {                                                                                                  // 1059\n            _results.push(void 0);                                                                                  // 1060\n          }                                                                                                         // 1061\n        } else {                                                                                                    // 1062\n          _results.push(void 0);                                                                                    // 1063\n        }                                                                                                           // 1064\n      }                                                                                                             // 1065\n      return _results;                                                                                              // 1066\n    };                                                                                                              // 1067\n                                                                                                                    // 1068\n    Dropzone.prototype._addFilesFromDirectory = function(directory, path) {                                         // 1069\n      var dirReader, entriesReader;                                                                                 // 1070\n      dirReader = directory.createReader();                                                                         // 1071\n      entriesReader = (function(_this) {                                                                            // 1072\n        return function(entries) {                                                                                  // 1073\n          var entry, _i, _len;                                                                                      // 1074\n          for (_i = 0, _len = entries.length; _i < _len; _i++) {                                                    // 1075\n            entry = entries[_i];                                                                                    // 1076\n            if (entry.isFile) {                                                                                     // 1077\n              entry.file(function(file) {                                                                           // 1078\n                if (_this.options.ignoreHiddenFiles && file.name.substring(0, 1) === '.') {                         // 1079\n                  return;                                                                                           // 1080\n                }                                                                                                   // 1081\n                file.fullPath = \"\" + path + \"/\" + file.name;                                                        // 1082\n                return _this.addFile(file);                                                                         // 1083\n              });                                                                                                   // 1084\n            } else if (entry.isDirectory) {                                                                         // 1085\n              _this._addFilesFromDirectory(entry, \"\" + path + \"/\" + entry.name);                                    // 1086\n            }                                                                                                       // 1087\n          }                                                                                                         // 1088\n        };                                                                                                          // 1089\n      })(this);                                                                                                     // 1090\n      return dirReader.readEntries(entriesReader, function(error) {                                                 // 1091\n        return typeof console !== \"undefined\" && console !== null ? typeof console.log === \"function\" ? console.log(error) : void 0 : void 0;\n      });                                                                                                           // 1093\n    };                                                                                                              // 1094\n                                                                                                                    // 1095\n    Dropzone.prototype.accept = function(file, done) {                                                              // 1096\n      if (file.size > this.options.maxFilesize * 1024 * 1024) {                                                     // 1097\n        return done(this.options.dictFileTooBig.replace(\"{{filesize}}\", Math.round(file.size / 1024 / 10.24) / 100).replace(\"{{maxFilesize}}\", this.options.maxFilesize));\n      } else if (!Dropzone.isValidFile(file, this.options.acceptedFiles)) {                                         // 1099\n        return done(this.options.dictInvalidFileType);                                                              // 1100\n      } else if ((this.options.maxFiles != null) && this.getAcceptedFiles().length >= this.options.maxFiles) {      // 1101\n        done(this.options.dictMaxFilesExceeded.replace(\"{{maxFiles}}\", this.options.maxFiles));                     // 1102\n        return this.emit(\"maxfilesexceeded\", file);                                                                 // 1103\n      } else {                                                                                                      // 1104\n        return this.options.accept.call(this, file, done);                                                          // 1105\n      }                                                                                                             // 1106\n    };                                                                                                              // 1107\n                                                                                                                    // 1108\n    Dropzone.prototype.addFile = function(file) {                                                                   // 1109\n      file.upload = {                                                                                               // 1110\n        progress: 0,                                                                                                // 1111\n        total: file.size,                                                                                           // 1112\n        bytesSent: 0                                                                                                // 1113\n      };                                                                                                            // 1114\n      this.files.push(file);                                                                                        // 1115\n      file.status = Dropzone.ADDED;                                                                                 // 1116\n      this.emit(\"addedfile\", file);                                                                                 // 1117\n      this._enqueueThumbnail(file);                                                                                 // 1118\n      return this.accept(file, (function(_this) {                                                                   // 1119\n        return function(error) {                                                                                    // 1120\n          if (error) {                                                                                              // 1121\n            file.accepted = false;                                                                                  // 1122\n            _this._errorProcessing([file], error);                                                                  // 1123\n          } else {                                                                                                  // 1124\n            file.accepted = true;                                                                                   // 1125\n            if (_this.options.autoQueue) {                                                                          // 1126\n              _this.enqueueFile(file);                                                                              // 1127\n            }                                                                                                       // 1128\n          }                                                                                                         // 1129\n          return _this._updateMaxFilesReachedClass();                                                               // 1130\n        };                                                                                                          // 1131\n      })(this));                                                                                                    // 1132\n    };                                                                                                              // 1133\n                                                                                                                    // 1134\n    Dropzone.prototype.enqueueFiles = function(files) {                                                             // 1135\n      var file, _i, _len;                                                                                           // 1136\n      for (_i = 0, _len = files.length; _i < _len; _i++) {                                                          // 1137\n        file = files[_i];                                                                                           // 1138\n        this.enqueueFile(file);                                                                                     // 1139\n      }                                                                                                             // 1140\n      return null;                                                                                                  // 1141\n    };                                                                                                              // 1142\n                                                                                                                    // 1143\n    Dropzone.prototype.enqueueFile = function(file) {                                                               // 1144\n      if (file.status === Dropzone.ADDED && file.accepted === true) {                                               // 1145\n        file.status = Dropzone.QUEUED;                                                                              // 1146\n        if (this.options.autoProcessQueue) {                                                                        // 1147\n          return setTimeout(((function(_this) {                                                                     // 1148\n            return function() {                                                                                     // 1149\n              return _this.processQueue();                                                                          // 1150\n            };                                                                                                      // 1151\n          })(this)), 0);                                                                                            // 1152\n        }                                                                                                           // 1153\n      } else {                                                                                                      // 1154\n        throw new Error(\"This file can't be queued because it has already been processed or was rejected.\");        // 1155\n      }                                                                                                             // 1156\n    };                                                                                                              // 1157\n                                                                                                                    // 1158\n    Dropzone.prototype._thumbnailQueue = [];                                                                        // 1159\n                                                                                                                    // 1160\n    Dropzone.prototype._processingThumbnail = false;                                                                // 1161\n                                                                                                                    // 1162\n    Dropzone.prototype._enqueueThumbnail = function(file) {                                                         // 1163\n      if (this.options.createImageThumbnails && file.type.match(/image.*/) && file.size <= this.options.maxThumbnailFilesize * 1024 * 1024) {\n        this._thumbnailQueue.push(file);                                                                            // 1165\n        return setTimeout(((function(_this) {                                                                       // 1166\n          return function() {                                                                                       // 1167\n            return _this._processThumbnailQueue();                                                                  // 1168\n          };                                                                                                        // 1169\n        })(this)), 0);                                                                                              // 1170\n      }                                                                                                             // 1171\n    };                                                                                                              // 1172\n                                                                                                                    // 1173\n    Dropzone.prototype._processThumbnailQueue = function() {                                                        // 1174\n      if (this._processingThumbnail || this._thumbnailQueue.length === 0) {                                         // 1175\n        return;                                                                                                     // 1176\n      }                                                                                                             // 1177\n      this._processingThumbnail = true;                                                                             // 1178\n      return this.createThumbnail(this._thumbnailQueue.shift(), (function(_this) {                                  // 1179\n        return function() {                                                                                         // 1180\n          _this._processingThumbnail = false;                                                                       // 1181\n          return _this._processThumbnailQueue();                                                                    // 1182\n        };                                                                                                          // 1183\n      })(this));                                                                                                    // 1184\n    };                                                                                                              // 1185\n                                                                                                                    // 1186\n    Dropzone.prototype.removeFile = function(file) {                                                                // 1187\n      if (file.status === Dropzone.UPLOADING) {                                                                     // 1188\n        this.cancelUpload(file);                                                                                    // 1189\n      }                                                                                                             // 1190\n      this.files = without(this.files, file);                                                                       // 1191\n      this.emit(\"removedfile\", file);                                                                               // 1192\n      if (this.files.length === 0) {                                                                                // 1193\n        return this.emit(\"reset\");                                                                                  // 1194\n      }                                                                                                             // 1195\n    };                                                                                                              // 1196\n                                                                                                                    // 1197\n    Dropzone.prototype.removeAllFiles = function(cancelIfNecessary) {                                               // 1198\n      var file, _i, _len, _ref;                                                                                     // 1199\n      if (cancelIfNecessary == null) {                                                                              // 1200\n        cancelIfNecessary = false;                                                                                  // 1201\n      }                                                                                                             // 1202\n      _ref = this.files.slice();                                                                                    // 1203\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {                                                           // 1204\n        file = _ref[_i];                                                                                            // 1205\n        if (file.status !== Dropzone.UPLOADING || cancelIfNecessary) {                                              // 1206\n          this.removeFile(file);                                                                                    // 1207\n        }                                                                                                           // 1208\n      }                                                                                                             // 1209\n      return null;                                                                                                  // 1210\n    };                                                                                                              // 1211\n                                                                                                                    // 1212\n    Dropzone.prototype.createThumbnail = function(file, callback) {                                                 // 1213\n      var fileReader;                                                                                               // 1214\n      fileReader = new FileReader;                                                                                  // 1215\n      fileReader.onload = (function(_this) {                                                                        // 1216\n        return function() {                                                                                         // 1217\n          var img;                                                                                                  // 1218\n          img = document.createElement(\"img\");                                                                      // 1219\n          img.onload = function() {                                                                                 // 1220\n            var canvas, ctx, resizeInfo, thumbnail, _ref, _ref1, _ref2, _ref3;                                      // 1221\n            file.width = img.width;                                                                                 // 1222\n            file.height = img.height;                                                                               // 1223\n            resizeInfo = _this.options.resize.call(_this, file);                                                    // 1224\n            if (resizeInfo.trgWidth == null) {                                                                      // 1225\n              resizeInfo.trgWidth = resizeInfo.optWidth;                                                            // 1226\n            }                                                                                                       // 1227\n            if (resizeInfo.trgHeight == null) {                                                                     // 1228\n              resizeInfo.trgHeight = resizeInfo.optHeight;                                                          // 1229\n            }                                                                                                       // 1230\n            canvas = document.createElement(\"canvas\");                                                              // 1231\n            ctx = canvas.getContext(\"2d\");                                                                          // 1232\n            canvas.width = resizeInfo.trgWidth;                                                                     // 1233\n            canvas.height = resizeInfo.trgHeight;                                                                   // 1234\n            drawImageIOSFix(ctx, img, (_ref = resizeInfo.srcX) != null ? _ref : 0, (_ref1 = resizeInfo.srcY) != null ? _ref1 : 0, resizeInfo.srcWidth, resizeInfo.srcHeight, (_ref2 = resizeInfo.trgX) != null ? _ref2 : 0, (_ref3 = resizeInfo.trgY) != null ? _ref3 : 0, resizeInfo.trgWidth, resizeInfo.trgHeight);\n            thumbnail = canvas.toDataURL(\"image/png\");                                                              // 1236\n            _this.emit(\"thumbnail\", file, thumbnail);                                                               // 1237\n            if (callback != null) {                                                                                 // 1238\n              return callback();                                                                                    // 1239\n            }                                                                                                       // 1240\n          };                                                                                                        // 1241\n          return img.src = fileReader.result;                                                                       // 1242\n        };                                                                                                          // 1243\n      })(this);                                                                                                     // 1244\n      return fileReader.readAsDataURL(file);                                                                        // 1245\n    };                                                                                                              // 1246\n                                                                                                                    // 1247\n    Dropzone.prototype.processQueue = function() {                                                                  // 1248\n      var i, parallelUploads, processingLength, queuedFiles;                                                        // 1249\n      parallelUploads = this.options.parallelUploads;                                                               // 1250\n      processingLength = this.getUploadingFiles().length;                                                           // 1251\n      i = processingLength;                                                                                         // 1252\n      if (processingLength >= parallelUploads) {                                                                    // 1253\n        return;                                                                                                     // 1254\n      }                                                                                                             // 1255\n      queuedFiles = this.getQueuedFiles();                                                                          // 1256\n      if (!(queuedFiles.length > 0)) {                                                                              // 1257\n        return;                                                                                                     // 1258\n      }                                                                                                             // 1259\n      if (this.options.uploadMultiple) {                                                                            // 1260\n        return this.processFiles(queuedFiles.slice(0, parallelUploads - processingLength));                         // 1261\n      } else {                                                                                                      // 1262\n        while (i < parallelUploads) {                                                                               // 1263\n          if (!queuedFiles.length) {                                                                                // 1264\n            return;                                                                                                 // 1265\n          }                                                                                                         // 1266\n          this.processFile(queuedFiles.shift());                                                                    // 1267\n          i++;                                                                                                      // 1268\n        }                                                                                                           // 1269\n      }                                                                                                             // 1270\n    };                                                                                                              // 1271\n                                                                                                                    // 1272\n    Dropzone.prototype.processFile = function(file) {                                                               // 1273\n      return this.processFiles([file]);                                                                             // 1274\n    };                                                                                                              // 1275\n                                                                                                                    // 1276\n    Dropzone.prototype.processFiles = function(files) {                                                             // 1277\n      var file, _i, _len;                                                                                           // 1278\n      for (_i = 0, _len = files.length; _i < _len; _i++) {                                                          // 1279\n        file = files[_i];                                                                                           // 1280\n        file.processing = true;                                                                                     // 1281\n        file.status = Dropzone.UPLOADING;                                                                           // 1282\n        this.emit(\"processing\", file);                                                                              // 1283\n      }                                                                                                             // 1284\n      if (this.options.uploadMultiple) {                                                                            // 1285\n        this.emit(\"processingmultiple\", files);                                                                     // 1286\n      }                                                                                                             // 1287\n      return this.uploadFiles(files);                                                                               // 1288\n    };                                                                                                              // 1289\n                                                                                                                    // 1290\n    Dropzone.prototype._getFilesWithXhr = function(xhr) {                                                           // 1291\n      var file, files;                                                                                              // 1292\n      return files = (function() {                                                                                  // 1293\n        var _i, _len, _ref, _results;                                                                               // 1294\n        _ref = this.files;                                                                                          // 1295\n        _results = [];                                                                                              // 1296\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {                                                         // 1297\n          file = _ref[_i];                                                                                          // 1298\n          if (file.xhr === xhr) {                                                                                   // 1299\n            _results.push(file);                                                                                    // 1300\n          }                                                                                                         // 1301\n        }                                                                                                           // 1302\n        return _results;                                                                                            // 1303\n      }).call(this);                                                                                                // 1304\n    };                                                                                                              // 1305\n                                                                                                                    // 1306\n    Dropzone.prototype.cancelUpload = function(file) {                                                              // 1307\n      var groupedFile, groupedFiles, _i, _j, _len, _len1, _ref;                                                     // 1308\n      if (file.status === Dropzone.UPLOADING) {                                                                     // 1309\n        groupedFiles = this._getFilesWithXhr(file.xhr);                                                             // 1310\n        for (_i = 0, _len = groupedFiles.length; _i < _len; _i++) {                                                 // 1311\n          groupedFile = groupedFiles[_i];                                                                           // 1312\n          groupedFile.status = Dropzone.CANCELED;                                                                   // 1313\n        }                                                                                                           // 1314\n        file.xhr.abort();                                                                                           // 1315\n        for (_j = 0, _len1 = groupedFiles.length; _j < _len1; _j++) {                                               // 1316\n          groupedFile = groupedFiles[_j];                                                                           // 1317\n          this.emit(\"canceled\", groupedFile);                                                                       // 1318\n        }                                                                                                           // 1319\n        if (this.options.uploadMultiple) {                                                                          // 1320\n          this.emit(\"canceledmultiple\", groupedFiles);                                                              // 1321\n        }                                                                                                           // 1322\n      } else if ((_ref = file.status) === Dropzone.ADDED || _ref === Dropzone.QUEUED) {                             // 1323\n        file.status = Dropzone.CANCELED;                                                                            // 1324\n        this.emit(\"canceled\", file);                                                                                // 1325\n        if (this.options.uploadMultiple) {                                                                          // 1326\n          this.emit(\"canceledmultiple\", [file]);                                                                    // 1327\n        }                                                                                                           // 1328\n      }                                                                                                             // 1329\n      if (this.options.autoProcessQueue) {                                                                          // 1330\n        return this.processQueue();                                                                                 // 1331\n      }                                                                                                             // 1332\n    };                                                                                                              // 1333\n                                                                                                                    // 1334\n    Dropzone.prototype.uploadFile = function(file) {                                                                // 1335\n      return this.uploadFiles([file]);                                                                              // 1336\n    };                                                                                                              // 1337\n                                                                                                                    // 1338\n    Dropzone.prototype.uploadFiles = function(files) {                                                              // 1339\n      var file, formData, handleError, headerName, headerValue, headers, i, input, inputName, inputType, key, option, progressObj, response, updateProgress, value, xhr, _i, _j, _k, _l, _len, _len1, _len2, _len3, _m, _ref, _ref1, _ref2, _ref3, _ref4, _ref5;\n      xhr = new XMLHttpRequest();                                                                                   // 1341\n      for (_i = 0, _len = files.length; _i < _len; _i++) {                                                          // 1342\n        file = files[_i];                                                                                           // 1343\n        file.xhr = xhr;                                                                                             // 1344\n      }                                                                                                             // 1345\n      xhr.open(this.options.method, this.options.url, true);                                                        // 1346\n      xhr.withCredentials = !!this.options.withCredentials;                                                         // 1347\n      response = null;                                                                                              // 1348\n      handleError = (function(_this) {                                                                              // 1349\n        return function() {                                                                                         // 1350\n          var _j, _len1, _results;                                                                                  // 1351\n          _results = [];                                                                                            // 1352\n          for (_j = 0, _len1 = files.length; _j < _len1; _j++) {                                                    // 1353\n            file = files[_j];                                                                                       // 1354\n            _results.push(_this._errorProcessing(files, response || _this.options.dictResponseError.replace(\"{{statusCode}}\", xhr.status), xhr));\n          }                                                                                                         // 1356\n          return _results;                                                                                          // 1357\n        };                                                                                                          // 1358\n      })(this);                                                                                                     // 1359\n      updateProgress = (function(_this) {                                                                           // 1360\n        return function(e) {                                                                                        // 1361\n          var allFilesFinished, progress, _j, _k, _l, _len1, _len2, _len3, _results;                                // 1362\n          if (e != null) {                                                                                          // 1363\n            progress = 100 * e.loaded / e.total;                                                                    // 1364\n            for (_j = 0, _len1 = files.length; _j < _len1; _j++) {                                                  // 1365\n              file = files[_j];                                                                                     // 1366\n              file.upload = {                                                                                       // 1367\n                progress: progress,                                                                                 // 1368\n                total: e.total,                                                                                     // 1369\n                bytesSent: e.loaded                                                                                 // 1370\n              };                                                                                                    // 1371\n            }                                                                                                       // 1372\n          } else {                                                                                                  // 1373\n            allFilesFinished = true;                                                                                // 1374\n            progress = 100;                                                                                         // 1375\n            for (_k = 0, _len2 = files.length; _k < _len2; _k++) {                                                  // 1376\n              file = files[_k];                                                                                     // 1377\n              if (!(file.upload.progress === 100 && file.upload.bytesSent === file.upload.total)) {                 // 1378\n                allFilesFinished = false;                                                                           // 1379\n              }                                                                                                     // 1380\n              file.upload.progress = progress;                                                                      // 1381\n              file.upload.bytesSent = file.upload.total;                                                            // 1382\n            }                                                                                                       // 1383\n            if (allFilesFinished) {                                                                                 // 1384\n              return;                                                                                               // 1385\n            }                                                                                                       // 1386\n          }                                                                                                         // 1387\n          _results = [];                                                                                            // 1388\n          for (_l = 0, _len3 = files.length; _l < _len3; _l++) {                                                    // 1389\n            file = files[_l];                                                                                       // 1390\n            _results.push(_this.emit(\"uploadprogress\", file, progress, file.upload.bytesSent));                     // 1391\n          }                                                                                                         // 1392\n          return _results;                                                                                          // 1393\n        };                                                                                                          // 1394\n      })(this);                                                                                                     // 1395\n      xhr.onload = (function(_this) {                                                                               // 1396\n        return function(e) {                                                                                        // 1397\n          var _ref;                                                                                                 // 1398\n          if (files[0].status === Dropzone.CANCELED) {                                                              // 1399\n            return;                                                                                                 // 1400\n          }                                                                                                         // 1401\n          if (xhr.readyState !== 4) {                                                                               // 1402\n            return;                                                                                                 // 1403\n          }                                                                                                         // 1404\n          response = xhr.responseText;                                                                              // 1405\n          if (xhr.getResponseHeader(\"content-type\") && ~xhr.getResponseHeader(\"content-type\").indexOf(\"application/json\")) {\n            try {                                                                                                   // 1407\n              response = JSON.parse(response);                                                                      // 1408\n            } catch (_error) {                                                                                      // 1409\n              e = _error;                                                                                           // 1410\n              response = \"Invalid JSON response from server.\";                                                      // 1411\n            }                                                                                                       // 1412\n          }                                                                                                         // 1413\n          updateProgress();                                                                                         // 1414\n          if (!((200 <= (_ref = xhr.status) && _ref < 300))) {                                                      // 1415\n            return handleError();                                                                                   // 1416\n          } else {                                                                                                  // 1417\n            return _this._finished(files, response, e);                                                             // 1418\n          }                                                                                                         // 1419\n        };                                                                                                          // 1420\n      })(this);                                                                                                     // 1421\n      xhr.onerror = (function(_this) {                                                                              // 1422\n        return function() {                                                                                         // 1423\n          if (files[0].status === Dropzone.CANCELED) {                                                              // 1424\n            return;                                                                                                 // 1425\n          }                                                                                                         // 1426\n          return handleError();                                                                                     // 1427\n        };                                                                                                          // 1428\n      })(this);                                                                                                     // 1429\n      progressObj = (_ref = xhr.upload) != null ? _ref : xhr;                                                       // 1430\n      progressObj.onprogress = updateProgress;                                                                      // 1431\n      headers = {                                                                                                   // 1432\n        \"Accept\": \"application/json\",                                                                               // 1433\n        \"Cache-Control\": \"no-cache\",                                                                                // 1434\n        \"X-Requested-With\": \"XMLHttpRequest\"                                                                        // 1435\n      };                                                                                                            // 1436\n      if (this.options.headers) {                                                                                   // 1437\n        extend(headers, this.options.headers);                                                                      // 1438\n      }                                                                                                             // 1439\n      for (headerName in headers) {                                                                                 // 1440\n        headerValue = headers[headerName];                                                                          // 1441\n        xhr.setRequestHeader(headerName, headerValue);                                                              // 1442\n      }                                                                                                             // 1443\n      formData = new FormData();                                                                                    // 1444\n      if (this.options.params) {                                                                                    // 1445\n        _ref1 = this.options.params;                                                                                // 1446\n        for (key in _ref1) {                                                                                        // 1447\n          value = _ref1[key];                                                                                       // 1448\n          formData.append(key, value);                                                                              // 1449\n        }                                                                                                           // 1450\n      }                                                                                                             // 1451\n      for (_j = 0, _len1 = files.length; _j < _len1; _j++) {                                                        // 1452\n        file = files[_j];                                                                                           // 1453\n        this.emit(\"sending\", file, xhr, formData);                                                                  // 1454\n      }                                                                                                             // 1455\n      if (this.options.uploadMultiple) {                                                                            // 1456\n        this.emit(\"sendingmultiple\", files, xhr, formData);                                                         // 1457\n      }                                                                                                             // 1458\n      if (this.element.tagName === \"FORM\") {                                                                        // 1459\n        _ref2 = this.element.querySelectorAll(\"input, textarea, select, button\");                                   // 1460\n        for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {                                                      // 1461\n          input = _ref2[_k];                                                                                        // 1462\n          inputName = input.getAttribute(\"name\");                                                                   // 1463\n          inputType = input.getAttribute(\"type\");                                                                   // 1464\n          if (input.tagName === \"SELECT\" && input.hasAttribute(\"multiple\")) {                                       // 1465\n            _ref3 = input.options;                                                                                  // 1466\n            for (_l = 0, _len3 = _ref3.length; _l < _len3; _l++) {                                                  // 1467\n              option = _ref3[_l];                                                                                   // 1468\n              if (option.selected) {                                                                                // 1469\n                formData.append(inputName, option.value);                                                           // 1470\n              }                                                                                                     // 1471\n            }                                                                                                       // 1472\n          } else if (!inputType || ((_ref4 = inputType.toLowerCase()) !== \"checkbox\" && _ref4 !== \"radio\") || input.checked) {\n            formData.append(inputName, input.value);                                                                // 1474\n          }                                                                                                         // 1475\n        }                                                                                                           // 1476\n      }                                                                                                             // 1477\n      for (i = _m = 0, _ref5 = files.length - 1; 0 <= _ref5 ? _m <= _ref5 : _m >= _ref5; i = 0 <= _ref5 ? ++_m : --_m) {\n        formData.append(this._getParamName(i), files[i], files[i].name);                                            // 1479\n      }                                                                                                             // 1480\n      return xhr.send(formData);                                                                                    // 1481\n    };                                                                                                              // 1482\n                                                                                                                    // 1483\n    Dropzone.prototype._finished = function(files, responseText, e) {                                               // 1484\n      var file, _i, _len;                                                                                           // 1485\n      for (_i = 0, _len = files.length; _i < _len; _i++) {                                                          // 1486\n        file = files[_i];                                                                                           // 1487\n        file.status = Dropzone.SUCCESS;                                                                             // 1488\n        this.emit(\"success\", file, responseText, e);                                                                // 1489\n        this.emit(\"complete\", file);                                                                                // 1490\n      }                                                                                                             // 1491\n      if (this.options.uploadMultiple) {                                                                            // 1492\n        this.emit(\"successmultiple\", files, responseText, e);                                                       // 1493\n        this.emit(\"completemultiple\", files);                                                                       // 1494\n      }                                                                                                             // 1495\n      if (this.options.autoProcessQueue) {                                                                          // 1496\n        return this.processQueue();                                                                                 // 1497\n      }                                                                                                             // 1498\n    };                                                                                                              // 1499\n                                                                                                                    // 1500\n    Dropzone.prototype._errorProcessing = function(files, message, xhr) {                                           // 1501\n      var file, _i, _len;                                                                                           // 1502\n      for (_i = 0, _len = files.length; _i < _len; _i++) {                                                          // 1503\n        file = files[_i];                                                                                           // 1504\n        file.status = Dropzone.ERROR;                                                                               // 1505\n        this.emit(\"error\", file, message, xhr);                                                                     // 1506\n        this.emit(\"complete\", file);                                                                                // 1507\n      }                                                                                                             // 1508\n      if (this.options.uploadMultiple) {                                                                            // 1509\n        this.emit(\"errormultiple\", files, message, xhr);                                                            // 1510\n        this.emit(\"completemultiple\", files);                                                                       // 1511\n      }                                                                                                             // 1512\n      if (this.options.autoProcessQueue) {                                                                          // 1513\n        return this.processQueue();                                                                                 // 1514\n      }                                                                                                             // 1515\n    };                                                                                                              // 1516\n                                                                                                                    // 1517\n    return Dropzone;                                                                                                // 1518\n                                                                                                                    // 1519\n  })(Em);                                                                                                           // 1520\n                                                                                                                    // 1521\n  Dropzone.version = \"3.10.2\";                                                                                      // 1522\n                                                                                                                    // 1523\n  Dropzone.options = {};                                                                                            // 1524\n                                                                                                                    // 1525\n  Dropzone.optionsForElement = function(element) {                                                                  // 1526\n    if (element.getAttribute(\"id\")) {                                                                               // 1527\n      return Dropzone.options[camelize(element.getAttribute(\"id\"))];                                                // 1528\n    } else {                                                                                                        // 1529\n      return void 0;                                                                                                // 1530\n    }                                                                                                               // 1531\n  };                                                                                                                // 1532\n                                                                                                                    // 1533\n  Dropzone.instances = [];                                                                                          // 1534\n                                                                                                                    // 1535\n  Dropzone.forElement = function(element) {                                                                         // 1536\n    if (typeof element === \"string\") {                                                                              // 1537\n      element = document.querySelector(element);                                                                    // 1538\n    }                                                                                                               // 1539\n    if ((element != null ? element.dropzone : void 0) == null) {                                                    // 1540\n      throw new Error(\"No Dropzone found for given element. This is probably because you're trying to access it before Dropzone had the time to initialize. Use the `init` option to setup any additional observers on your Dropzone.\");\n    }                                                                                                               // 1542\n    return element.dropzone;                                                                                        // 1543\n  };                                                                                                                // 1544\n                                                                                                                    // 1545\n  Dropzone.autoDiscover = false;                                                                                    // 1546\n                                                                                                                    // 1547\n  Dropzone.discover = function() {                                                                                  // 1548\n    var checkElements, dropzone, dropzones, _i, _len, _results;                                                     // 1549\n    if (document.querySelectorAll) {                                                                                // 1550\n      dropzones = document.querySelectorAll(\".dropzone\");                                                           // 1551\n    } else {                                                                                                        // 1552\n      dropzones = [];                                                                                               // 1553\n      checkElements = function(elements) {                                                                          // 1554\n        var el, _i, _len, _results;                                                                                 // 1555\n        _results = [];                                                                                              // 1556\n        for (_i = 0, _len = elements.length; _i < _len; _i++) {                                                     // 1557\n          el = elements[_i];                                                                                        // 1558\n          if (/(^| )dropzone($| )/.test(el.className)) {                                                            // 1559\n            _results.push(dropzones.push(el));                                                                      // 1560\n          } else {                                                                                                  // 1561\n            _results.push(void 0);                                                                                  // 1562\n          }                                                                                                         // 1563\n        }                                                                                                           // 1564\n        return _results;                                                                                            // 1565\n      };                                                                                                            // 1566\n      checkElements(document.getElementsByTagName(\"div\"));                                                          // 1567\n      checkElements(document.getElementsByTagName(\"form\"));                                                         // 1568\n    }                                                                                                               // 1569\n    _results = [];                                                                                                  // 1570\n    for (_i = 0, _len = dropzones.length; _i < _len; _i++) {                                                        // 1571\n      dropzone = dropzones[_i];                                                                                     // 1572\n      if (Dropzone.optionsForElement(dropzone) !== false) {                                                         // 1573\n        _results.push(new Dropzone(dropzone));                                                                      // 1574\n      } else {                                                                                                      // 1575\n        _results.push(void 0);                                                                                      // 1576\n      }                                                                                                             // 1577\n    }                                                                                                               // 1578\n    return _results;                                                                                                // 1579\n  };                                                                                                                // 1580\n                                                                                                                    // 1581\n  Dropzone.blacklistedBrowsers = [/opera.*Macintosh.*version\\/12/i];                                                // 1582\n                                                                                                                    // 1583\n  Dropzone.isBrowserSupported = function() {                                                                        // 1584\n    var capableBrowser, regex, _i, _len, _ref;                                                                      // 1585\n    capableBrowser = true;                                                                                          // 1586\n    if (window.File && window.FileReader && window.FileList && window.Blob && window.FormData && document.querySelector) {\n      if (!(\"classList\" in document.createElement(\"a\"))) {                                                          // 1588\n        capableBrowser = false;                                                                                     // 1589\n      } else {                                                                                                      // 1590\n        _ref = Dropzone.blacklistedBrowsers;                                                                        // 1591\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {                                                         // 1592\n          regex = _ref[_i];                                                                                         // 1593\n          if (regex.test(navigator.userAgent)) {                                                                    // 1594\n            capableBrowser = false;                                                                                 // 1595\n            continue;                                                                                               // 1596\n          }                                                                                                         // 1597\n        }                                                                                                           // 1598\n      }                                                                                                             // 1599\n    } else {                                                                                                        // 1600\n      capableBrowser = false;                                                                                       // 1601\n    }                                                                                                               // 1602\n    return capableBrowser;                                                                                          // 1603\n  };                                                                                                                // 1604\n                                                                                                                    // 1605\n  without = function(list, rejectedItem) {                                                                          // 1606\n    var item, _i, _len, _results;                                                                                   // 1607\n    _results = [];                                                                                                  // 1608\n    for (_i = 0, _len = list.length; _i < _len; _i++) {                                                             // 1609\n      item = list[_i];                                                                                              // 1610\n      if (item !== rejectedItem) {                                                                                  // 1611\n        _results.push(item);                                                                                        // 1612\n      }                                                                                                             // 1613\n    }                                                                                                               // 1614\n    return _results;                                                                                                // 1615\n  };                                                                                                                // 1616\n                                                                                                                    // 1617\n  camelize = function(str) {                                                                                        // 1618\n    return str.replace(/[\\-_](\\w)/g, function(match) {                                                              // 1619\n      return match.charAt(1).toUpperCase();                                                                         // 1620\n    });                                                                                                             // 1621\n  };                                                                                                                // 1622\n                                                                                                                    // 1623\n  Dropzone.createElement = function(string) {                                                                       // 1624\n    var div;                                                                                                        // 1625\n    div = document.createElement(\"div\");                                                                            // 1626\n    div.innerHTML = string;                                                                                         // 1627\n    return div.childNodes[0];                                                                                       // 1628\n  };                                                                                                                // 1629\n                                                                                                                    // 1630\n  Dropzone.elementInside = function(element, container) {                                                           // 1631\n    if (element === container) {                                                                                    // 1632\n      return true;                                                                                                  // 1633\n    }                                                                                                               // 1634\n    while (element = element.parentNode) {                                                                          // 1635\n      if (element === container) {                                                                                  // 1636\n        return true;                                                                                                // 1637\n      }                                                                                                             // 1638\n    }                                                                                                               // 1639\n    return false;                                                                                                   // 1640\n  };                                                                                                                // 1641\n                                                                                                                    // 1642\n  Dropzone.getElement = function(el, name) {                                                                        // 1643\n    var element;                                                                                                    // 1644\n    if (typeof el === \"string\") {                                                                                   // 1645\n      element = document.querySelector(el);                                                                         // 1646\n    } else if (el.nodeType != null) {                                                                               // 1647\n      element = el;                                                                                                 // 1648\n    }                                                                                                               // 1649\n    if (element == null) {                                                                                          // 1650\n      throw new Error(\"Invalid `\" + name + \"` option provided. Please provide a CSS selector or a plain HTML element.\");\n    }                                                                                                               // 1652\n    return element;                                                                                                 // 1653\n  };                                                                                                                // 1654\n                                                                                                                    // 1655\n  Dropzone.getElements = function(els, name) {                                                                      // 1656\n    var e, el, elements, _i, _j, _len, _len1, _ref;                                                                 // 1657\n    if (els instanceof Array) {                                                                                     // 1658\n      elements = [];                                                                                                // 1659\n      try {                                                                                                         // 1660\n        for (_i = 0, _len = els.length; _i < _len; _i++) {                                                          // 1661\n          el = els[_i];                                                                                             // 1662\n          elements.push(this.getElement(el, name));                                                                 // 1663\n        }                                                                                                           // 1664\n      } catch (_error) {                                                                                            // 1665\n        e = _error;                                                                                                 // 1666\n        elements = null;                                                                                            // 1667\n      }                                                                                                             // 1668\n    } else if (typeof els === \"string\") {                                                                           // 1669\n      elements = [];                                                                                                // 1670\n      _ref = document.querySelectorAll(els);                                                                        // 1671\n      for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {                                                         // 1672\n        el = _ref[_j];                                                                                              // 1673\n        elements.push(el);                                                                                          // 1674\n      }                                                                                                             // 1675\n    } else if (els.nodeType != null) {                                                                              // 1676\n      elements = [els];                                                                                             // 1677\n    }                                                                                                               // 1678\n    if (!((elements != null) && elements.length)) {                                                                 // 1679\n      throw new Error(\"Invalid `\" + name + \"` option provided. Please provide a CSS selector, a plain HTML element or a list of those.\");\n    }                                                                                                               // 1681\n    return elements;                                                                                                // 1682\n  };                                                                                                                // 1683\n                                                                                                                    // 1684\n  Dropzone.confirm = function(question, accepted, rejected) {                                                       // 1685\n    if (window.confirm(question)) {                                                                                 // 1686\n      return accepted();                                                                                            // 1687\n    } else if (rejected != null) {                                                                                  // 1688\n      return rejected();                                                                                            // 1689\n    }                                                                                                               // 1690\n  };                                                                                                                // 1691\n                                                                                                                    // 1692\n  Dropzone.isValidFile = function(file, acceptedFiles) {                                                            // 1693\n    var baseMimeType, mimeType, validType, _i, _len;                                                                // 1694\n    if (!acceptedFiles) {                                                                                           // 1695\n      return true;                                                                                                  // 1696\n    }                                                                                                               // 1697\n    acceptedFiles = acceptedFiles.split(\",\");                                                                       // 1698\n    mimeType = file.type;                                                                                           // 1699\n    baseMimeType = mimeType.replace(/\\/.*$/, \"\");                                                                   // 1700\n    for (_i = 0, _len = acceptedFiles.length; _i < _len; _i++) {                                                    // 1701\n      validType = acceptedFiles[_i];                                                                                // 1702\n      validType = validType.trim();                                                                                 // 1703\n      if (validType.charAt(0) === \".\") {                                                                            // 1704\n        if (file.name.toLowerCase().indexOf(validType.toLowerCase(), file.name.length - validType.length) !== -1) { // 1705\n          return true;                                                                                              // 1706\n        }                                                                                                           // 1707\n      } else if (/\\/\\*$/.test(validType)) {                                                                         // 1708\n        if (baseMimeType === validType.replace(/\\/.*$/, \"\")) {                                                      // 1709\n          return true;                                                                                              // 1710\n        }                                                                                                           // 1711\n      } else {                                                                                                      // 1712\n        if (mimeType === validType) {                                                                               // 1713\n          return true;                                                                                              // 1714\n        }                                                                                                           // 1715\n      }                                                                                                             // 1716\n    }                                                                                                               // 1717\n    return false;                                                                                                   // 1718\n  };                                                                                                                // 1719\n                                                                                                                    // 1720\n  if (typeof jQuery !== \"undefined\" && jQuery !== null) {                                                           // 1721\n    jQuery.fn.dropzone = function(options) {                                                                        // 1722\n      return this.each(function() {                                                                                 // 1723\n        return new Dropzone(this, options);                                                                         // 1724\n      });                                                                                                           // 1725\n    };                                                                                                              // 1726\n  }                                                                                                                 // 1727\n                                                                                                                    // 1728\n  if (typeof module !== \"undefined\" && module !== null) {                                                           // 1729\n    module.exports = Dropzone;                                                                                      // 1730\n  } else {                                                                                                          // 1731\n    window.Dropzone = Dropzone;                                                                                     // 1732\n  }                                                                                                                 // 1733\n                                                                                                                    // 1734\n  Dropzone.ADDED = \"added\";                                                                                         // 1735\n                                                                                                                    // 1736\n  Dropzone.QUEUED = \"queued\";                                                                                       // 1737\n                                                                                                                    // 1738\n  Dropzone.ACCEPTED = Dropzone.QUEUED;                                                                              // 1739\n                                                                                                                    // 1740\n  Dropzone.UPLOADING = \"uploading\";                                                                                 // 1741\n                                                                                                                    // 1742\n  Dropzone.PROCESSING = Dropzone.UPLOADING;                                                                         // 1743\n                                                                                                                    // 1744\n  Dropzone.CANCELED = \"canceled\";                                                                                   // 1745\n                                                                                                                    // 1746\n  Dropzone.ERROR = \"error\";                                                                                         // 1747\n                                                                                                                    // 1748\n  Dropzone.SUCCESS = \"success\";                                                                                     // 1749\n                                                                                                                    // 1750\n                                                                                                                    // 1751\n  /*                                                                                                                // 1752\n                                                                                                                    // 1753\n  Bugfix for iOS 6 and 7                                                                                            // 1754\n  Source: http://stackoverflow.com/questions/11929099/html5-canvas-drawimage-ratio-bug-ios                          // 1755\n  based on the work of https://github.com/stomita/ios-imagefile-megapixel                                           // 1756\n   */                                                                                                               // 1757\n                                                                                                                    // 1758\n  detectVerticalSquash = function(img) {                                                                            // 1759\n    var alpha, canvas, ctx, data, ey, ih, iw, py, ratio, sy;                                                        // 1760\n    iw = img.naturalWidth;                                                                                          // 1761\n    ih = img.naturalHeight;                                                                                         // 1762\n    canvas = document.createElement(\"canvas\");                                                                      // 1763\n    canvas.width = 1;                                                                                               // 1764\n    canvas.height = ih;                                                                                             // 1765\n    ctx = canvas.getContext(\"2d\");                                                                                  // 1766\n    ctx.drawImage(img, 0, 0);                                                                                       // 1767\n    data = ctx.getImageData(0, 0, 1, ih).data;                                                                      // 1768\n    sy = 0;                                                                                                         // 1769\n    ey = ih;                                                                                                        // 1770\n    py = ih;                                                                                                        // 1771\n    while (py > sy) {                                                                                               // 1772\n      alpha = data[(py - 1) * 4 + 3];                                                                               // 1773\n      if (alpha === 0) {                                                                                            // 1774\n        ey = py;                                                                                                    // 1775\n      } else {                                                                                                      // 1776\n        sy = py;                                                                                                    // 1777\n      }                                                                                                             // 1778\n      py = (ey + sy) >> 1;                                                                                          // 1779\n    }                                                                                                               // 1780\n    ratio = py / ih;                                                                                                // 1781\n    if (ratio === 0) {                                                                                              // 1782\n      return 1;                                                                                                     // 1783\n    } else {                                                                                                        // 1784\n      return ratio;                                                                                                 // 1785\n    }                                                                                                               // 1786\n  };                                                                                                                // 1787\n                                                                                                                    // 1788\n  drawImageIOSFix = function(ctx, img, sx, sy, sw, sh, dx, dy, dw, dh) {                                            // 1789\n    var vertSquashRatio;                                                                                            // 1790\n    vertSquashRatio = detectVerticalSquash(img);                                                                    // 1791\n    return ctx.drawImage(img, sx, sy, sw, sh, dx, dy, dw, dh / vertSquashRatio);                                    // 1792\n  };                                                                                                                // 1793\n                                                                                                                    // 1794\n                                                                                                                    // 1795\n  /*                                                                                                                // 1796\n   * contentloaded.js                                                                                               // 1797\n   *                                                                                                                // 1798\n   * Author: Diego Perini (diego.perini at gmail.com)                                                               // 1799\n   * Summary: cross-browser wrapper for DOMContentLoaded                                                            // 1800\n   * Updated: 20101020                                                                                              // 1801\n   * License: MIT                                                                                                   // 1802\n   * Version: 1.2                                                                                                   // 1803\n   *                                                                                                                // 1804\n   * URL:                                                                                                           // 1805\n   * http://javascript.nwbox.com/ContentLoaded/                                                                     // 1806\n   * http://javascript.nwbox.com/ContentLoaded/MIT-LICENSE                                                          // 1807\n   */                                                                                                               // 1808\n                                                                                                                    // 1809\n  contentLoaded = function(win, fn) {                                                                               // 1810\n    var add, doc, done, init, poll, pre, rem, root, top;                                                            // 1811\n    done = false;                                                                                                   // 1812\n    top = true;                                                                                                     // 1813\n    doc = win.document;                                                                                             // 1814\n    root = doc.documentElement;                                                                                     // 1815\n    add = (doc.addEventListener ? \"addEventListener\" : \"attachEvent\");                                              // 1816\n    rem = (doc.addEventListener ? \"removeEventListener\" : \"detachEvent\");                                           // 1817\n    pre = (doc.addEventListener ? \"\" : \"on\");                                                                       // 1818\n    init = function(e) {                                                                                            // 1819\n      if (e.type === \"readystatechange\" && doc.readyState !== \"complete\") {                                         // 1820\n        return;                                                                                                     // 1821\n      }                                                                                                             // 1822\n      (e.type === \"load\" ? win : doc)[rem](pre + e.type, init, false);                                              // 1823\n      if (!done && (done = true)) {                                                                                 // 1824\n        return fn.call(win, e.type || e);                                                                           // 1825\n      }                                                                                                             // 1826\n    };                                                                                                              // 1827\n    poll = function() {                                                                                             // 1828\n      var e;                                                                                                        // 1829\n      try {                                                                                                         // 1830\n        root.doScroll(\"left\");                                                                                      // 1831\n      } catch (_error) {                                                                                            // 1832\n        e = _error;                                                                                                 // 1833\n        setTimeout(poll, 50);                                                                                       // 1834\n        return;                                                                                                     // 1835\n      }                                                                                                             // 1836\n      return init(\"poll\");                                                                                          // 1837\n    };                                                                                                              // 1838\n    if (doc.readyState !== \"complete\") {                                                                            // 1839\n      if (doc.createEventObject && root.doScroll) {                                                                 // 1840\n        try {                                                                                                       // 1841\n          top = !win.frameElement;                                                                                  // 1842\n        } catch (_error) {}                                                                                         // 1843\n        if (top) {                                                                                                  // 1844\n          poll();                                                                                                   // 1845\n        }                                                                                                           // 1846\n      }                                                                                                             // 1847\n      doc[add](pre + \"DOMContentLoaded\", init, false);                                                              // 1848\n      doc[add](pre + \"readystatechange\", init, false);                                                              // 1849\n      return win[add](pre + \"load\", init, false);                                                                   // 1850\n    }                                                                                                               // 1851\n  };                                                                                                                // 1852\n                                                                                                                    // 1853\n  Dropzone._autoDiscoverFunction = function() {                                                                     // 1854\n    if (Dropzone.autoDiscover) {                                                                                    // 1855\n      return Dropzone.discover();                                                                                   // 1856\n    }                                                                                                               // 1857\n  };                                                                                                                // 1858\n                                                                                                                    // 1859\n  contentLoaded(window, Dropzone._autoDiscoverFunction);                                                            // 1860\n                                                                                                                    // 1861\n}).call(this);                                                                                                      // 1862\n                                                                                                                    // 1863\n});                                                                                                                 // 1864\n                                                                                                                    // 1865\nif (typeof exports == \"object\") {                                                                                   // 1866\n  module.exports = require(\"dropzone\");                                                                             // 1867\n} else if (typeof define == \"function\" && define.amd) {                                                             // 1868\n  define([], function(){ return require(\"dropzone\"); });                                                            // 1869\n} else {                                                                                                            // 1870\n  this[\"Dropzone\"] = require(\"dropzone\");                                                                           // 1871\n}                                                                                                                   // 1872\n})()                                                                                                                // 1873\n                                                                                                                    // 1874\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       // 1884\n}).call(this);                                                                                                         // 1885\n                                                                                                                       // 1886\n                                                                                                                       // 1887\n                                                                                                                       // 1888\n                                                                                                                       // 1889\n                                                                                                                       // 1890\n                                                                                                                       // 1891\n(function () {                                                                                                         // 1892\n                                                                                                                       // 1893\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// packages/dbarrett:dropzonejs/lib/template.dbarrett:dropzonejs.js                                                 //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\n                                                                                                                    // 1\nTemplate.__checkName(\"dropzone\");                                                                                   // 2\nTemplate[\"dropzone\"] = new Template(\"Template.dropzone\", (function() {                                              // 3\n  var view = this;                                                                                                  // 4\n  return HTML.DIV({                                                                                                 // 5\n    id: function() {                                                                                                // 6\n      return Spacebars.mustache(view.lookup(\"id\"));                                                                 // 7\n    },                                                                                                              // 8\n    \"class\": \"dropzone\"                                                                                             // 9\n  });                                                                                                               // 10\n}));                                                                                                                // 11\n                                                                                                                    // 12\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       // 1913\n}).call(this);                                                                                                         // 1914\n                                                                                                                       // 1915\n                                                                                                                       // 1916\n                                                                                                                       // 1917\n                                                                                                                       // 1918\n                                                                                                                       // 1919\n                                                                                                                       // 1920\n(function () {                                                                                                         // 1921\n                                                                                                                       // 1922\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// packages/dbarrett:dropzonejs/lib/dbarrett:dropzonejs.js                                                          //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\nTemplate.dropzone.rendered = function() {                                                                           // 1\n  var options = _.extend({}, Meteor.Dropzone.options, this.data);                                                   // 2\n                                                                                                                    // 3\n  if(this.data.id) {                                                                                                // 4\n    this.dropzone = new Dropzone('#' + this.data.id + '.dropzone', options);                                        // 5\n  }else{                                                                                                            // 6\n    $(this.firstNode).dropzone(options);                                                                            // 7\n  }                                                                                                                 // 8\n                                                                                                                    // 9\n};                                                                                                                  // 10\n                                                                                                                    // 11\nMeteor.Dropzone = {                                                                                                 // 12\n    options: {                                                                                                      // 13\n                                                                                                                    // 14\n    }                                                                                                               // 15\n};                                                                                                                  // 16\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       // 1946\n}).call(this);                                                                                                         // 1947\n                                                                                                                       // 1948\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\nPackage['dbarrett:dropzonejs'] = {};\n\n})();\n","servePath":"/packages/dbarrett_dropzonejs.js"}]