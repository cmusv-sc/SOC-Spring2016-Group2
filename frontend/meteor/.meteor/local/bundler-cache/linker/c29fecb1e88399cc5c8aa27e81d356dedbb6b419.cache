[{"type":"js","data":"(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar Accounts = Package['accounts-base'].Accounts;\nvar Meetup = Package.meetup.Meetup;\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                     //\n// packages/accounts-meetup/meetup.js                                                                  //\n//                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                       //\nAccounts.oauth.registerService('meetup');\n\nif (Meteor.isClient) {\n  Meteor.loginWithMeetup = function(options, callback) {\n    // support a callback without options\n    if (! callback && typeof options === \"function\") {\n      callback = options;\n      options = null;\n    }\n\n    var credentialRequestCompleteCallback = Accounts.oauth.credentialRequestCompleteHandler(callback);\n    Meetup.requestCredential(options, credentialRequestCompleteCallback);\n  };\n} else {\n  Accounts.addAutopublishFields({\n    // publish all fields including access token, which can legitimately\n    // be used from the client (if transmitted over ssl or on\n    // localhost). http://www.meetup.com/meetup_api/auth/#oauth2implicit\n    forLoggedInUser: ['services.meetup'],\n    forOtherUsers: ['services.meetup.id']\n  });\n}\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\nPackage['accounts-meetup'] = {};\n\n})();\n","servePath":"/packages/accounts-meetup.js"}]