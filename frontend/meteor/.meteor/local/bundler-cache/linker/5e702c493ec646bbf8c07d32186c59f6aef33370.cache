[{"type":"js","data":"(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar HTTP = Package.http.HTTP;\nvar Template = Package.templating.Template;\nvar OAuth = Package.oauth.OAuth;\nvar Oauth = Package.oauth.Oauth;\nvar Random = Package.random.Random;\nvar ServiceConfiguration = Package['service-configuration'].ServiceConfiguration;\nvar Blaze = Package.blaze.Blaze;\nvar UI = Package.blaze.UI;\nvar Handlebars = Package.blaze.Handlebars;\nvar Spacebars = Package.spacebars.Spacebars;\nvar HTML = Package.htmljs.HTML;\n\n/* Package-scope variables */\nvar Twitter;\n\n(function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                    //\n// packages/twitter/template.twitter_configure.js                                                     //\n//                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                      //\n                                                                                                      // 1\nTemplate.__checkName(\"configureLoginServiceDialogForTwitter\");                                        // 2\nTemplate[\"configureLoginServiceDialogForTwitter\"] = new Template(\"Template.configureLoginServiceDialogForTwitter\", (function() {\n  var view = this;                                                                                    // 4\n  return [ HTML.Raw(\"<p>\\n    First, you'll need to register your app on Twitter. Follow these steps:\\n  </p>\\n  \"), HTML.OL(\"\\n    \", HTML.Raw('<li>\\n      Visit <a href=\"https://dev.twitter.com/apps/new\" target=\"_blank\">https://dev.twitter.com/apps/new</a>\\n    </li>'), \"\\n    \", HTML.LI(\"\\n      Set Website to: \", HTML.SPAN({\n    \"class\": \"url\"                                                                                    // 6\n  }, Blaze.View(\"lookup:siteUrl\", function() {                                                        // 7\n    return Spacebars.mustache(view.lookup(\"siteUrl\"));                                                // 8\n  })), \"\\n    \"), \"\\n    \", HTML.LI(\"\\n      Set Callback URL to: \", HTML.SPAN({                      // 9\n    \"class\": \"url\"                                                                                    // 10\n  }, Blaze.View(\"lookup:siteUrl\", function() {                                                        // 11\n    return Spacebars.mustache(view.lookup(\"siteUrl\"));                                                // 12\n  }), \"_oauth/twitter\"), \"\\n    \"), \"\\n    \", HTML.Raw('<li>\\n      Select \"Create your Twitter application\".\\n    </li>'), \"\\n    \", HTML.Raw('<li>\\n      On the Settings tab, enable \"Allow this application to be used to Sign in with Twitter\" and click\\n      \"Update settings\".\\n    </li>'), \"\\n    \", HTML.Raw('<li>\\n      Switch to the \"Keys and Access Tokens\" tab.\\n    </li>'), \"\\n  \") ];\n}));                                                                                                  // 14\n                                                                                                      // 15\n////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                    //\n// packages/twitter/twitter_configure.js                                                              //\n//                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                      //\nTemplate.configureLoginServiceDialogForTwitter.helpers({                                              // 1\n  siteUrl: function () {                                                                              // 2\n  // Twitter doesn't recognize localhost as a domain name                                             // 3\n    return Meteor.absoluteUrl({replaceLocalhost: true});                                              // 4\n  }                                                                                                   // 5\n});                                                                                                   // 6\n                                                                                                      // 7\nTemplate.configureLoginServiceDialogForTwitter.fields = function () {                                 // 8\n  return [                                                                                            // 9\n    {property: 'consumerKey', label: 'API key'},                                                      // 10\n    {property: 'secret', label: 'API secret'}                                                         // 11\n  ];                                                                                                  // 12\n};                                                                                                    // 13\n                                                                                                      // 14\n////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                    //\n// packages/twitter/twitter_client.js                                                                 //\n//                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                      //\nTwitter = {};                                                                                         // 1\n                                                                                                      // 2\n// Request Twitter credentials for the user                                                           // 3\n// @param options {optional}  XXX support options.requestPermissions                                  // 4\n// @param credentialRequestCompleteCallback {Function} Callback function to call on                   // 5\n//   completion. Takes one argument, credentialToken on success, or Error on                          // 6\n//   error.                                                                                           // 7\nTwitter.requestCredential = function (options, credentialRequestCompleteCallback) {                   // 8\n  // support both (options, callback) and (callback).                                                 // 9\n  if (!credentialRequestCompleteCallback && typeof options === 'function') {                          // 10\n    credentialRequestCompleteCallback = options;                                                      // 11\n    options = {};                                                                                     // 12\n  }                                                                                                   // 13\n                                                                                                      // 14\n  var config = ServiceConfiguration.configurations.findOne({service: 'twitter'});                     // 15\n  if (!config) {                                                                                      // 16\n    credentialRequestCompleteCallback && credentialRequestCompleteCallback(                           // 17\n      new ServiceConfiguration.ConfigError());                                                        // 18\n    return;                                                                                           // 19\n  }                                                                                                   // 20\n                                                                                                      // 21\n  var credentialToken = Random.secret();                                                              // 22\n  // We need to keep credentialToken across the next two 'steps' so we're adding                      // 23\n  // a credentialToken parameter to the url and the callback url that we'll be returned               // 24\n  // to by oauth provider                                                                             // 25\n                                                                                                      // 26\n  var loginStyle = OAuth._loginStyle('twitter', config, options);                                     // 27\n                                                                                                      // 28\n  // url to app, enters \"step 1\" as described in                                                      // 29\n  // packages/accounts-oauth1-helper/oauth1_server.js                                                 // 30\n  var loginPath = '_oauth/twitter/?requestTokenAndRedirect=true'                                      // 31\n        + '&state=' + OAuth._stateParam(loginStyle, credentialToken, options && options.redirectUrl);\n                                                                                                      // 33\n  if (Meteor.isCordova) {                                                                             // 34\n    loginPath = loginPath + \"&cordova=true\";                                                          // 35\n    if (/Android/i.test(navigator.userAgent)) {                                                       // 36\n      loginPath = loginPath + \"&android=true\";                                                        // 37\n    }                                                                                                 // 38\n  }                                                                                                   // 39\n                                                                                                      // 40\n  var loginUrl = Meteor.absoluteUrl(loginPath);                                                       // 41\n                                                                                                      // 42\n  OAuth.launchLogin({                                                                                 // 43\n    loginService: \"twitter\",                                                                          // 44\n    loginStyle: loginStyle,                                                                           // 45\n    loginUrl: loginUrl,                                                                               // 46\n    credentialRequestCompleteCallback: credentialRequestCompleteCallback,                             // 47\n    credentialToken: credentialToken                                                                  // 48\n  });                                                                                                 // 49\n};                                                                                                    // 50\n                                                                                                      // 51\n////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\n(function (pkg, symbols) {\n  for (var s in symbols)\n    (s in pkg) || (pkg[s] = symbols[s]);\n})(Package.twitter = {}, {\n  Twitter: Twitter\n});\n\n})();\n","servePath":"/packages/twitter.js"}]