[{"type":"js","data":"(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar check = Package.check.check;\nvar Match = Package.check.Match;\nvar Router = Package['iron:router'].Router;\nvar RouteController = Package['iron:router'].RouteController;\nvar _ = Package.underscore._;\nvar AccountsTemplates = Package['useraccounts:core'].AccountsTemplates;\nvar Iron = Package['iron:core'].Iron;\nvar Accounts = Package['accounts-base'].Accounts;\nvar T9n = Package['softwarerero:accounts-t9n'].T9n;\nvar Template = Package.templating.Template;\nvar Blaze = Package.blaze.Blaze;\nvar UI = Package.blaze.UI;\nvar Handlebars = Package.blaze.Handlebars;\nvar Spacebars = Package.spacebars.Spacebars;\nvar HTML = Package.htmljs.HTML;\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                               //\n// packages/useraccounts_iron-routing/lib/core.js                                                                //\n//                                                                                                               //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                 //\n/* global                                                                                                        // 1\n  AccountsTemplates: false                                                                                       // 2\n*/                                                                                                               // 3\n'use strict';                                                                                                    // 4\n                                                                                                                 // 5\n// ---------------------------------------------------------------------------------                             // 6\n                                                                                                                 // 7\n// Patterns for methods\" parameters                                                                              // 8\n                                                                                                                 // 9\n// ---------------------------------------------------------------------------------                             // 10\n                                                                                                                 // 11\n// Route configuration pattern to be checked with check                                                          // 12\nvar ROUTE_PAT = {                                                                                                // 13\n  name: Match.Optional(String),                                                                                  // 14\n  path: Match.Optional(String),                                                                                  // 15\n  template: Match.Optional(String),                                                                              // 16\n  layoutTemplate: Match.Optional(String),                                                                        // 17\n  redirect: Match.Optional(Match.OneOf(String, Match.Where(_.isFunction))),                                      // 18\n};                                                                                                               // 19\n                                                                                                                 // 20\n/*                                                                                                               // 21\n  Routes configuration can be done by calling AccountsTemplates.configureRoute with the route name and the       // 22\n  following options in a separate object. E.g. AccountsTemplates.configureRoute(\"gingIn\", option);               // 23\n    name:           String (optional). A unique route\"s name to be passed to iron-router                         // 24\n    path:           String (optional). A unique route\"s path to be passed to iron-router                         // 25\n    template:       String (optional). The name of the template to be rendered                                   // 26\n    layoutTemplate: String (optional). The name of the layout to be used                                         // 27\n    redirect:       String (optional). The name of the route (or its path) where to redirect after form submit   // 28\n*/                                                                                                               // 29\n                                                                                                                 // 30\n                                                                                                                 // 31\n// Allowed routes along with theirs default configuration values                                                 // 32\nAccountsTemplates.ROUTE_DEFAULT = {                                                                              // 33\n  changePwd:      { name: \"atChangePwd\",      path: \"/change-password\"},                                         // 34\n  enrollAccount:  { name: \"atEnrollAccount\",  path: \"/enroll-account\"},                                          // 35\n  ensureSignedIn: { name: \"atEnsureSignedIn\", path: null},                                                       // 36\n  forgotPwd:      { name: \"atForgotPwd\",      path: \"/forgot-password\"},                                         // 37\n  resetPwd:       { name: \"atResetPwd\",       path: \"/reset-password\"},                                          // 38\n  signIn:         { name: \"atSignIn\",         path: \"/sign-in\"},                                                 // 39\n  signUp:         { name: \"atSignUp\",         path: \"/sign-up\"},                                                 // 40\n  verifyEmail:    { name: \"atVerifyEmail\",    path: \"/verify-email\"},                                            // 41\n  resendVerificationEmail: { name: \"atResendVerificationEmail\", path: \"/send-again\"},                            // 42\n};                                                                                                               // 43\n                                                                                                                 // 44\n                                                                                                                 // 45\n// Current configuration values                                                                                  // 46\n// Redirects                                                                                                     // 47\nAccountsTemplates.options.homeRoutePath = \"/\";                                                                   // 48\nAccountsTemplates.options.redirectTimeout = 2000; // 2 seconds                                                   // 49\n                                                                                                                 // 50\n// Known routes used to filter out previous path for redirects...                                                // 51\nAccountsTemplates.knownRoutes = [];                                                                              // 52\n                                                                                                                 // 53\n// Configured routes                                                                                             // 54\nAccountsTemplates.routes = {};                                                                                   // 55\n                                                                                                                 // 56\nAccountsTemplates.configureRoute = function(route, options) {                                                    // 57\n  check(route, String);                                                                                          // 58\n  check(options, Match.OneOf(undefined, Match.ObjectIncluding(ROUTE_PAT)));                                      // 59\n  options = _.clone(options);                                                                                    // 60\n  // Route Configuration can be done only before initialization                                                  // 61\n  if (this._initialized) {                                                                                       // 62\n    throw new Error(\"Route Configuration can be done only before AccountsTemplates.init!\");                      // 63\n  }                                                                                                              // 64\n  // Only allowed routes can be configured                                                                       // 65\n  if (!(route in this.ROUTE_DEFAULT)) {                                                                          // 66\n    throw new Error(\"Unknown Route!\");                                                                           // 67\n  }                                                                                                              // 68\n  // Allow route configuration only once                                                                         // 69\n  if (route in this.routes) {                                                                                    // 70\n    throw new Error(\"Route already configured!\");                                                                // 71\n  }                                                                                                              // 72\n                                                                                                                 // 73\n  // Possibly adds a initial / to the provided path                                                              // 74\n  if (options && options.path && options.path[0] !== \"/\") {                                                      // 75\n    options.path = \"/\" + options.path;                                                                           // 76\n  }                                                                                                              // 77\n  // Updates the current configuration                                                                           // 78\n  options = _.defaults(options || {}, this.ROUTE_DEFAULT[route]);                                                // 79\n                                                                                                                 // 80\n  this.routes[route] = options;                                                                                  // 81\n  // Known routes are used to filter out previous path for redirects...                                          // 82\n  AccountsTemplates.knownRoutes.push(options.path);                                                              // 83\n                                                                                                                 // 84\n  if (Meteor.isServer){                                                                                          // 85\n    // Configures \"reset password\" email link                                                                    // 86\n    if (route === \"resetPwd\"){                                                                                   // 87\n      var resetPwdPath = options.path.substr(1);                                                                 // 88\n      Accounts.urls.resetPassword = function(token){                                                             // 89\n        return Meteor.absoluteUrl(resetPwdPath + \"/\" + token);                                                   // 90\n      };                                                                                                         // 91\n    }                                                                                                            // 92\n    // Configures \"enroll account\" email link                                                                    // 93\n    if (route === \"enrollAccount\"){                                                                              // 94\n      var enrollAccountPath = options.path.substr(1);                                                            // 95\n      Accounts.urls.enrollAccount = function(token){                                                             // 96\n        return Meteor.absoluteUrl(enrollAccountPath + \"/\" + token);                                              // 97\n      };                                                                                                         // 98\n    }                                                                                                            // 99\n    // Configures \"verify email\" email link                                                                      // 100\n    if (route === \"verifyEmail\"){                                                                                // 101\n      var verifyEmailPath = options.path.substr(1);                                                              // 102\n      Accounts.urls.verifyEmail = function(token){                                                               // 103\n        return Meteor.absoluteUrl(verifyEmailPath + \"/\" + token);                                                // 104\n      };                                                                                                         // 105\n    }                                                                                                            // 106\n  }                                                                                                              // 107\n                                                                                                                 // 108\n  if (route === \"ensureSignedIn\") {                                                                              // 109\n    return;                                                                                                      // 110\n  }                                                                                                              // 111\n  if (route === \"changePwd\" && !AccountsTemplates.options.enablePasswordChange) {                                // 112\n    throw new Error(\"changePwd route configured but enablePasswordChange set to false!\");                        // 113\n  }                                                                                                              // 114\n  if (route === \"forgotPwd\" && !AccountsTemplates.options.showForgotPasswordLink) {                              // 115\n    throw new Error(\"forgotPwd route configured but showForgotPasswordLink set to false!\");                      // 116\n  }                                                                                                              // 117\n  if (route === \"signUp\" && AccountsTemplates.options.forbidClientAccountCreation) {                             // 118\n    throw new Error(\"signUp route configured but forbidClientAccountCreation set to true!\");                     // 119\n  }                                                                                                              // 120\n                                                                                                                 // 121\n  // Determines the default layout to be used in case no specific one is specified for single routes             // 122\n  var defaultLayout = AccountsTemplates.options.defaultLayout || Router.options.layoutTemplate;                  // 123\n                                                                                                                 // 124\n  var name = options.name; // Default provided...                                                                // 125\n  var path = options.path; // Default provided...                                                                // 126\n  var template = options.template || \"fullPageAtForm\";                                                           // 127\n  var layoutTemplate = options.layoutTemplate || defaultLayout;                                                  // 128\n  var additionalOptions = _.omit(options, [                                                                      // 129\n    \"layoutTemplate\", \"name\", \"path\", \"redirect\", \"template\"                                                     // 130\n  ]);                                                                                                            // 131\n                                                                                                                 // 132\n  // Possibly adds token parameter                                                                               // 133\n  if (_.contains([\"enrollAccount\", \"resetPwd\", \"verifyEmail\"], route)){                                          // 134\n    path += \"/:paramToken\";                                                                                      // 135\n    if (route === \"verifyEmail\") {                                                                               // 136\n      Router.route(path, _.extend(additionalOptions, {                                                           // 137\n        name: name,                                                                                              // 138\n        template: template,                                                                                      // 139\n        layoutTemplate: layoutTemplate,                                                                          // 140\n        onRun: function() {                                                                                      // 141\n          AccountsTemplates.setState(route);                                                                     // 142\n          AccountsTemplates.setDisabled(true);                                                                   // 143\n          var token = this.params.paramToken;                                                                    // 144\n          Accounts.verifyEmail(token, function(error){                                                           // 145\n            AccountsTemplates.setDisabled(false);                                                                // 146\n            AccountsTemplates.submitCallback(error, route, function(){                                           // 147\n              AccountsTemplates.state.form.set(\"result\", AccountsTemplates.texts.info.emailVerified);            // 148\n            });                                                                                                  // 149\n          });                                                                                                    // 150\n                                                                                                                 // 151\n          this.next();                                                                                           // 152\n        },                                                                                                       // 153\n        onStop: function() {                                                                                     // 154\n          AccountsTemplates.clearState();                                                                        // 155\n        },                                                                                                       // 156\n      }));                                                                                                       // 157\n    }                                                                                                            // 158\n    else {                                                                                                       // 159\n      Router.route(path, _.extend(additionalOptions, {                                                           // 160\n        name: name,                                                                                              // 161\n        template: template,                                                                                      // 162\n        layoutTemplate: layoutTemplate,                                                                          // 163\n        onBeforeAction: function() {                                                                             // 164\n          AccountsTemplates.paramToken = this.params.paramToken;                                                 // 165\n          AccountsTemplates.setState(route);                                                                     // 166\n          this.next();                                                                                           // 167\n        },                                                                                                       // 168\n        onStop: function() {                                                                                     // 169\n          AccountsTemplates.clearState();                                                                        // 170\n          AccountsTemplates.paramToken = null;                                                                   // 171\n        }                                                                                                        // 172\n      }));                                                                                                       // 173\n    }                                                                                                            // 174\n  }                                                                                                              // 175\n  else {                                                                                                         // 176\n    Router.route(path, _.extend(additionalOptions, {                                                             // 177\n      name: name,                                                                                                // 178\n      template: template,                                                                                        // 179\n      layoutTemplate: layoutTemplate,                                                                            // 180\n      onBeforeAction: function() {                                                                               // 181\n        var redirect = false;                                                                                    // 182\n        if (route === 'changePwd') {                                                                             // 183\n          if (!Meteor.loggingIn() && !Meteor.userId()) {                                                         // 184\n            redirect = true;                                                                                     // 185\n          }                                                                                                      // 186\n        }                                                                                                        // 187\n        else if (Meteor.userId()) {                                                                              // 188\n          redirect = true;                                                                                       // 189\n        }                                                                                                        // 190\n        if (redirect) {                                                                                          // 191\n          AccountsTemplates.postSubmitRedirect(route);                                                           // 192\n          this.stop();                                                                                           // 193\n        }                                                                                                        // 194\n        else {                                                                                                   // 195\n          AccountsTemplates.setState(route);                                                                     // 196\n          this.next();                                                                                           // 197\n        }                                                                                                        // 198\n      },                                                                                                         // 199\n      onStop: function() {                                                                                       // 200\n        AccountsTemplates.clearState();                                                                          // 201\n      }                                                                                                          // 202\n    }));                                                                                                         // 203\n  }                                                                                                              // 204\n};                                                                                                               // 205\n                                                                                                                 // 206\n                                                                                                                 // 207\nAccountsTemplates.getRouteName = function(route) {                                                               // 208\n  if (route in this.routes) {                                                                                    // 209\n    return this.routes[route].name;                                                                              // 210\n  }                                                                                                              // 211\n  return null;                                                                                                   // 212\n};                                                                                                               // 213\n                                                                                                                 // 214\nAccountsTemplates.getRoutePath = function(route) {                                                               // 215\n  if (route in this.routes) {                                                                                    // 216\n    return this.routes[route].path;                                                                              // 217\n  }                                                                                                              // 218\n  return \"#\";                                                                                                    // 219\n};                                                                                                               // 220\n                                                                                                                 // 221\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                               //\n// packages/useraccounts_iron-routing/lib/client.js                                                              //\n//                                                                                                               //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                 //\n/* global                                                                                                        // 1\n  AccountsTemplates: false,                                                                                      // 2\n  grecaptcha: false,                                                                                             // 3\n  Iron: false,                                                                                                   // 4\n  Router: false                                                                                                  // 5\n*/                                                                                                               // 6\n'use strict';                                                                                                    // 7\n                                                                                                                 // 8\n                                                                                                                 // 9\n// Previous path used for redirect after form submit                                                             // 10\nAccountsTemplates._prevPath = null;                                                                              // 11\n                                                                                                                 // 12\n// Possibly keeps reference to the handle for the timed out redirect                                             // 13\n// set on some routes                                                                                            // 14\nAccountsTemplates.timedOutRedirect = null;                                                                       // 15\n                                                                                                                 // 16\n                                                                                                                 // 17\nAccountsTemplates.clearState = function() {                                                                      // 18\n  _.each(this._fields, function(field){                                                                          // 19\n    field.clearStatus();                                                                                         // 20\n  });                                                                                                            // 21\n  var form = this.state.form;                                                                                    // 22\n  form.set('error', null);                                                                                       // 23\n  form.set('result', null);                                                                                      // 24\n  form.set('message', null);                                                                                     // 25\n                                                                                                                 // 26\n  AccountsTemplates.setDisabled(false);                                                                          // 27\n                                                                                                                 // 28\n  // Possibly clears timed out redirects                                                                         // 29\n  if (AccountsTemplates.timedOutRedirect !== null) {                                                             // 30\n    Meteor.clearTimeout(AccountsTemplates.timedOutRedirect);                                                     // 31\n    AccountsTemplates.timedOutRedirect = null;                                                                   // 32\n  }                                                                                                              // 33\n};                                                                                                               // 34\n                                                                                                                 // 35\n// Getter for previous route's path                                                                              // 36\nAccountsTemplates.getPrevPath = function() {                                                                     // 37\n    return this._prevPath;                                                                                       // 38\n};                                                                                                               // 39\n                                                                                                                 // 40\n// Setter for previous route's path                                                                              // 41\nAccountsTemplates.setPrevPath = function(newPath) {                                                              // 42\n    check(newPath, String);                                                                                      // 43\n    this._prevPath = newPath;                                                                                    // 44\n};                                                                                                               // 45\n                                                                                                                 // 46\nvar ensureSignedIn = function() {                                                                                // 47\n  if (!Meteor.userId()) {                                                                                        // 48\n    Tracker.nonreactive(function () {                                                                            // 49\n      AccountsTemplates.setPrevPath(Router.current().url);                                                       // 50\n    });                                                                                                          // 51\n    AccountsTemplates.setState(AccountsTemplates.options.defaultState, function(){                               // 52\n      var err = AccountsTemplates.texts.errors.mustBeLoggedIn;                                                   // 53\n      AccountsTemplates.state.form.set('error', [err]);                                                          // 54\n    });                                                                                                          // 55\n    AccountsTemplates.avoidRedirect = true;                                                                      // 56\n    // render the login template but keep the url in the browser the same                                        // 57\n                                                                                                                 // 58\n    var options = AccountsTemplates.routes.ensureSignedIn;                                                       // 59\n                                                                                                                 // 60\n    // Determines the template to be rendered in case no specific one was configured for ensureSignedIn          // 61\n    var signInRouteTemplate = AccountsTemplates.routes.signIn && AccountsTemplates.routes.signIn.template;       // 62\n    var template = (options && options.template) || signInRouteTemplate || 'fullPageAtForm';                     // 63\n                                                                                                                 // 64\n    // Determines the layout to be used in case no specific one was configured for ensureSignedIn                // 65\n    var defaultLayout = AccountsTemplates.options.defaultLayout || Router.options.layoutTemplate;                // 66\n    var layoutTemplate = (options && options.layoutTemplate) || defaultLayout;                                   // 67\n                                                                                                                 // 68\n    this.layout(layoutTemplate);                                                                                 // 69\n    this.render(template);                                                                                       // 70\n    this.renderRegions();                                                                                        // 71\n  } else {                                                                                                       // 72\n    AccountsTemplates.clearError();                                                                              // 73\n    this.next();                                                                                                 // 74\n  }                                                                                                              // 75\n};                                                                                                               // 76\n                                                                                                                 // 77\nAccountsTemplates.ensureSignedIn = function() {                                                                  // 78\n  console.warn(                                                                                                  // 79\n    '[UserAccounts] AccountsTemplates.ensureSignedIn will be deprecated soon, please use the plugin version\\n' +\n    '               see https://github.com/meteor-useraccounts/core/blob/master/Guide.md#content-protection'     // 81\n  );                                                                                                             // 82\n  ensureSignedIn.call(this);                                                                                     // 83\n};                                                                                                               // 84\n                                                                                                                 // 85\n                                                                                                                 // 86\nIron.Router.plugins.ensureSignedIn = function (router, options) {                                                // 87\n  // this loading plugin just creates an onBeforeAction hook                                                     // 88\n  router.onRun(function(){                                                                                       // 89\n    if (Meteor.loggingIn()) {                                                                                    // 90\n        this.renderRegions();                                                                                    // 91\n    } else {                                                                                                     // 92\n        this.next();                                                                                             // 93\n    }                                                                                                            // 94\n  }, options);                                                                                                   // 95\n                                                                                                                 // 96\n  router.onBeforeAction(                                                                                         // 97\n    ensureSignedIn,                                                                                              // 98\n    options                                                                                                      // 99\n  );                                                                                                             // 100\n                                                                                                                 // 101\n  router.onStop(function(){                                                                                      // 102\n    AccountsTemplates.clearError();                                                                              // 103\n  });                                                                                                            // 104\n};                                                                                                               // 105\n                                                                                                                 // 106\n                                                                                                                 // 107\n                                                                                                                 // 108\n// Stores previous path on path change...                                                                        // 109\nRouter.onStop(function() {                                                                                       // 110\n  Tracker.nonreactive(function () {                                                                              // 111\n    var currentPath = Router.current().url;                                                                      // 112\n    var currentPathClean = currentPath.replace(/^\\/+|\\/+$/gm,'');                                                // 113\n    var isKnownRoute = _.map(AccountsTemplates.knownRoutes, function(path){                                      // 114\n      if (!path) {                                                                                               // 115\n        return false;                                                                                            // 116\n      }                                                                                                          // 117\n      path = path.replace(/^\\/+|\\/+$/gm,'');                                                                     // 118\n      var known = RegExp(path).test(currentPathClean);                                                           // 119\n      return known;                                                                                              // 120\n    });                                                                                                          // 121\n    if (!_.some(isKnownRoute)) {                                                                                 // 122\n      AccountsTemplates.setPrevPath(currentPath);                                                                // 123\n    }                                                                                                            // 124\n    AccountsTemplates.avoidRedirect = false;                                                                     // 125\n  });                                                                                                            // 126\n});                                                                                                              // 127\n                                                                                                                 // 128\n                                                                                                                 // 129\nAccountsTemplates.linkClick = function(route){                                                                   // 130\n  if (AccountsTemplates.disabled()) {                                                                            // 131\n    return;                                                                                                      // 132\n  }                                                                                                              // 133\n  var path = AccountsTemplates.getRoutePath(route);                                                              // 134\n  if (path === '#' || AccountsTemplates.avoidRedirect ||                                                         // 135\n     (Router.current().route && path === Router.current().route.path())) {                                       // 136\n    AccountsTemplates.setState(route);                                                                           // 137\n  }                                                                                                              // 138\n  else {                                                                                                         // 139\n    Meteor.defer(function(){                                                                                     // 140\n      Router.go(path);                                                                                           // 141\n    });                                                                                                          // 142\n  }                                                                                                              // 143\n                                                                                                                 // 144\n  var firstVisibleInput = _.find(this.getFields(), function(f){                                                  // 145\n    return _.contains(f.visible, route);                                                                         // 146\n  });                                                                                                            // 147\n  if (firstVisibleInput) {                                                                                       // 148\n    $('input#at-field-' + firstVisibleInput._id).focus();                                                        // 149\n  }                                                                                                              // 150\n};                                                                                                               // 151\n                                                                                                                 // 152\nAccountsTemplates.logout = function(){                                                                           // 153\n  var onLogoutHook = AccountsTemplates.options.onLogoutHook;                                                     // 154\n  var homeRoutePath = AccountsTemplates.options.homeRoutePath;                                                   // 155\n  Meteor.logout(function(){                                                                                      // 156\n    if (onLogoutHook) {                                                                                          // 157\n      onLogoutHook();                                                                                            // 158\n    }                                                                                                            // 159\n    else if (homeRoutePath) {                                                                                    // 160\n      Router.go(homeRoutePath);                                                                                  // 161\n    }                                                                                                            // 162\n  });                                                                                                            // 163\n};                                                                                                               // 164\n                                                                                                                 // 165\nAccountsTemplates.postSubmitRedirect = function(route){                                                          // 166\n  if (AccountsTemplates.avoidRedirect) {                                                                         // 167\n    AccountsTemplates.avoidRedirect = false;                                                                     // 168\n  }                                                                                                              // 169\n  else {                                                                                                         // 170\n    var nextPath = AccountsTemplates.routes[route] && AccountsTemplates.routes[route].redirect;                  // 171\n    if (nextPath){                                                                                               // 172\n      if (_.isFunction(nextPath)) {                                                                              // 173\n        nextPath();                                                                                              // 174\n      }                                                                                                          // 175\n      else {                                                                                                     // 176\n        Router.go(nextPath);                                                                                     // 177\n      }                                                                                                          // 178\n    }else{                                                                                                       // 179\n      var previousPath = AccountsTemplates.getPrevPath();                                                        // 180\n      if (previousPath && Router.current().route.path() !== previousPath) {                                      // 181\n        Router.go(previousPath);                                                                                 // 182\n      }                                                                                                          // 183\n      else{                                                                                                      // 184\n        var homeRoutePath = AccountsTemplates.options.homeRoutePath;                                             // 185\n        if (homeRoutePath) {                                                                                     // 186\n          Router.go(homeRoutePath);                                                                              // 187\n        }                                                                                                        // 188\n      }                                                                                                          // 189\n    }                                                                                                            // 190\n  }                                                                                                              // 191\n};                                                                                                               // 192\n                                                                                                                 // 193\nAccountsTemplates.submitCallback = function(error, state, onSuccess){                                            // 194\n                                                                                                                 // 195\n  var onSubmitHook = AccountsTemplates.options.onSubmitHook;                                                     // 196\n  if(onSubmitHook) {                                                                                             // 197\n    onSubmitHook(error, state);                                                                                  // 198\n  }                                                                                                              // 199\n                                                                                                                 // 200\n  if (error) {                                                                                                   // 201\n    if(_.isObject(error.details)) {                                                                              // 202\n      // If error.details is an object, we may try to set fields errors from it                                  // 203\n      _.each(error.details, function(error, fieldId){                                                            // 204\n          AccountsTemplates.getField(fieldId).setError(error);                                                   // 205\n      });                                                                                                        // 206\n    }                                                                                                            // 207\n    else {                                                                                                       // 208\n      var err = 'error.accounts.Unknown error';                                                                  // 209\n      if (error.reason) {                                                                                        // 210\n        err = error.reason;                                                                                      // 211\n      }                                                                                                          // 212\n      if (err.substring(0, 15) !== 'error.accounts.') {                                                          // 213\n        err = 'error.accounts.' + err;                                                                           // 214\n      }                                                                                                          // 215\n      AccountsTemplates.state.form.set('error', [err]);                                                          // 216\n    }                                                                                                            // 217\n    AccountsTemplates.setDisabled(false);                                                                        // 218\n    // Possibly resets reCaptcha form                                                                            // 219\n    if (state === 'signUp' && AccountsTemplates.options.showReCaptcha) {                                         // 220\n      grecaptcha.reset();                                                                                        // 221\n    }                                                                                                            // 222\n  }                                                                                                              // 223\n  else{                                                                                                          // 224\n    if (onSuccess) {                                                                                             // 225\n      onSuccess();                                                                                               // 226\n    }                                                                                                            // 227\n                                                                                                                 // 228\n    if (_.contains(['enrollAccount', 'forgotPwd', 'resetPwd', 'verifyEmail'], state)){                           // 229\n      var redirectTimeout = AccountsTemplates.options.redirectTimeout;                                           // 230\n      if (redirectTimeout > 0) {                                                                                 // 231\n        AccountsTemplates.timedOutRedirect = Meteor.setTimeout(function(){                                       // 232\n          AccountsTemplates.timedOutRedirect = null;                                                             // 233\n          AccountsTemplates.setDisabled(false);                                                                  // 234\n          AccountsTemplates.postSubmitRedirect(state);                                                           // 235\n        }, redirectTimeout);                                                                                     // 236\n      }                                                                                                          // 237\n    }                                                                                                            // 238\n    else if (state){                                                                                             // 239\n      AccountsTemplates.setDisabled(false);                                                                      // 240\n      AccountsTemplates.postSubmitRedirect(state);                                                               // 241\n    }                                                                                                            // 242\n  }                                                                                                              // 243\n};                                                                                                               // 244\n                                                                                                                 // 245\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                               //\n// packages/useraccounts_iron-routing/lib/templates_helpers/at_input.js                                          //\n//                                                                                                               //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                 //\n/* global                                                                                                        // 1\n  AccountsTemplates: false,                                                                                      // 2\n  Router: false                                                                                                  // 3\n*/                                                                                                               // 4\n'use strict';                                                                                                    // 5\n                                                                                                                 // 6\nAccountsTemplates.atInputRendered.push(function(){                                                               // 7\n  var fieldId = this.data._id;                                                                                   // 8\n  var queryKey = this.data.options && this.data.options.queryKey || fieldId;                                     // 9\n  var currentR = Router.current();                                                                               // 10\n  var inputQueryVal = currentR && currentR.params && currentR.params.query && currentR.params.query[queryKey];   // 11\n  if (inputQueryVal) {                                                                                           // 12\n    this.$(\"input#at-field-\" + fieldId).val(inputQueryVal);                                                      // 13\n  }                                                                                                              // 14\n});                                                                                                              // 15\n                                                                                                                 // 16\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\nPackage['useraccounts:iron-routing'] = {};\n\n})();\n","servePath":"/packages/useraccounts_iron-routing.js"}]