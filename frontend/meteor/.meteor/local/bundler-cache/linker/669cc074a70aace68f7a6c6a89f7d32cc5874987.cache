[{"type":"js","data":"(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\n\n/* Package-scope variables */\nvar module, exports, s;\n\n(function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// packages/underscorestring_underscore.string/packages/underscorestring_underscore.string.js                       //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\n(function () {\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                          //\n// packages/underscorestring:underscore.string/meteor-pre.js                                                //\n//                                                                                                          //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                            //\n// Defining this will trick dist/underscore.string.js into putting its exports into module.exports          // 1\n// Credit to Tim Heckel for this trick - see https://github.com/TimHeckel/meteor-underscore-string          // 2\nmodule = {};                                                                                                // 3\n                                                                                                            // 4\n// This also needed, otherwise above doesn't work???                                                        // 5\nexports = {};                                                                                               // 6\n                                                                                                            // 7\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                          //\n// packages/underscorestring:underscore.string/dist/underscore.string.js                                    //\n//                                                                                                          //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                            //\n!function(e){if(\"object\"==typeof exports)module.exports=e();else if(\"function\"==typeof define&&define.amd)define(e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.s=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error(\"Cannot find module '\"+o+\"'\")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\nvar trim = _dereq_('./trim');                                                                               // 2\nvar decap = _dereq_('./decapitalize');                                                                      // 3\n                                                                                                            // 4\nmodule.exports = function camelize(str, decapitalize) {                                                     // 5\n  str = trim(str).replace(/[-_\\s]+(.)?/g, function(match, c) {                                              // 6\n    return c ? c.toUpperCase() : \"\";                                                                        // 7\n  });                                                                                                       // 8\n                                                                                                            // 9\n  if (decapitalize === true) {                                                                              // 10\n    return decap(str);                                                                                      // 11\n  } else {                                                                                                  // 12\n    return str;                                                                                             // 13\n  }                                                                                                         // 14\n};                                                                                                          // 15\n                                                                                                            // 16\n},{\"./decapitalize\":9,\"./trim\":60}],2:[function(_dereq_,module,exports){                                    // 17\nvar makeString = _dereq_('./helper/makeString');                                                            // 18\n                                                                                                            // 19\nmodule.exports = function capitalize(str) {                                                                 // 20\n  str = makeString(str);                                                                                    // 21\n  return str.charAt(0).toUpperCase() + str.slice(1);                                                        // 22\n};                                                                                                          // 23\n                                                                                                            // 24\n},{\"./helper/makeString\":19}],3:[function(_dereq_,module,exports){                                          // 25\nvar makeString = _dereq_('./helper/makeString');                                                            // 26\n                                                                                                            // 27\nmodule.exports = function chars(str) {                                                                      // 28\n  return makeString(str).split('');                                                                         // 29\n};                                                                                                          // 30\n                                                                                                            // 31\n},{\"./helper/makeString\":19}],4:[function(_dereq_,module,exports){                                          // 32\nmodule.exports = function chop(str, step) {                                                                 // 33\n  if (str == null) return [];                                                                               // 34\n  str = String(str);                                                                                        // 35\n  step = ~~step;                                                                                            // 36\n  return step > 0 ? str.match(new RegExp('.{1,' + step + '}', 'g')) : [str];                                // 37\n};                                                                                                          // 38\n                                                                                                            // 39\n},{}],5:[function(_dereq_,module,exports){                                                                  // 40\nvar capitalize = _dereq_('./capitalize');                                                                   // 41\nvar camelize = _dereq_('./camelize');                                                                       // 42\nvar makeString = _dereq_('./helper/makeString');                                                            // 43\n                                                                                                            // 44\nmodule.exports = function classify(str) {                                                                   // 45\n  str = makeString(str);                                                                                    // 46\n  return capitalize(camelize(str.replace(/[\\W_]/g, ' ')).replace(/\\s/g, ''));                               // 47\n};                                                                                                          // 48\n                                                                                                            // 49\n},{\"./camelize\":1,\"./capitalize\":2,\"./helper/makeString\":19}],6:[function(_dereq_,module,exports){          // 50\nvar trim = _dereq_('./trim');                                                                               // 51\n                                                                                                            // 52\nmodule.exports = function clean(str) {                                                                      // 53\n  return trim(str).replace(/\\s+/g, ' ');                                                                    // 54\n};                                                                                                          // 55\n                                                                                                            // 56\n},{\"./trim\":60}],7:[function(_dereq_,module,exports){                                                       // 57\nvar makeString = _dereq_('./helper/makeString');                                                            // 58\n                                                                                                            // 59\nmodule.exports = function(str, substr) {                                                                    // 60\n  str = makeString(str);                                                                                    // 61\n  substr = makeString(substr);                                                                              // 62\n                                                                                                            // 63\n  if (str.length === 0 || substr.length === 0) return 0;                                                    // 64\n                                                                                                            // 65\n  var count = 0,                                                                                            // 66\n    pos = 0,                                                                                                // 67\n    length = substr.length;                                                                                 // 68\n                                                                                                            // 69\n  while (true) {                                                                                            // 70\n    pos = str.indexOf(substr, pos);                                                                         // 71\n    if (pos === -1) break;                                                                                  // 72\n    count++;                                                                                                // 73\n    pos += length;                                                                                          // 74\n  }                                                                                                         // 75\n                                                                                                            // 76\n  return count;                                                                                             // 77\n};                                                                                                          // 78\n                                                                                                            // 79\n},{\"./helper/makeString\":19}],8:[function(_dereq_,module,exports){                                          // 80\nvar trim = _dereq_('./trim');                                                                               // 81\n                                                                                                            // 82\nmodule.exports = function dasherize(str) {                                                                  // 83\n  return trim(str).replace(/([A-Z])/g, '-$1').replace(/[-_\\s]+/g, '-').toLowerCase();                       // 84\n};                                                                                                          // 85\n                                                                                                            // 86\n},{\"./trim\":60}],9:[function(_dereq_,module,exports){                                                       // 87\nvar makeString = _dereq_('./helper/makeString');                                                            // 88\n                                                                                                            // 89\nmodule.exports = function decapitalize(str) {                                                               // 90\n  str = makeString(str);                                                                                    // 91\n  return str.charAt(0).toLowerCase() + str.slice(1);                                                        // 92\n};                                                                                                          // 93\n                                                                                                            // 94\n},{\"./helper/makeString\":19}],10:[function(_dereq_,module,exports){                                         // 95\nvar makeString = _dereq_('./helper/makeString');                                                            // 96\n                                                                                                            // 97\nfunction getIndent(str) {                                                                                   // 98\n  var matches = str.match(/^[\\s\\\\t]*/gm);                                                                   // 99\n  var indent = matches[0].length;                                                                           // 100\n                                                                                                            // 101\n  for (var i = 1; i < matches.length; i++) {                                                                // 102\n    indent = Math.min(matches[i].length, indent);                                                           // 103\n  }                                                                                                         // 104\n                                                                                                            // 105\n  return indent;                                                                                            // 106\n}                                                                                                           // 107\n                                                                                                            // 108\nmodule.exports = function dedent(str, pattern) {                                                            // 109\n  str = makeString(str);                                                                                    // 110\n  var indent = getIndent(str);                                                                              // 111\n  var reg;                                                                                                  // 112\n                                                                                                            // 113\n  if (indent === 0) return str;                                                                             // 114\n                                                                                                            // 115\n  if (typeof pattern === 'string') {                                                                        // 116\n    reg = new RegExp('^' + pattern, 'gm');                                                                  // 117\n  } else {                                                                                                  // 118\n    reg = new RegExp('^[ \\\\t]{' + indent + '}', 'gm');                                                      // 119\n  }                                                                                                         // 120\n                                                                                                            // 121\n  return str.replace(reg, '');                                                                              // 122\n};                                                                                                          // 123\n                                                                                                            // 124\n},{\"./helper/makeString\":19}],11:[function(_dereq_,module,exports){                                         // 125\nvar makeString = _dereq_('./helper/makeString');                                                            // 126\nvar toPositive = _dereq_('./helper/toPositive');                                                            // 127\n                                                                                                            // 128\nmodule.exports = function endsWith(str, ends, position) {                                                   // 129\n  str = makeString(str);                                                                                    // 130\n  ends = '' + ends;                                                                                         // 131\n  if (typeof position == 'undefined') {                                                                     // 132\n    position = str.length - ends.length;                                                                    // 133\n  } else {                                                                                                  // 134\n    position = Math.min(toPositive(position), str.length) - ends.length;                                    // 135\n  }                                                                                                         // 136\n  return position >= 0 && str.indexOf(ends, position) === position;                                         // 137\n};                                                                                                          // 138\n                                                                                                            // 139\n},{\"./helper/makeString\":19,\"./helper/toPositive\":21}],12:[function(_dereq_,module,exports){                // 140\nvar makeString = _dereq_('./helper/makeString');                                                            // 141\nvar escapeChars = _dereq_('./helper/escapeChars');                                                          // 142\nvar reversedEscapeChars = {};                                                                               // 143\n                                                                                                            // 144\nfor(var key in escapeChars) reversedEscapeChars[escapeChars[key]] = key;                                    // 145\nreversedEscapeChars[\"'\"] = '#39';                                                                           // 146\n                                                                                                            // 147\nmodule.exports = function escapeHTML(str) {                                                                 // 148\n  return makeString(str).replace(/[&<>\"']/g, function(m) {                                                  // 149\n    return '&' + reversedEscapeChars[m] + ';';                                                              // 150\n  });                                                                                                       // 151\n};                                                                                                          // 152\n                                                                                                            // 153\n},{\"./helper/escapeChars\":17,\"./helper/makeString\":19}],13:[function(_dereq_,module,exports){               // 154\nmodule.exports = function() {                                                                               // 155\n  var result = {};                                                                                          // 156\n                                                                                                            // 157\n  for (var prop in this) {                                                                                  // 158\n    if (!this.hasOwnProperty(prop) || prop.match(/^(?:include|contains|reverse|join)$/)) continue;          // 159\n    result[prop] = this[prop];                                                                              // 160\n  }                                                                                                         // 161\n                                                                                                            // 162\n  return result;                                                                                            // 163\n};                                                                                                          // 164\n                                                                                                            // 165\n},{}],14:[function(_dereq_,module,exports){                                                                 // 166\n//  Underscore.string                                                                                       // 167\n//  (c) 2010 Esa-Matti Suuronen <esa-matti aet suuronen dot org>                                            // 168\n//  Underscore.string is freely distributable under the terms of the MIT license.                           // 169\n//  Documentation: https://github.com/epeli/underscore.string                                               // 170\n//  Some code is borrowed from MooTools and Alexandru Marasteanu.                                           // 171\n//  Version '3.0.3'                                                                                         // 172\n                                                                                                            // 173\n'use strict';                                                                                               // 174\n                                                                                                            // 175\nfunction s(value) {                                                                                         // 176\n  /* jshint validthis: true */                                                                              // 177\n  if (!(this instanceof s)) return new s(value);                                                            // 178\n  this._wrapped = value;                                                                                    // 179\n}                                                                                                           // 180\n                                                                                                            // 181\ns.VERSION = '3.0.3';                                                                                        // 182\n                                                                                                            // 183\ns.isBlank          = _dereq_('./isBlank');                                                                  // 184\ns.stripTags        = _dereq_('./stripTags');                                                                // 185\ns.capitalize       = _dereq_('./capitalize');                                                               // 186\ns.decapitalize     = _dereq_('./decapitalize');                                                             // 187\ns.chop             = _dereq_('./chop');                                                                     // 188\ns.trim             = _dereq_('./trim');                                                                     // 189\ns.clean            = _dereq_('./clean');                                                                    // 190\ns.count            = _dereq_('./count');                                                                    // 191\ns.chars            = _dereq_('./chars');                                                                    // 192\ns.swapCase         = _dereq_('./swapCase');                                                                 // 193\ns.escapeHTML       = _dereq_('./escapeHTML');                                                               // 194\ns.unescapeHTML     = _dereq_('./unescapeHTML');                                                             // 195\ns.splice           = _dereq_('./splice');                                                                   // 196\ns.insert           = _dereq_('./insert');                                                                   // 197\ns.replaceAll       = _dereq_('./replaceAll');                                                               // 198\ns.include          = _dereq_('./include');                                                                  // 199\ns.join             = _dereq_('./join');                                                                     // 200\ns.lines            = _dereq_('./lines');                                                                    // 201\ns.dedent           = _dereq_('./dedent');                                                                   // 202\ns.reverse          = _dereq_('./reverse');                                                                  // 203\ns.startsWith       = _dereq_('./startsWith');                                                               // 204\ns.endsWith         = _dereq_('./endsWith');                                                                 // 205\ns.pred             = _dereq_('./pred');                                                                     // 206\ns.succ             = _dereq_('./succ');                                                                     // 207\ns.titleize         = _dereq_('./titleize');                                                                 // 208\ns.camelize         = _dereq_('./camelize');                                                                 // 209\ns.underscored      = _dereq_('./underscored');                                                              // 210\ns.dasherize        = _dereq_('./dasherize');                                                                // 211\ns.classify         = _dereq_('./classify');                                                                 // 212\ns.humanize         = _dereq_('./humanize');                                                                 // 213\ns.ltrim            = _dereq_('./ltrim');                                                                    // 214\ns.rtrim            = _dereq_('./rtrim');                                                                    // 215\ns.truncate         = _dereq_('./truncate');                                                                 // 216\ns.prune            = _dereq_('./prune');                                                                    // 217\ns.words            = _dereq_('./words');                                                                    // 218\ns.pad              = _dereq_('./pad');                                                                      // 219\ns.lpad             = _dereq_('./lpad');                                                                     // 220\ns.rpad             = _dereq_('./rpad');                                                                     // 221\ns.lrpad            = _dereq_('./lrpad');                                                                    // 222\ns.sprintf          = _dereq_('./sprintf');                                                                  // 223\ns.vsprintf         = _dereq_('./vsprintf');                                                                 // 224\ns.toNumber         = _dereq_('./toNumber');                                                                 // 225\ns.numberFormat     = _dereq_('./numberFormat');                                                             // 226\ns.strRight         = _dereq_('./strRight');                                                                 // 227\ns.strRightBack     = _dereq_('./strRightBack');                                                             // 228\ns.strLeft          = _dereq_('./strLeft');                                                                  // 229\ns.strLeftBack      = _dereq_('./strLeftBack');                                                              // 230\ns.toSentence       = _dereq_('./toSentence');                                                               // 231\ns.toSentenceSerial = _dereq_('./toSentenceSerial');                                                         // 232\ns.slugify          = _dereq_('./slugify');                                                                  // 233\ns.surround         = _dereq_('./surround');                                                                 // 234\ns.quote            = _dereq_('./quote');                                                                    // 235\ns.unquote          = _dereq_('./unquote');                                                                  // 236\ns.repeat           = _dereq_('./repeat');                                                                   // 237\ns.naturalCmp       = _dereq_('./naturalCmp');                                                               // 238\ns.levenshtein      = _dereq_('./levenshtein');                                                              // 239\ns.toBoolean        = _dereq_('./toBoolean');                                                                // 240\ns.exports          = _dereq_('./exports');                                                                  // 241\ns.escapeRegExp     = _dereq_('./helper/escapeRegExp');                                                      // 242\n                                                                                                            // 243\n// Aliases                                                                                                  // 244\ns.strip     = s.trim;                                                                                       // 245\ns.lstrip    = s.ltrim;                                                                                      // 246\ns.rstrip    = s.rtrim;                                                                                      // 247\ns.center    = s.lrpad;                                                                                      // 248\ns.rjust     = s.lpad;                                                                                       // 249\ns.ljust     = s.rpad;                                                                                       // 250\ns.contains  = s.include;                                                                                    // 251\ns.q         = s.quote;                                                                                      // 252\ns.toBool    = s.toBoolean;                                                                                  // 253\ns.camelcase = s.camelize;                                                                                   // 254\n                                                                                                            // 255\n                                                                                                            // 256\n// Implement chaining                                                                                       // 257\ns.prototype = {                                                                                             // 258\n  value: function value() {                                                                                 // 259\n    return this._wrapped;                                                                                   // 260\n  }                                                                                                         // 261\n};                                                                                                          // 262\n                                                                                                            // 263\nfunction fn2method(key, fn) {                                                                               // 264\n    if (typeof fn !== \"function\") return;                                                                   // 265\n    s.prototype[key] = function() {                                                                         // 266\n      var args = [this._wrapped].concat(Array.prototype.slice.call(arguments));                             // 267\n      var res = fn.apply(null, args);                                                                       // 268\n      // if the result is non-string stop the chain and return the value                                    // 269\n      return typeof res === 'string' ? new s(res) : res;                                                    // 270\n    };                                                                                                      // 271\n}                                                                                                           // 272\n                                                                                                            // 273\n// Copy functions to instance methods for chaining                                                          // 274\nfor (var key in s) fn2method(key, s[key]);                                                                  // 275\n                                                                                                            // 276\nfn2method(\"tap\", function tap(string, fn) {                                                                 // 277\n  return fn(string);                                                                                        // 278\n});                                                                                                         // 279\n                                                                                                            // 280\nfunction prototype2method(methodName) {                                                                     // 281\n  fn2method(methodName, function(context) {                                                                 // 282\n    var args = Array.prototype.slice.call(arguments, 1);                                                    // 283\n    return String.prototype[methodName].apply(context, args);                                               // 284\n  });                                                                                                       // 285\n}                                                                                                           // 286\n                                                                                                            // 287\nvar prototypeMethods = [                                                                                    // 288\n  \"toUpperCase\",                                                                                            // 289\n  \"toLowerCase\",                                                                                            // 290\n  \"split\",                                                                                                  // 291\n  \"replace\",                                                                                                // 292\n  \"slice\",                                                                                                  // 293\n  \"substring\",                                                                                              // 294\n  \"substr\",                                                                                                 // 295\n  \"concat\"                                                                                                  // 296\n];                                                                                                          // 297\n                                                                                                            // 298\nfor (var key in prototypeMethods) prototype2method(prototypeMethods[key]);                                  // 299\n                                                                                                            // 300\n                                                                                                            // 301\nmodule.exports = s;                                                                                         // 302\n                                                                                                            // 303\n},{\"./camelize\":1,\"./capitalize\":2,\"./chars\":3,\"./chop\":4,\"./classify\":5,\"./clean\":6,\"./count\":7,\"./dasherize\":8,\"./decapitalize\":9,\"./dedent\":10,\"./endsWith\":11,\"./escapeHTML\":12,\"./exports\":13,\"./helper/escapeRegExp\":18,\"./humanize\":22,\"./include\":23,\"./insert\":24,\"./isBlank\":25,\"./join\":26,\"./levenshtein\":27,\"./lines\":28,\"./lpad\":29,\"./lrpad\":30,\"./ltrim\":31,\"./naturalCmp\":32,\"./numberFormat\":33,\"./pad\":34,\"./pred\":35,\"./prune\":36,\"./quote\":37,\"./repeat\":38,\"./replaceAll\":39,\"./reverse\":40,\"./rpad\":41,\"./rtrim\":42,\"./slugify\":43,\"./splice\":44,\"./sprintf\":45,\"./startsWith\":46,\"./strLeft\":47,\"./strLeftBack\":48,\"./strRight\":49,\"./strRightBack\":50,\"./stripTags\":51,\"./succ\":52,\"./surround\":53,\"./swapCase\":54,\"./titleize\":55,\"./toBoolean\":56,\"./toNumber\":57,\"./toSentence\":58,\"./toSentenceSerial\":59,\"./trim\":60,\"./truncate\":61,\"./underscored\":62,\"./unescapeHTML\":63,\"./unquote\":64,\"./vsprintf\":65,\"./words\":66}],15:[function(_dereq_,module,exports){\nvar makeString = _dereq_('./makeString');                                                                   // 305\n                                                                                                            // 306\nmodule.exports = function adjacent(str, direction) {                                                        // 307\n  str = makeString(str);                                                                                    // 308\n  if (str.length === 0) {                                                                                   // 309\n    return '';                                                                                              // 310\n  }                                                                                                         // 311\n  return str.slice(0, -1) + String.fromCharCode(str.charCodeAt(str.length - 1) + direction);                // 312\n};                                                                                                          // 313\n                                                                                                            // 314\n},{\"./makeString\":19}],16:[function(_dereq_,module,exports){                                                // 315\nvar escapeRegExp = _dereq_('./escapeRegExp');                                                               // 316\n                                                                                                            // 317\nmodule.exports = function defaultToWhiteSpace(characters) {                                                 // 318\n  if (characters == null)                                                                                   // 319\n    return '\\\\s';                                                                                           // 320\n  else if (characters.source)                                                                               // 321\n    return characters.source;                                                                               // 322\n  else                                                                                                      // 323\n    return '[' + escapeRegExp(characters) + ']';                                                            // 324\n};                                                                                                          // 325\n                                                                                                            // 326\n},{\"./escapeRegExp\":18}],17:[function(_dereq_,module,exports){                                              // 327\nvar escapeChars = {                                                                                         // 328\n  lt: '<',                                                                                                  // 329\n  gt: '>',                                                                                                  // 330\n  quot: '\"',                                                                                                // 331\n  amp: '&',                                                                                                 // 332\n  apos: \"'\"                                                                                                 // 333\n};                                                                                                          // 334\n                                                                                                            // 335\nmodule.exports = escapeChars;                                                                               // 336\n                                                                                                            // 337\n},{}],18:[function(_dereq_,module,exports){                                                                 // 338\nvar makeString = _dereq_('./makeString');                                                                   // 339\n                                                                                                            // 340\nmodule.exports = function escapeRegExp(str) {                                                               // 341\n  return makeString(str).replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1');                                     // 342\n};                                                                                                          // 343\n                                                                                                            // 344\n},{\"./makeString\":19}],19:[function(_dereq_,module,exports){                                                // 345\n/**                                                                                                         // 346\n * Ensure some object is a coerced to a string                                                              // 347\n **/                                                                                                        // 348\nmodule.exports = function makeString(object) {                                                              // 349\n  if (object == null) return '';                                                                            // 350\n  return '' + object;                                                                                       // 351\n};                                                                                                          // 352\n                                                                                                            // 353\n},{}],20:[function(_dereq_,module,exports){                                                                 // 354\nmodule.exports = function strRepeat(str, qty){                                                              // 355\n  if (qty < 1) return '';                                                                                   // 356\n  var result = '';                                                                                          // 357\n  while (qty > 0) {                                                                                         // 358\n    if (qty & 1) result += str;                                                                             // 359\n    qty >>= 1, str += str;                                                                                  // 360\n  }                                                                                                         // 361\n  return result;                                                                                            // 362\n};                                                                                                          // 363\n                                                                                                            // 364\n},{}],21:[function(_dereq_,module,exports){                                                                 // 365\nmodule.exports = function toPositive(number) {                                                              // 366\n  return number < 0 ? 0 : (+number || 0);                                                                   // 367\n};                                                                                                          // 368\n                                                                                                            // 369\n},{}],22:[function(_dereq_,module,exports){                                                                 // 370\nvar capitalize = _dereq_('./capitalize');                                                                   // 371\nvar underscored = _dereq_('./underscored');                                                                 // 372\nvar trim = _dereq_('./trim');                                                                               // 373\n                                                                                                            // 374\nmodule.exports = function humanize(str) {                                                                   // 375\n  return capitalize(trim(underscored(str).replace(/_id$/, '').replace(/_/g, ' ')));                         // 376\n};                                                                                                          // 377\n                                                                                                            // 378\n},{\"./capitalize\":2,\"./trim\":60,\"./underscored\":62}],23:[function(_dereq_,module,exports){                  // 379\nvar makeString = _dereq_('./helper/makeString');                                                            // 380\n                                                                                                            // 381\nmodule.exports = function include(str, needle) {                                                            // 382\n  if (needle === '') return true;                                                                           // 383\n  return makeString(str).indexOf(needle) !== -1;                                                            // 384\n};                                                                                                          // 385\n                                                                                                            // 386\n},{\"./helper/makeString\":19}],24:[function(_dereq_,module,exports){                                         // 387\nvar splice = _dereq_('./splice');                                                                           // 388\n                                                                                                            // 389\nmodule.exports = function insert(str, i, substr) {                                                          // 390\n  return splice(str, i, 0, substr);                                                                         // 391\n};                                                                                                          // 392\n                                                                                                            // 393\n},{\"./splice\":44}],25:[function(_dereq_,module,exports){                                                    // 394\nvar makeString = _dereq_('./helper/makeString');                                                            // 395\n                                                                                                            // 396\nmodule.exports = function isBlank(str) {                                                                    // 397\n  return (/^\\s*$/).test(makeString(str));                                                                   // 398\n};                                                                                                          // 399\n                                                                                                            // 400\n},{\"./helper/makeString\":19}],26:[function(_dereq_,module,exports){                                         // 401\nvar makeString = _dereq_('./helper/makeString');                                                            // 402\nvar slice = [].slice;                                                                                       // 403\n                                                                                                            // 404\nmodule.exports = function join() {                                                                          // 405\n  var args = slice.call(arguments),                                                                         // 406\n    separator = args.shift();                                                                               // 407\n                                                                                                            // 408\n  return args.join(makeString(separator));                                                                  // 409\n};                                                                                                          // 410\n                                                                                                            // 411\n},{\"./helper/makeString\":19}],27:[function(_dereq_,module,exports){                                         // 412\nvar makeString = _dereq_('./helper/makeString');                                                            // 413\n                                                                                                            // 414\nmodule.exports = function levenshtein(str1, str2) {                                                         // 415\n  str1 = makeString(str1);                                                                                  // 416\n  str2 = makeString(str2);                                                                                  // 417\n                                                                                                            // 418\n  var current = [],                                                                                         // 419\n    prev, value;                                                                                            // 420\n                                                                                                            // 421\n  for (var i = 0; i <= str2.length; i++)                                                                    // 422\n    for (var j = 0; j <= str1.length; j++) {                                                                // 423\n      if (i && j)                                                                                           // 424\n        if (str1.charAt(j - 1) === str2.charAt(i - 1))                                                      // 425\n          value = prev;                                                                                     // 426\n        else                                                                                                // 427\n          value = Math.min(current[j], current[j - 1], prev) + 1;                                           // 428\n        else                                                                                                // 429\n          value = i + j;                                                                                    // 430\n                                                                                                            // 431\n      prev = current[j];                                                                                    // 432\n      current[j] = value;                                                                                   // 433\n    }                                                                                                       // 434\n                                                                                                            // 435\n  return current.pop();                                                                                     // 436\n};                                                                                                          // 437\n                                                                                                            // 438\n},{\"./helper/makeString\":19}],28:[function(_dereq_,module,exports){                                         // 439\nmodule.exports = function lines(str) {                                                                      // 440\n  if (str == null) return [];                                                                               // 441\n  return String(str).split(/\\r?\\n/);                                                                        // 442\n};                                                                                                          // 443\n                                                                                                            // 444\n},{}],29:[function(_dereq_,module,exports){                                                                 // 445\nvar pad = _dereq_('./pad');                                                                                 // 446\n                                                                                                            // 447\nmodule.exports = function lpad(str, length, padStr) {                                                       // 448\n  return pad(str, length, padStr);                                                                          // 449\n};                                                                                                          // 450\n                                                                                                            // 451\n},{\"./pad\":34}],30:[function(_dereq_,module,exports){                                                       // 452\nvar pad = _dereq_('./pad');                                                                                 // 453\n                                                                                                            // 454\nmodule.exports = function lrpad(str, length, padStr) {                                                      // 455\n  return pad(str, length, padStr, 'both');                                                                  // 456\n};                                                                                                          // 457\n                                                                                                            // 458\n},{\"./pad\":34}],31:[function(_dereq_,module,exports){                                                       // 459\nvar makeString = _dereq_('./helper/makeString');                                                            // 460\nvar defaultToWhiteSpace = _dereq_('./helper/defaultToWhiteSpace');                                          // 461\nvar nativeTrimLeft = String.prototype.trimLeft;                                                             // 462\n                                                                                                            // 463\nmodule.exports = function ltrim(str, characters) {                                                          // 464\n  str = makeString(str);                                                                                    // 465\n  if (!characters && nativeTrimLeft) return nativeTrimLeft.call(str);                                       // 466\n  characters = defaultToWhiteSpace(characters);                                                             // 467\n  return str.replace(new RegExp('^' + characters + '+'), '');                                               // 468\n};                                                                                                          // 469\n                                                                                                            // 470\n},{\"./helper/defaultToWhiteSpace\":16,\"./helper/makeString\":19}],32:[function(_dereq_,module,exports){       // 471\nmodule.exports = function naturalCmp(str1, str2) {                                                          // 472\n  if (str1 == str2) return 0;                                                                               // 473\n  if (!str1) return -1;                                                                                     // 474\n  if (!str2) return 1;                                                                                      // 475\n                                                                                                            // 476\n  var cmpRegex = /(\\.\\d+)|(\\d+)|(\\D+)/g,                                                                    // 477\n    tokens1 = String(str1).match(cmpRegex),                                                                 // 478\n    tokens2 = String(str2).match(cmpRegex),                                                                 // 479\n    count = Math.min(tokens1.length, tokens2.length);                                                       // 480\n                                                                                                            // 481\n  for (var i = 0; i < count; i++) {                                                                         // 482\n    var a = tokens1[i],                                                                                     // 483\n      b = tokens2[i];                                                                                       // 484\n                                                                                                            // 485\n    if (a !== b) {                                                                                          // 486\n      var num1 = +a;                                                                                        // 487\n      var num2 = +b;                                                                                        // 488\n      if (num1 === num1 && num2 === num2) {                                                                 // 489\n        return num1 > num2 ? 1 : -1;                                                                        // 490\n      }                                                                                                     // 491\n      return a < b ? -1 : 1;                                                                                // 492\n    }                                                                                                       // 493\n  }                                                                                                         // 494\n                                                                                                            // 495\n  if (tokens1.length != tokens2.length)                                                                     // 496\n    return tokens1.length - tokens2.length;                                                                 // 497\n                                                                                                            // 498\n  return str1 < str2 ? -1 : 1;                                                                              // 499\n};                                                                                                          // 500\n                                                                                                            // 501\n},{}],33:[function(_dereq_,module,exports){                                                                 // 502\nmodule.exports = function numberFormat(number, dec, dsep, tsep) {                                           // 503\n  if (isNaN(number) || number == null) return '';                                                           // 504\n                                                                                                            // 505\n  number = number.toFixed(~~dec);                                                                           // 506\n  tsep = typeof tsep == 'string' ? tsep : ',';                                                              // 507\n                                                                                                            // 508\n  var parts = number.split('.'),                                                                            // 509\n    fnums = parts[0],                                                                                       // 510\n    decimals = parts[1] ? (dsep || '.') + parts[1] : '';                                                    // 511\n                                                                                                            // 512\n  return fnums.replace(/(\\d)(?=(?:\\d{3})+$)/g, '$1' + tsep) + decimals;                                     // 513\n};                                                                                                          // 514\n                                                                                                            // 515\n},{}],34:[function(_dereq_,module,exports){                                                                 // 516\nvar makeString = _dereq_('./helper/makeString');                                                            // 517\nvar strRepeat = _dereq_('./helper/strRepeat');                                                              // 518\n                                                                                                            // 519\nmodule.exports = function pad(str, length, padStr, type) {                                                  // 520\n  str = makeString(str);                                                                                    // 521\n  length = ~~length;                                                                                        // 522\n                                                                                                            // 523\n  var padlen = 0;                                                                                           // 524\n                                                                                                            // 525\n  if (!padStr)                                                                                              // 526\n    padStr = ' ';                                                                                           // 527\n  else if (padStr.length > 1)                                                                               // 528\n    padStr = padStr.charAt(0);                                                                              // 529\n                                                                                                            // 530\n  switch (type) {                                                                                           // 531\n    case 'right':                                                                                           // 532\n      padlen = length - str.length;                                                                         // 533\n      return str + strRepeat(padStr, padlen);                                                               // 534\n    case 'both':                                                                                            // 535\n      padlen = length - str.length;                                                                         // 536\n      return strRepeat(padStr, Math.ceil(padlen / 2)) + str + strRepeat(padStr, Math.floor(padlen / 2));    // 537\n    default: // 'left'                                                                                      // 538\n      padlen = length - str.length;                                                                         // 539\n      return strRepeat(padStr, padlen) + str;                                                               // 540\n  }                                                                                                         // 541\n};                                                                                                          // 542\n                                                                                                            // 543\n},{\"./helper/makeString\":19,\"./helper/strRepeat\":20}],35:[function(_dereq_,module,exports){                 // 544\nvar adjacent = _dereq_('./helper/adjacent');                                                                // 545\n                                                                                                            // 546\nmodule.exports = function succ(str) {                                                                       // 547\n  return adjacent(str, -1);                                                                                 // 548\n};                                                                                                          // 549\n                                                                                                            // 550\n},{\"./helper/adjacent\":15}],36:[function(_dereq_,module,exports){                                           // 551\n/**                                                                                                         // 552\n * _s.prune: a more elegant version of truncate                                                             // 553\n * prune extra chars, never leaving a half-chopped word.                                                    // 554\n * @author github.com/rwz                                                                                   // 555\n */                                                                                                         // 556\nvar makeString = _dereq_('./helper/makeString');                                                            // 557\nvar rtrim = _dereq_('./rtrim');                                                                             // 558\n                                                                                                            // 559\nmodule.exports = function prune(str, length, pruneStr) {                                                    // 560\n  str = makeString(str);                                                                                    // 561\n  length = ~~length;                                                                                        // 562\n  pruneStr = pruneStr != null ? String(pruneStr) : '...';                                                   // 563\n                                                                                                            // 564\n  if (str.length <= length) return str;                                                                     // 565\n                                                                                                            // 566\n  var tmpl = function(c) {                                                                                  // 567\n    return c.toUpperCase() !== c.toLowerCase() ? 'A' : ' ';                                                 // 568\n  },                                                                                                        // 569\n    template = str.slice(0, length + 1).replace(/.(?=\\W*\\w*$)/g, tmpl); // 'Hello, world' -> 'HellAA AAAAA' // 570\n                                                                                                            // 571\n  if (template.slice(template.length - 2).match(/\\w\\w/))                                                    // 572\n    template = template.replace(/\\s*\\S+$/, '');                                                             // 573\n  else                                                                                                      // 574\n    template = rtrim(template.slice(0, template.length - 1));                                               // 575\n                                                                                                            // 576\n  return (template + pruneStr).length > str.length ? str : str.slice(0, template.length) + pruneStr;        // 577\n};                                                                                                          // 578\n                                                                                                            // 579\n},{\"./helper/makeString\":19,\"./rtrim\":42}],37:[function(_dereq_,module,exports){                            // 580\nvar surround = _dereq_('./surround');                                                                       // 581\n                                                                                                            // 582\nmodule.exports = function quote(str, quoteChar) {                                                           // 583\n  return surround(str, quoteChar || '\"');                                                                   // 584\n};                                                                                                          // 585\n                                                                                                            // 586\n},{\"./surround\":53}],38:[function(_dereq_,module,exports){                                                  // 587\nvar makeString = _dereq_('./helper/makeString');                                                            // 588\nvar strRepeat = _dereq_('./helper/strRepeat');                                                              // 589\n                                                                                                            // 590\nmodule.exports = function repeat(str, qty, separator) {                                                     // 591\n  str = makeString(str);                                                                                    // 592\n                                                                                                            // 593\n  qty = ~~qty;                                                                                              // 594\n                                                                                                            // 595\n  // using faster implementation if separator is not needed;                                                // 596\n  if (separator == null) return strRepeat(str, qty);                                                        // 597\n                                                                                                            // 598\n  // this one is about 300x slower in Google Chrome                                                         // 599\n  for (var repeat = []; qty > 0; repeat[--qty] = str) {}                                                    // 600\n  return repeat.join(separator);                                                                            // 601\n};                                                                                                          // 602\n                                                                                                            // 603\n},{\"./helper/makeString\":19,\"./helper/strRepeat\":20}],39:[function(_dereq_,module,exports){                 // 604\nvar makeString = _dereq_('./helper/makeString');                                                            // 605\n                                                                                                            // 606\nmodule.exports = function replaceAll(str, find, replace, ignorecase) {                                      // 607\n  var flags = (ignorecase === true)?'gi':'g';                                                               // 608\n  var reg = new RegExp(find, flags);                                                                        // 609\n                                                                                                            // 610\n  return makeString(str).replace(reg, replace);                                                             // 611\n};                                                                                                          // 612\n                                                                                                            // 613\n},{\"./helper/makeString\":19}],40:[function(_dereq_,module,exports){                                         // 614\nvar chars = _dereq_('./chars');                                                                             // 615\n                                                                                                            // 616\nmodule.exports = function reverse(str) {                                                                    // 617\n  return chars(str).reverse().join('');                                                                     // 618\n};                                                                                                          // 619\n                                                                                                            // 620\n},{\"./chars\":3}],41:[function(_dereq_,module,exports){                                                      // 621\nvar pad = _dereq_('./pad');                                                                                 // 622\n                                                                                                            // 623\nmodule.exports = function rpad(str, length, padStr) {                                                       // 624\n  return pad(str, length, padStr, 'right');                                                                 // 625\n};                                                                                                          // 626\n                                                                                                            // 627\n},{\"./pad\":34}],42:[function(_dereq_,module,exports){                                                       // 628\nvar makeString = _dereq_('./helper/makeString');                                                            // 629\nvar defaultToWhiteSpace = _dereq_('./helper/defaultToWhiteSpace');                                          // 630\nvar nativeTrimRight = String.prototype.trimRight;                                                           // 631\n                                                                                                            // 632\nmodule.exports = function rtrim(str, characters) {                                                          // 633\n  str = makeString(str);                                                                                    // 634\n  if (!characters && nativeTrimRight) return nativeTrimRight.call(str);                                     // 635\n  characters = defaultToWhiteSpace(characters);                                                             // 636\n  return str.replace(new RegExp(characters + '+$'), '');                                                    // 637\n};                                                                                                          // 638\n                                                                                                            // 639\n},{\"./helper/defaultToWhiteSpace\":16,\"./helper/makeString\":19}],43:[function(_dereq_,module,exports){       // 640\nvar makeString = _dereq_('./helper/makeString');                                                            // 641\nvar defaultToWhiteSpace = _dereq_('./helper/defaultToWhiteSpace');                                          // 642\nvar trim = _dereq_('./trim');                                                                               // 643\nvar dasherize = _dereq_('./dasherize');                                                                     // 644\n                                                                                                            // 645\nmodule.exports = function slugify(str) {                                                                    // 646\n  var from  = \"ąàáäâãåæăćčĉęèéëêĝĥìíïîĵłľńňòóöőôõðøśșšŝťțŭùúüűûñÿýçżźž\",                                    // 647\n      to    = \"aaaaaaaaaccceeeeeghiiiijllnnoooooooossssttuuuuuunyyczzz\",                                    // 648\n      regex = new RegExp(defaultToWhiteSpace(from), 'g');                                                   // 649\n                                                                                                            // 650\n  str = makeString(str).toLowerCase().replace(regex, function(c){                                           // 651\n    var index = from.indexOf(c);                                                                            // 652\n    return to.charAt(index) || '-';                                                                         // 653\n  });                                                                                                       // 654\n                                                                                                            // 655\n  return trim(dasherize(str.replace(/[^\\w\\s-]/g, '-')), '-');                                               // 656\n};                                                                                                          // 657\n                                                                                                            // 658\n},{\"./dasherize\":8,\"./helper/defaultToWhiteSpace\":16,\"./helper/makeString\":19,\"./trim\":60}],44:[function(_dereq_,module,exports){\nvar chars = _dereq_('./chars');                                                                             // 660\n                                                                                                            // 661\nmodule.exports = function splice(str, i, howmany, substr) {                                                 // 662\n  var arr = chars(str);                                                                                     // 663\n  arr.splice(~~i, ~~howmany, substr);                                                                       // 664\n  return arr.join('');                                                                                      // 665\n};                                                                                                          // 666\n                                                                                                            // 667\n},{\"./chars\":3}],45:[function(_dereq_,module,exports){                                                      // 668\n// sprintf() for JavaScript 0.7-beta1                                                                       // 669\n// http://www.diveintojavascript.com/projects/javascript-sprintf                                            // 670\n//                                                                                                          // 671\n// Copyright (c) Alexandru Marasteanu <alexaholic [at) gmail (dot] com>                                     // 672\n// All rights reserved.                                                                                     // 673\nvar strRepeat = _dereq_('./helper/strRepeat');                                                              // 674\nvar toString = Object.prototype.toString;                                                                   // 675\nvar sprintf = (function() {                                                                                 // 676\n  function get_type(variable) {                                                                             // 677\n    return toString.call(variable).slice(8, -1).toLowerCase();                                              // 678\n  }                                                                                                         // 679\n                                                                                                            // 680\n  var str_repeat = strRepeat;                                                                               // 681\n                                                                                                            // 682\n  var str_format = function() {                                                                             // 683\n    if (!str_format.cache.hasOwnProperty(arguments[0])) {                                                   // 684\n      str_format.cache[arguments[0]] = str_format.parse(arguments[0]);                                      // 685\n    }                                                                                                       // 686\n    return str_format.format.call(null, str_format.cache[arguments[0]], arguments);                         // 687\n  };                                                                                                        // 688\n                                                                                                            // 689\n  str_format.format = function(parse_tree, argv) {                                                          // 690\n    var cursor = 1, tree_length = parse_tree.length, node_type = '', arg, output = [], i, k, match, pad, pad_character, pad_length;\n    for (i = 0; i < tree_length; i++) {                                                                     // 692\n      node_type = get_type(parse_tree[i]);                                                                  // 693\n      if (node_type === 'string') {                                                                         // 694\n        output.push(parse_tree[i]);                                                                         // 695\n      }                                                                                                     // 696\n      else if (node_type === 'array') {                                                                     // 697\n        match = parse_tree[i]; // convenience purposes only                                                 // 698\n        if (match[2]) { // keyword argument                                                                 // 699\n          arg = argv[cursor];                                                                               // 700\n          for (k = 0; k < match[2].length; k++) {                                                           // 701\n            if (!arg.hasOwnProperty(match[2][k])) {                                                         // 702\n              throw new Error(sprintf('[_.sprintf] property \"%s\" does not exist', match[2][k]));            // 703\n            }                                                                                               // 704\n            arg = arg[match[2][k]];                                                                         // 705\n          }                                                                                                 // 706\n        } else if (match[1]) { // positional argument (explicit)                                            // 707\n          arg = argv[match[1]];                                                                             // 708\n        }                                                                                                   // 709\n        else { // positional argument (implicit)                                                            // 710\n          arg = argv[cursor++];                                                                             // 711\n        }                                                                                                   // 712\n                                                                                                            // 713\n        if (/[^s]/.test(match[8]) && (get_type(arg) != 'number')) {                                         // 714\n          throw new Error(sprintf('[_.sprintf] expecting number but found %s', get_type(arg)));             // 715\n        }                                                                                                   // 716\n        switch (match[8]) {                                                                                 // 717\n          case 'b': arg = arg.toString(2); break;                                                           // 718\n          case 'c': arg = String.fromCharCode(arg); break;                                                  // 719\n          case 'd': arg = parseInt(arg, 10); break;                                                         // 720\n          case 'e': arg = match[7] ? arg.toExponential(match[7]) : arg.toExponential(); break;              // 721\n          case 'f': arg = match[7] ? parseFloat(arg).toFixed(match[7]) : parseFloat(arg); break;            // 722\n          case 'o': arg = arg.toString(8); break;                                                           // 723\n          case 's': arg = ((arg = String(arg)) && match[7] ? arg.substring(0, match[7]) : arg); break;      // 724\n          case 'u': arg = Math.abs(arg); break;                                                             // 725\n          case 'x': arg = arg.toString(16); break;                                                          // 726\n          case 'X': arg = arg.toString(16).toUpperCase(); break;                                            // 727\n        }                                                                                                   // 728\n        arg = (/[def]/.test(match[8]) && match[3] && arg >= 0 ? '+'+ arg : arg);                            // 729\n        pad_character = match[4] ? match[4] == '0' ? '0' : match[4].charAt(1) : ' ';                        // 730\n        pad_length = match[6] - String(arg).length;                                                         // 731\n        pad = match[6] ? str_repeat(pad_character, pad_length) : '';                                        // 732\n        output.push(match[5] ? arg + pad : pad + arg);                                                      // 733\n      }                                                                                                     // 734\n    }                                                                                                       // 735\n    return output.join('');                                                                                 // 736\n  };                                                                                                        // 737\n                                                                                                            // 738\n  str_format.cache = {};                                                                                    // 739\n                                                                                                            // 740\n  str_format.parse = function(fmt) {                                                                        // 741\n    var _fmt = fmt, match = [], parse_tree = [], arg_names = 0;                                             // 742\n    while (_fmt) {                                                                                          // 743\n      if ((match = /^[^\\x25]+/.exec(_fmt)) !== null) {                                                      // 744\n        parse_tree.push(match[0]);                                                                          // 745\n      }                                                                                                     // 746\n      else if ((match = /^\\x25{2}/.exec(_fmt)) !== null) {                                                  // 747\n        parse_tree.push('%');                                                                               // 748\n      }                                                                                                     // 749\n      else if ((match = /^\\x25(?:([1-9]\\d*)\\$|\\(([^\\)]+)\\))?(\\+)?(0|'[^$])?(-)?(\\d+)?(?:\\.(\\d+))?([b-fosuxX])/.exec(_fmt)) !== null) {\n        if (match[2]) {                                                                                     // 751\n          arg_names |= 1;                                                                                   // 752\n          var field_list = [], replacement_field = match[2], field_match = [];                              // 753\n          if ((field_match = /^([a-z_][a-z_\\d]*)/i.exec(replacement_field)) !== null) {                     // 754\n            field_list.push(field_match[1]);                                                                // 755\n            while ((replacement_field = replacement_field.substring(field_match[0].length)) !== '') {       // 756\n              if ((field_match = /^\\.([a-z_][a-z_\\d]*)/i.exec(replacement_field)) !== null) {               // 757\n                field_list.push(field_match[1]);                                                            // 758\n              }                                                                                             // 759\n              else if ((field_match = /^\\[(\\d+)\\]/.exec(replacement_field)) !== null) {                     // 760\n                field_list.push(field_match[1]);                                                            // 761\n              }                                                                                             // 762\n              else {                                                                                        // 763\n                throw new Error('[_.sprintf] huh?');                                                        // 764\n              }                                                                                             // 765\n            }                                                                                               // 766\n          }                                                                                                 // 767\n          else {                                                                                            // 768\n            throw new Error('[_.sprintf] huh?');                                                            // 769\n          }                                                                                                 // 770\n          match[2] = field_list;                                                                            // 771\n        }                                                                                                   // 772\n        else {                                                                                              // 773\n          arg_names |= 2;                                                                                   // 774\n        }                                                                                                   // 775\n        if (arg_names === 3) {                                                                              // 776\n          throw new Error('[_.sprintf] mixing positional and named placeholders is not (yet) supported');   // 777\n        }                                                                                                   // 778\n        parse_tree.push(match);                                                                             // 779\n      }                                                                                                     // 780\n      else {                                                                                                // 781\n        throw new Error('[_.sprintf] huh?');                                                                // 782\n      }                                                                                                     // 783\n      _fmt = _fmt.substring(match[0].length);                                                               // 784\n    }                                                                                                       // 785\n    return parse_tree;                                                                                      // 786\n  };                                                                                                        // 787\n                                                                                                            // 788\n  return str_format;                                                                                        // 789\n})();                                                                                                       // 790\n                                                                                                            // 791\nmodule.exports = sprintf;                                                                                   // 792\n                                                                                                            // 793\n},{\"./helper/strRepeat\":20}],46:[function(_dereq_,module,exports){                                          // 794\nvar makeString = _dereq_('./helper/makeString');                                                            // 795\nvar toPositive = _dereq_('./helper/toPositive');                                                            // 796\n                                                                                                            // 797\nmodule.exports = function startsWith(str, starts, position) {                                               // 798\n  str = makeString(str);                                                                                    // 799\n  starts = '' + starts;                                                                                     // 800\n  position = position == null ? 0 : Math.min(toPositive(position), str.length);                             // 801\n  return str.lastIndexOf(starts, position) === position;                                                    // 802\n};                                                                                                          // 803\n                                                                                                            // 804\n},{\"./helper/makeString\":19,\"./helper/toPositive\":21}],47:[function(_dereq_,module,exports){                // 805\nvar makeString = _dereq_('./helper/makeString');                                                            // 806\n                                                                                                            // 807\nmodule.exports = function strLeft(str, sep) {                                                               // 808\n  str = makeString(str);                                                                                    // 809\n  sep = makeString(sep);                                                                                    // 810\n  var pos = !sep ? -1 : str.indexOf(sep);                                                                   // 811\n  return~ pos ? str.slice(0, pos) : str;                                                                    // 812\n};                                                                                                          // 813\n                                                                                                            // 814\n},{\"./helper/makeString\":19}],48:[function(_dereq_,module,exports){                                         // 815\nvar makeString = _dereq_('./helper/makeString');                                                            // 816\n                                                                                                            // 817\nmodule.exports = function strLeftBack(str, sep) {                                                           // 818\n  str = makeString(str);                                                                                    // 819\n  sep = makeString(sep);                                                                                    // 820\n  var pos = str.lastIndexOf(sep);                                                                           // 821\n  return~ pos ? str.slice(0, pos) : str;                                                                    // 822\n};                                                                                                          // 823\n                                                                                                            // 824\n},{\"./helper/makeString\":19}],49:[function(_dereq_,module,exports){                                         // 825\nvar makeString = _dereq_('./helper/makeString');                                                            // 826\n                                                                                                            // 827\nmodule.exports = function strRight(str, sep) {                                                              // 828\n  str = makeString(str);                                                                                    // 829\n  sep = makeString(sep);                                                                                    // 830\n  var pos = !sep ? -1 : str.indexOf(sep);                                                                   // 831\n  return~ pos ? str.slice(pos + sep.length, str.length) : str;                                              // 832\n};                                                                                                          // 833\n                                                                                                            // 834\n},{\"./helper/makeString\":19}],50:[function(_dereq_,module,exports){                                         // 835\nvar makeString = _dereq_('./helper/makeString');                                                            // 836\n                                                                                                            // 837\nmodule.exports = function strRightBack(str, sep) {                                                          // 838\n  str = makeString(str);                                                                                    // 839\n  sep = makeString(sep);                                                                                    // 840\n  var pos = !sep ? -1 : str.lastIndexOf(sep);                                                               // 841\n  return~ pos ? str.slice(pos + sep.length, str.length) : str;                                              // 842\n};                                                                                                          // 843\n                                                                                                            // 844\n},{\"./helper/makeString\":19}],51:[function(_dereq_,module,exports){                                         // 845\nvar makeString = _dereq_('./helper/makeString');                                                            // 846\n                                                                                                            // 847\nmodule.exports = function stripTags(str) {                                                                  // 848\n  return makeString(str).replace(/<\\/?[^>]+>/g, '');                                                        // 849\n};                                                                                                          // 850\n                                                                                                            // 851\n},{\"./helper/makeString\":19}],52:[function(_dereq_,module,exports){                                         // 852\nvar adjacent = _dereq_('./helper/adjacent');                                                                // 853\n                                                                                                            // 854\nmodule.exports = function succ(str) {                                                                       // 855\n  return adjacent(str, 1);                                                                                  // 856\n};                                                                                                          // 857\n                                                                                                            // 858\n},{\"./helper/adjacent\":15}],53:[function(_dereq_,module,exports){                                           // 859\nmodule.exports = function surround(str, wrapper) {                                                          // 860\n  return [wrapper, str, wrapper].join('');                                                                  // 861\n};                                                                                                          // 862\n                                                                                                            // 863\n},{}],54:[function(_dereq_,module,exports){                                                                 // 864\nvar makeString = _dereq_('./helper/makeString');                                                            // 865\n                                                                                                            // 866\nmodule.exports = function swapCase(str) {                                                                   // 867\n  return makeString(str).replace(/\\S/g, function(c) {                                                       // 868\n    return c === c.toUpperCase() ? c.toLowerCase() : c.toUpperCase();                                       // 869\n  });                                                                                                       // 870\n};                                                                                                          // 871\n                                                                                                            // 872\n},{\"./helper/makeString\":19}],55:[function(_dereq_,module,exports){                                         // 873\nvar makeString = _dereq_('./helper/makeString');                                                            // 874\n                                                                                                            // 875\nmodule.exports = function titleize(str) {                                                                   // 876\n  return makeString(str).toLowerCase().replace(/(?:^|\\s|-)\\S/g, function(c) {                               // 877\n    return c.toUpperCase();                                                                                 // 878\n  });                                                                                                       // 879\n};                                                                                                          // 880\n                                                                                                            // 881\n},{\"./helper/makeString\":19}],56:[function(_dereq_,module,exports){                                         // 882\nvar trim = _dereq_('./trim');                                                                               // 883\n                                                                                                            // 884\nfunction boolMatch(s, matchers) {                                                                           // 885\n  var i, matcher, down = s.toLowerCase();                                                                   // 886\n  matchers = [].concat(matchers);                                                                           // 887\n  for (i = 0; i < matchers.length; i += 1) {                                                                // 888\n    matcher = matchers[i];                                                                                  // 889\n    if (!matcher) continue;                                                                                 // 890\n    if (matcher.test && matcher.test(s)) return true;                                                       // 891\n    if (matcher.toLowerCase() === down) return true;                                                        // 892\n  }                                                                                                         // 893\n}                                                                                                           // 894\n                                                                                                            // 895\nmodule.exports = function toBoolean(str, trueValues, falseValues) {                                         // 896\n  if (typeof str === \"number\") str = \"\" + str;                                                              // 897\n  if (typeof str !== \"string\") return !!str;                                                                // 898\n  str = trim(str);                                                                                          // 899\n  if (boolMatch(str, trueValues || [\"true\", \"1\"])) return true;                                             // 900\n  if (boolMatch(str, falseValues || [\"false\", \"0\"])) return false;                                          // 901\n};                                                                                                          // 902\n                                                                                                            // 903\n},{\"./trim\":60}],57:[function(_dereq_,module,exports){                                                      // 904\nvar trim = _dereq_('./trim');                                                                               // 905\nvar parseNumber = function(source) {                                                                        // 906\n  return source * 1 || 0;                                                                                   // 907\n};                                                                                                          // 908\n                                                                                                            // 909\nmodule.exports = function toNumber(num, precision) {                                                        // 910\n  if (num == null) return 0;                                                                                // 911\n  var factor = Math.pow(10, isFinite(precision) ? precision : 0);                                           // 912\n  return Math.round(num * factor) / factor;                                                                 // 913\n};                                                                                                          // 914\n                                                                                                            // 915\n},{\"./trim\":60}],58:[function(_dereq_,module,exports){                                                      // 916\nvar rtrim = _dereq_('./rtrim');                                                                             // 917\n                                                                                                            // 918\nmodule.exports = function toSentence(array, separator, lastSeparator, serial) {                             // 919\n  separator = separator || ', ';                                                                            // 920\n  lastSeparator = lastSeparator || ' and ';                                                                 // 921\n  var a = array.slice(),                                                                                    // 922\n    lastMember = a.pop();                                                                                   // 923\n                                                                                                            // 924\n  if (array.length > 2 && serial) lastSeparator = rtrim(separator) + lastSeparator;                         // 925\n                                                                                                            // 926\n  return a.length ? a.join(separator) + lastSeparator + lastMember : lastMember;                            // 927\n};                                                                                                          // 928\n                                                                                                            // 929\n},{\"./rtrim\":42}],59:[function(_dereq_,module,exports){                                                     // 930\nvar toSentence = _dereq_('./toSentence');                                                                   // 931\n                                                                                                            // 932\nmodule.exports = function toSentenceSerial(array, sep, lastSep) {                                           // 933\n  return toSentence(array, sep, lastSep, true);                                                             // 934\n};                                                                                                          // 935\n                                                                                                            // 936\n},{\"./toSentence\":58}],60:[function(_dereq_,module,exports){                                                // 937\nvar makeString = _dereq_('./helper/makeString');                                                            // 938\nvar defaultToWhiteSpace = _dereq_('./helper/defaultToWhiteSpace');                                          // 939\nvar nativeTrim = String.prototype.trim;                                                                     // 940\n                                                                                                            // 941\nmodule.exports = function trim(str, characters) {                                                           // 942\n  str = makeString(str);                                                                                    // 943\n  if (!characters && nativeTrim) return nativeTrim.call(str);                                               // 944\n  characters = defaultToWhiteSpace(characters);                                                             // 945\n  return str.replace(new RegExp('^' + characters + '+|' + characters + '+$', 'g'), '');                     // 946\n};                                                                                                          // 947\n                                                                                                            // 948\n},{\"./helper/defaultToWhiteSpace\":16,\"./helper/makeString\":19}],61:[function(_dereq_,module,exports){       // 949\nvar makeString = _dereq_('./helper/makeString');                                                            // 950\n                                                                                                            // 951\nmodule.exports = function truncate(str, length, truncateStr) {                                              // 952\n  str = makeString(str);                                                                                    // 953\n  truncateStr = truncateStr || '...';                                                                       // 954\n  length = ~~length;                                                                                        // 955\n  return str.length > length ? str.slice(0, length) + truncateStr : str;                                    // 956\n};                                                                                                          // 957\n                                                                                                            // 958\n},{\"./helper/makeString\":19}],62:[function(_dereq_,module,exports){                                         // 959\nvar trim = _dereq_('./trim');                                                                               // 960\n                                                                                                            // 961\nmodule.exports = function underscored(str) {                                                                // 962\n  return trim(str).replace(/([a-z\\d])([A-Z]+)/g, '$1_$2').replace(/[-\\s]+/g, '_').toLowerCase();            // 963\n};                                                                                                          // 964\n                                                                                                            // 965\n},{\"./trim\":60}],63:[function(_dereq_,module,exports){                                                      // 966\nvar makeString = _dereq_('./helper/makeString');                                                            // 967\nvar escapeChars = _dereq_('./helper/escapeChars');                                                          // 968\n                                                                                                            // 969\nmodule.exports = function unescapeHTML(str) {                                                               // 970\n  return makeString(str).replace(/\\&([^;]+);/g, function(entity, entityCode) {                              // 971\n    var match;                                                                                              // 972\n                                                                                                            // 973\n    if (entityCode in escapeChars) {                                                                        // 974\n      return escapeChars[entityCode];                                                                       // 975\n    } else if (match = entityCode.match(/^#x([\\da-fA-F]+)$/)) {                                             // 976\n      return String.fromCharCode(parseInt(match[1], 16));                                                   // 977\n    } else if (match = entityCode.match(/^#(\\d+)$/)) {                                                      // 978\n      return String.fromCharCode(~~match[1]);                                                               // 979\n    } else {                                                                                                // 980\n      return entity;                                                                                        // 981\n    }                                                                                                       // 982\n  });                                                                                                       // 983\n};                                                                                                          // 984\n                                                                                                            // 985\n},{\"./helper/escapeChars\":17,\"./helper/makeString\":19}],64:[function(_dereq_,module,exports){               // 986\nmodule.exports = function unquote(str, quoteChar) {                                                         // 987\n  quoteChar = quoteChar || '\"';                                                                             // 988\n  if (str[0] === quoteChar && str[str.length - 1] === quoteChar)                                            // 989\n    return str.slice(1, str.length - 1);                                                                    // 990\n  else return str;                                                                                          // 991\n};                                                                                                          // 992\n                                                                                                            // 993\n},{}],65:[function(_dereq_,module,exports){                                                                 // 994\nvar sprintf = _dereq_('./sprintf');                                                                         // 995\n                                                                                                            // 996\nmodule.exports = function vsprintf(fmt, argv) {                                                             // 997\n  argv.unshift(fmt);                                                                                        // 998\n  return sprintf.apply(null, argv);                                                                         // 999\n};                                                                                                          // 1000\n                                                                                                            // 1001\n},{\"./sprintf\":45}],66:[function(_dereq_,module,exports){                                                   // 1002\nvar isBlank = _dereq_('./isBlank');                                                                         // 1003\nvar trim = _dereq_('./trim');                                                                               // 1004\n                                                                                                            // 1005\nmodule.exports = function words(str, delimiter) {                                                           // 1006\n  if (isBlank(str)) return [];                                                                              // 1007\n  return trim(str, delimiter).split(delimiter || /\\s+/);                                                    // 1008\n};                                                                                                          // 1009\n                                                                                                            // 1010\n},{\"./isBlank\":25,\"./trim\":60}]},{},[14])                                                                   // 1011\n(14)                                                                                                        // 1012\n});                                                                                                         // 1013\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                          //\n// packages/underscorestring:underscore.string/meteor-post.js                                               //\n//                                                                                                          //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                            //\n// s will be picked up by Meteor and exported                                                               // 1\ns = module.exports;                                                                                         // 2\n                                                                                                            // 3\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\n(function (pkg, symbols) {\n  for (var s in symbols)\n    (s in pkg) || (pkg[s] = symbols[s]);\n})(Package['underscorestring:underscore.string'] = {}, {\n  s: s\n});\n\n})();\n","servePath":"/packages/underscorestring_underscore.string.js"}]