{"head":"","body":"","js":"\nTemplate.__checkName(\"graphPeity\");\nTemplate[\"graphPeity\"] = new Template(\"Template.graphPeity\", (function() {\n  var view = this;\n  return [ HTML.Raw(\"<!-- Page heading -->\\n    \"), Blaze._TemplateWith(function() {\n    return {\n      title: Spacebars.call(\"Peity charts\"),\n      category: Spacebars.call(\"Graphs\")\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"pageHeading\"));\n  }), \"\\n\\n    \", HTML.DIV({\n    \"class\": \"wrapper wrapper-content animated fadeInDown\"\n  }, \"\\n\\n        \", HTML.DIV({\n    \"class\": \"row\"\n  }, \"\\n            \", HTML.Raw('<div class=\"col-lg-5\">\\n                <div class=\"jumbotron\">\\n                    <h1>Peity Charts</h1>\\n                    <p>Is a perfect library for inline graphics visualization data.</p>\\n                    <p><a href=\"http://benpickles.github.io/peity/\" target=\"_blank\" class=\"btn btn-primary btn-lg\" role=\"button\">Learn more about Peity</a>\\n                    </p>\\n                </div>\\n            </div>'), \"\\n            \", HTML.DIV({\n    \"class\": \"col-lg-7\"\n  }, \"\\n                \", HTML.DIV({\n    \"class\": \"ibox float-e-margins\"\n  }, \"\\n                    \", HTML.DIV({\n    \"class\": \"ibox-title\"\n  }, \"\\n                        \", HTML.Raw(\"<h5>Pie Charts <small>With custom colors.</small></h5>\"), \"\\n                        \", Spacebars.include(view.lookupTemplate(\"iboxTools\")), \"\\n                    \"), \"\\n                    \", HTML.DIV(\"\\n                        \", HTML.TABLE({\n    \"class\": \"table table-bordered white-bg\"\n  }, \"\\n                            \", HTML.THEAD(\"\\n                            \", HTML.TR(\"\\n                                \", HTML.TH(\"Graph\"), \"\\n                                \", HTML.TH(\"Code\"), \"\\n                            \"), \"\\n                            \"), \"\\n\\n                            \", HTML.TBODY(\"\\n                            \", HTML.TR(\"\\n                                \", HTML.TD(\"\\n                                    \", HTML.SPAN({\n    \"class\": \"pie\"\n  }, \"1/5\"), \"\\n                                \"), \"\\n                                \", HTML.TD(\"\\n                                    \", HTML.CODE(HTML.CharRef({\n    html: \"&lt;\",\n    str: \"<\"\n  }), 'span class=\"pie\"', HTML.CharRef({\n    html: \"&gt;\",\n    str: \">\"\n  }), \"1/5\", HTML.CharRef({\n    html: \"&lt;\",\n    str: \"<\"\n  }), \"/span\", HTML.CharRef({\n    html: \"&gt;\",\n    str: \">\"\n  })), \"\\n                                \"), \"\\n                            \"), \"\\n                            \", HTML.TR(\"\\n                                \", HTML.TD(\"\\n                                    \", HTML.SPAN({\n    \"class\": \"pie\"\n  }, \"226/360\"), \"\\n                                \"), \"\\n                                \", HTML.TD(\"\\n                                    \", HTML.CODE(HTML.CharRef({\n    html: \"&lt;\",\n    str: \"<\"\n  }), 'span class=\"pie\"', HTML.CharRef({\n    html: \"&gt;\",\n    str: \">\"\n  }), \"226/360\", HTML.CharRef({\n    html: \"&lt;\",\n    str: \"<\"\n  }), \"/span\", HTML.CharRef({\n    html: \"&gt;\",\n    str: \">\"\n  })), \"\\n                                \"), \"\\n                            \"), \"\\n                            \", HTML.TR(\"\\n                                \", HTML.TD(\"\\n                                    \", HTML.SPAN({\n    \"class\": \"pie\"\n  }, \"0.52/1.561\"), \"\\n                                \"), \"\\n                                \", HTML.TD(\"\\n                                    \", HTML.CODE(HTML.CharRef({\n    html: \"&lt;\",\n    str: \"<\"\n  }), 'span class=\"pie\"', HTML.CharRef({\n    html: \"&gt;\",\n    str: \">\"\n  }), \"0.52/1.561\", HTML.CharRef({\n    html: \"&lt;\",\n    str: \"<\"\n  }), \"/span\", HTML.CharRef({\n    html: \"&gt;\",\n    str: \">\"\n  })), \"\\n                                \"), \"\\n                            \"), \"\\n                            \", HTML.TR(\"\\n                                \", HTML.TD(\"\\n                                    \", HTML.SPAN({\n    \"class\": \"pie\"\n  }, \"1,4\"), \"\\n                                \"), \"\\n                                \", HTML.TD(\"\\n                                    \", HTML.CODE(HTML.CharRef({\n    html: \"&lt;\",\n    str: \"<\"\n  }), 'span class=\"pie\"', HTML.CharRef({\n    html: \"&gt;\",\n    str: \">\"\n  }), \"1,4\", HTML.CharRef({\n    html: \"&lt;\",\n    str: \"<\"\n  }), \"/span\", HTML.CharRef({\n    html: \"&gt;\",\n    str: \">\"\n  })), \"\\n                                \"), \"\\n                            \"), \"\\n                            \", HTML.TR(\"\\n                                \", HTML.TD(\"\\n                                    \", HTML.SPAN({\n    \"class\": \"pie\"\n  }, \"226,134\"), \"\\n                                \"), \"\\n                                \", HTML.TD(\"\\n                                    \", HTML.CODE(HTML.CharRef({\n    html: \"&lt;\",\n    str: \"<\"\n  }), 'span class=\"pie\"', HTML.CharRef({\n    html: \"&gt;\",\n    str: \">\"\n  }), \"226,134\", HTML.CharRef({\n    html: \"&lt;\",\n    str: \"<\"\n  }), \"/span\", HTML.CharRef({\n    html: \"&gt;\",\n    str: \">\"\n  })), \"\\n                                \"), \"\\n                            \"), \"\\n                            \", HTML.TR(\"\\n                                \", HTML.TD(\"\\n                                    \", HTML.SPAN({\n    \"class\": \"pie\"\n  }, \"0.52,1.041\"), \"\\n                                \"), \"\\n                                \", HTML.TD(\"\\n                                    \", HTML.CODE(HTML.CharRef({\n    html: \"&lt;\",\n    str: \"<\"\n  }), 'span class=\"pie\"', HTML.CharRef({\n    html: \"&gt;\",\n    str: \">\"\n  }), \"0.52,1.041\", HTML.CharRef({\n    html: \"&lt;\",\n    str: \"<\"\n  }), \"/span\", HTML.CharRef({\n    html: \"&gt;\",\n    str: \">\"\n  })), \"\\n                                \"), \"\\n                            \"), \"\\n                            \"), \"\\n                        \"), \"\\n                    \"), \"\\n                \"), \"\\n            \"), \"\\n        \"), \"\\n        \", HTML.DIV({\n    \"class\": \"row\"\n  }, \"\\n            \", HTML.DIV({\n    \"class\": \"col-lg-12\"\n  }, \"\\n                \", HTML.DIV({\n    \"class\": \"ibox float-e-margins\"\n  }, \"\\n                    \", HTML.DIV({\n    \"class\": \"ibox-title\"\n  }, \"\\n                        \", HTML.Raw(\"<h5>Line and Bars Charts</h5>\"), \"\\n                        \", Spacebars.include(view.lookupTemplate(\"iboxTools\")), \"\\n                    \"), \"\\n                    \", HTML.DIV(\"\\n                        \", HTML.TABLE({\n    \"class\": \"table table-bordered white-bg\"\n  }, \"\\n                            \", HTML.THEAD(\"\\n                            \", HTML.TR(\"\\n                                \", HTML.TH(\"Graph\"), \"\\n                                \", HTML.TH(\"Code\"), \"\\n                            \"), \"\\n                            \"), \"\\n                            \", HTML.TBODY(\"\\n                            \", HTML.TR(\"\\n                                \", HTML.TD(\"\\n                                    \", HTML.SPAN({\n    \"data-diameter\": \"40\",\n    \"class\": \"updating-chart\"\n  }, \"5,3,9,6,5,9,7,3,5,2,5,3,9,6,5,9,7,3,5,2\"), \"\\n                                \"), \"\\n                                \", HTML.TD(\"\\n                                    \", HTML.CODE(HTML.CharRef({\n    html: \"&lt;\",\n    str: \"<\"\n  }), 'span class=\"line\"', HTML.CharRef({\n    html: \"&gt;\",\n    str: \">\"\n  }), \"5,3,9,6,5,9,7,3,5,2\", HTML.CharRef({\n    html: \"&lt;\",\n    str: \"<\"\n  }), \"/span\", HTML.CharRef({\n    html: \"&gt;\",\n    str: \">\"\n  })), \"\\n                                \"), \"\\n                            \"), \"\\n                            \", HTML.TR(\"\\n                                \", HTML.TD(\"\\n                                    \", HTML.SPAN({\n    \"class\": \"line\"\n  }, \"5,3,9,6,5,9,7,3,5,2\"), \"\\n                                \"), \"\\n                                \", HTML.TD(\"\\n                                    \", HTML.CODE(HTML.CharRef({\n    html: \"&lt;\",\n    str: \"<\"\n  }), 'span class=\"line\"', HTML.CharRef({\n    html: \"&gt;\",\n    str: \">\"\n  }), \"5,3,9,6,5,9,7,3,5,2\", HTML.CharRef({\n    html: \"&lt;\",\n    str: \"<\"\n  }), \"/span\", HTML.CharRef({\n    html: \"&gt;\",\n    str: \">\"\n  })), \"\\n                                \"), \"\\n                            \"), \"\\n                            \", HTML.TR(\"\\n                                \", HTML.TD(\"\\n                                    \", HTML.SPAN({\n    \"class\": \"line\"\n  }, \"5,3,2,-1,-3,-2,2,3,5,2\"), \"\\n                                \"), \"\\n                                \", HTML.TD(\"\\n                                    \", HTML.CODE(HTML.CharRef({\n    html: \"&lt;\",\n    str: \"<\"\n  }), 'span class=\"line\"', HTML.CharRef({\n    html: \"&gt;\",\n    str: \">\"\n  }), \"5,3,2,-1,-3,-2,2,3,5,2\", HTML.CharRef({\n    html: \"&lt;\",\n    str: \"<\"\n  }), \"/span\", HTML.CharRef({\n    html: \"&gt;\",\n    str: \">\"\n  })), \"\\n                                \"), \"\\n                            \"), \"\\n                            \", HTML.TR(\"\\n                                \", HTML.TD(\"\\n                                    \", HTML.SPAN({\n    \"class\": \"line\"\n  }, \"0,-3,-6,-4,-5,-4,-7,-3,-5,-2\"), \"\\n                                \"), \"\\n                                \", HTML.TD(\"\\n                                    \", HTML.CODE(HTML.CharRef({\n    html: \"&lt;\",\n    str: \"<\"\n  }), 'span class=\"line\"', HTML.CharRef({\n    html: \"&gt;\",\n    str: \">\"\n  }), \"0,-3,-6,-4,-5,-4,-7,-3,-5,-2\", HTML.CharRef({\n    html: \"&lt;\",\n    str: \"<\"\n  }), \"/span\", HTML.CharRef({\n    html: \"&gt;\",\n    str: \">\"\n  })), \"\\n                                \"), \"\\n                            \"), \"\\n                            \", HTML.TR(\"\\n                                \", HTML.TD(\"\\n                                    \", HTML.SPAN({\n    \"class\": \"bar\"\n  }, \"5,3,9,6,5,9,7,3,5,2\"), \"\\n                                \"), \"\\n                                \", HTML.TD(\"\\n                                    \", HTML.CODE(HTML.CharRef({\n    html: \"&lt;\",\n    str: \"<\"\n  }), 'span class=\"bar\"', HTML.CharRef({\n    html: \"&gt;\",\n    str: \">\"\n  }), \"5,3,9,6,5,9,7,3,5,2\", HTML.CharRef({\n    html: \"&lt;\",\n    str: \"<\"\n  }), \"/span\", HTML.CharRef({\n    html: \"&gt;\",\n    str: \">\"\n  })), \"\\n                                \"), \"\\n                            \"), \"\\n                            \", HTML.TR(\"\\n                                \", HTML.TD(\"\\n                                    \", HTML.SPAN({\n    \"class\": \"bar\"\n  }, \"5,3,2,-1,-3,-2,2,3,5,2\"), \"\\n                                \"), \"\\n                                \", HTML.TD(\"\\n                                    \", HTML.CODE(HTML.CharRef({\n    html: \"&lt;\",\n    str: \"<\"\n  }), 'span class=\"bar\"', HTML.CharRef({\n    html: \"&gt;\",\n    str: \">\"\n  }), \"5,3,2,-1,-3,-2,2,3,5,2\", HTML.CharRef({\n    html: \"&lt;\",\n    str: \"<\"\n  }), \"/span\", HTML.CharRef({\n    html: \"&gt;\",\n    str: \">\"\n  })), \"\\n                                \"), \"\\n                            \"), \"\\n                            \"), \"\\n                        \"), \"\\n                    \"), \"\\n                \"), \"\\n            \"), \"\\n\\n        \"), \"\\n    \") ];\n}));\n","bodyAttrs":{}}