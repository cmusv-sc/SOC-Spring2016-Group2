{"version":3,"sources":["meteor://ðŸ’»app/packages/http/httpcall_common.js","meteor://ðŸ’»app/packages/http/httpcall_server.js","meteor://ðŸ’»app/packages/http/deprecated.js"],"names":[],"mappings":"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","file":"/packages/http.js","sourcesContent":["const MAX_LENGTH = 500; // if you change this, also change the appropriate test\n\nmakeErrorByStatus = function(statusCode, content) {\n  let message = `failed [${statusCode}]`;\n\n  if (content) {\n    const stringContent = typeof content == \"string\" ?\n      content : content.toString();\n\n    message += ' ' + truncate(stringContent.replace(/\\n/g, ' '), MAX_LENGTH);\n  }\n\n  return new Error(message);\n};\n\nfunction truncate(str, length) {\n  return str.length > length ? str.slice(0, length) + '...' : str;\n}\n\n// Fill in `response.data` if the content-type is JSON.\npopulateData = function(response) {\n  // Read Content-Type header, up to a ';' if there is one.\n  // A typical header might be \"application/json; charset=utf-8\"\n  // or just \"application/json\".\n  var contentType = (response.headers['content-type'] || ';').split(';')[0];\n\n  // Only try to parse data as JSON if server sets correct content type.\n  if (_.include(['application/json', 'text/javascript',\n      'application/javascript', 'application/x-javascript'], contentType)) {\n    try {\n      response.data = JSON.parse(response.content);\n    } catch (err) {\n      response.data = null;\n    }\n  } else {\n    response.data = null;\n  }\n};\n\nHTTP = {};\n\n/**\n * @summary Send an HTTP `GET` request. Equivalent to calling [`HTTP.call`](#http_call) with \"GET\" as the first argument.\n * @param {String} url The URL to which the request should be sent.\n * @param {Object} [callOptions] Options passed on to [`HTTP.call`](#http_call).\n * @param {Function} [asyncCallback] Callback that is called when the request is completed. Required on the client.\n * @locus Anywhere\n */\nHTTP.get = function (/* varargs */) {\n  return HTTP.call.apply(this, [\"GET\"].concat(_.toArray(arguments)));\n};\n\n/**\n * @summary Send an HTTP `POST` request. Equivalent to calling [`HTTP.call`](#http_call) with \"POST\" as the first argument.\n * @param {String} url The URL to which the request should be sent.\n * @param {Object} [callOptions] Options passed on to [`HTTP.call`](#http_call).\n * @param {Function} [asyncCallback] Callback that is called when the request is completed. Required on the client.\n * @locus Anywhere\n */\nHTTP.post = function (/* varargs */) {\n  return HTTP.call.apply(this, [\"POST\"].concat(_.toArray(arguments)));\n};\n\n/**\n * @summary Send an HTTP `PUT` request. Equivalent to calling [`HTTP.call`](#http_call) with \"PUT\" as the first argument.\n * @param {String} url The URL to which the request should be sent.\n * @param {Object} [callOptions] Options passed on to [`HTTP.call`](#http_call).\n * @param {Function} [asyncCallback] Callback that is called when the request is completed. Required on the client.\n * @locus Anywhere\n */\nHTTP.put = function (/* varargs */) {\n  return HTTP.call.apply(this, [\"PUT\"].concat(_.toArray(arguments)));\n};\n\n/**\n * @summary Send an HTTP `DELETE` request. Equivalent to calling [`HTTP.call`](#http_call) with \"DELETE\" as the first argument. (Named `del` to avoid conflict with the Javascript keyword `delete`)\n * @param {String} url The URL to which the request should be sent.\n * @param {Object} [callOptions] Options passed on to [`HTTP.call`](#http_call).\n * @param {Function} [asyncCallback] Callback that is called when the request is completed. Required on the client.\n * @locus Anywhere\n */\nHTTP.del = function (/* varargs */) {\n  return HTTP.call.apply(this, [\"DELETE\"].concat(_.toArray(arguments)));\n};\n\n/**\n * @summary Send an HTTP `PATCH` request. Equivalent to calling [`HTTP.call`](#http_call) with \"PATCH\" as the first argument.\n * @param {String} url The URL to which the request should be sent.\n * @param {Object} [callOptions] Options passed on to [`HTTP.call`](#http_call).\n * @param {Function} [asyncCallback] Callback that is called when the request is completed. Required on the client.\n * @locus Anywhere\n */\nHTTP.patch = function (/* varargs */) {\n  return HTTP.call.apply(this, [\"PATCH\"].concat(_.toArray(arguments)));\n};\n","var path = Npm.require('path');\nvar request = Npm.require('request');\nvar url_util = Npm.require('url');\n\nHTTPInternals = {\n  NpmModules: {\n    request: {\n      version: Npm.require('request/package.json').version,\n      module: request\n    }\n  }\n};\n\n// _call always runs asynchronously; HTTP.call, defined below,\n// wraps _call and runs synchronously when no callback is provided.\nvar _call = function(method, url, options, callback) {\n\n  ////////// Process arguments //////////\n\n  if (! callback && typeof options === \"function\") {\n    // support (method, url, callback) argument list\n    callback = options;\n    options = null;\n  }\n\n  options = options || {};\n\n  if (_.has(options, 'beforeSend')) {\n    throw new Error(\"Option beforeSend not supported on server.\");\n  }\n\n  method = (method || \"\").toUpperCase();\n\n  if (! /^https?:\\/\\//.test(url))\n    throw new Error(\"url must be absolute and start with http:// or https://\");\n\n  var headers = {};\n\n  var content = options.content;\n  if (options.data) {\n    content = JSON.stringify(options.data);\n    headers['Content-Type'] = 'application/json';\n  }\n\n\n  var paramsForUrl, paramsForBody;\n  if (content || method === \"GET\" || method === \"HEAD\")\n    paramsForUrl = options.params;\n  else\n    paramsForBody = options.params;\n\n  var newUrl = URL._constructUrl(url, options.query, paramsForUrl);\n\n  if (options.auth) {\n    if (options.auth.indexOf(':') < 0)\n      throw new Error('auth option should be of the form \"username:password\"');\n    headers['Authorization'] = \"Basic \"+\n      (new Buffer(options.auth, \"ascii\")).toString(\"base64\");\n  }\n\n  if (paramsForBody) {\n    content = URL._encodeParams(paramsForBody);\n    headers['Content-Type'] = \"application/x-www-form-urlencoded\";\n  }\n\n  _.extend(headers, options.headers || {});\n\n  // wrap callback to add a 'response' property on an error, in case\n  // we have both (http 4xx/5xx error, which has a response payload)\n  callback = (function(callback) {\n    return function(error, response) {\n      if (error && response)\n        error.response = response;\n      callback(error, response);\n    };\n  })(callback);\n\n  // safety belt: only call the callback once.\n  callback = _.once(callback);\n\n\n  ////////// Kickoff! //////////\n\n  // Allow users to override any request option with the npmRequestOptions\n  // option.\n  var reqOptions = _.extend({\n    url: newUrl,\n    method: method,\n    encoding: \"utf8\",\n    jar: false,\n    timeout: options.timeout,\n    body: content,\n    followRedirect: options.followRedirects,\n    // Follow redirects on non-GET requests\n    // also. (https://github.com/meteor/meteor/issues/2808)\n    followAllRedirects: options.followRedirects,\n    headers: headers\n  }, options.npmRequestOptions || {});\n\n  request(reqOptions, function(error, res, body) {\n    var response = null;\n\n    if (! error) {\n\n      response = {};\n      response.statusCode = res.statusCode;\n      response.content = body;\n      response.headers = res.headers;\n\n      populateData(response);\n\n      if (response.statusCode >= 400)\n        error = makeErrorByStatus(response.statusCode, response.content);\n    }\n\n    callback(error, response);\n\n  });\n};\n\nHTTP.call = Meteor.wrapAsync(_call);\n","// The HTTP object used to be called Meteor.http.\n// XXX COMPAT WITH 0.6.4\nMeteor.http = HTTP;\n"]}